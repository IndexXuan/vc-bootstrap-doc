{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"src/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/vue/source/css/benchmark.styl","path":"css/benchmark.styl","modified":1,"renderable":1},{"_id":"themes/vue/source/css/common.css","path":"css/common.css","modified":1,"renderable":1},{"_id":"themes/vue/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/vue/source/css/page.styl","path":"css/page.styl","modified":1,"renderable":1},{"_id":"themes/vue/source/images/check.png","path":"images/check.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/components.png","path":"images/components.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/down.png","path":"images/down.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/download.png","path":"images/download.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/icons.png","path":"images/icons.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/menu.png","path":"images/menu.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/mvvm.png","path":"images/mvvm.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/search.png","path":"images/search.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/state.png","path":"images/state.png","modified":1,"renderable":1},{"_id":"themes/vue/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":1,"renderable":1},{"_id":"themes/vue/source/js/common.js","path":"js/common.js","modified":1,"renderable":1},{"_id":"themes/vue/source/js/smooth-scroll.min.js","path":"js/smooth-scroll.min.js","modified":1,"renderable":1},{"_id":"themes/vue/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":1,"renderable":1},{"_id":"themes/vue/source/images/data.png","path":"images/data.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/lifecycle.png","path":"images/lifecycle.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/vue-component.png","path":"images/vue-component.png","modified":1,"renderable":1},{"_id":"themes/vue/source/js/vue.min.js","path":"js/vue.min.js","modified":1,"renderable":1},{"_id":"themes/vue/source/images/vue-component-with-pre-processors.png","path":"images/vue-component-with-pre-processors.png","modified":1,"renderable":1},{"_id":"themes/vue/source/js/vue.js","path":"js/vue.js","modified":1,"renderable":1},{"_id":"themes/vue/source/images/hn.png","path":"images/hn.png","modified":1,"renderable":1}],"Cache":[{"_id":"src/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1473770571096},{"_id":"src/Readme.markdown","hash":"a5c7fb3c0f05eca991b25f1acafb3076ee2d3461","modified":1473770571096},{"_id":"src/index.md","hash":"fd945de1e31344f0d8be59bcc87e3f5fda468e11","modified":1473770571100},{"_id":"themes/vue/_config.yml","hash":"06d5a200261a0d0bca0f71715b3b445e3ab0dcc7","modified":1473770571100},{"_id":"src/_api_old/directives.md","hash":"161b013d64871a4ecd27046c2a4105226f001b00","modified":1473770571096},{"_id":"src/_api_old/elements.md","hash":"ca5aad0bf8ca1bc92407863d7ba86a7ccb5950f5","modified":1473770571096},{"_id":"src/_api_old/filters.md","hash":"220ef8b3e3a8474012fe4afae2529f7e7e5f9846","modified":1473770571096},{"_id":"src/_api_old/global-api.md","hash":"5255023980531980ee837b36ae5fffab8c26f73c","modified":1473770571100},{"_id":"src/_api_old/index.md","hash":"beb0cd5cc455ee35dfcb865fd9e0b87835633632","modified":1473770571100},{"_id":"src/_api_old/instance-methods.md","hash":"38e41d30feaa1d16c95d7f65897e3a180834e57d","modified":1473770571100},{"_id":"src/_api_old/instance-properties.md","hash":"85c3ee520e2c08098f93e0244dff80116327b149","modified":1473770571100},{"_id":"src/_api_old/options.md","hash":"460365b0562bbc0ef8ded54eb97af7fd7df7ad2d","modified":1473770571100},{"_id":"src/_guide_old/directives.md","hash":"50514a7e8b8fa416765ce32f98d31b434a0bce8e","modified":1473770571100},{"_id":"src/_guide_old/filters.md","hash":"54eee428fbe47a94dd5c262b8570131c01047b76","modified":1473770571100},{"_id":"src/_guide_old/index.md","hash":"173e39b54b66b964f8ca8799bc0509d12ec7b895","modified":1473770571100},{"_id":"src/_posts/vc-bootstrap.md","hash":"e4c345eba5dba0f8b805afd8b4fdea375ee4509d","modified":1473770571100},{"_id":"src/blog/index.md","hash":"a2f85ed0175e1bb4ede9ae1ff2aebfaf6c091675","modified":1473770571100},{"_id":"src/api/index.md","hash":"d4674740f31d5b838a9d8ee78ad2afd79c2ca1c8","modified":1473770571100},{"_id":"src/examples/commits.md","hash":"0ad8deac2fbd61e85e36c560904d0d00416dba16","modified":1473770571100},{"_id":"src/examples/elastic-header.md","hash":"027f06f667cb2725a7715f5ba21dde3d98970e6d","modified":1473770571100},{"_id":"src/examples/firebase.md","hash":"941c7a00a430b87fd7f978a8864574588cc887ac","modified":1473770571100},{"_id":"src/examples/grid-component.md","hash":"d1e09fe1ce582600189fa921f2af70f3a44742ed","modified":1473770571100},{"_id":"src/examples/hackernews.md","hash":"9d395e6e5a00243dbb1c2d0fb3437161db9b8b2d","modified":1473770571100},{"_id":"src/examples/index.md","hash":"04e93f1a0c77419ff1b622d9c3c2797dcc6ab2a2","modified":1473770571100},{"_id":"src/examples/modal.md","hash":"4f59121dc10fcc3978634c94ac5c3dd25a584750","modified":1473770571100},{"_id":"src/examples/select2.md","hash":"d274c93c00767d13ab94d536fb2abf9e23faa4fc","modified":1473770571100},{"_id":"src/examples/svg.md","hash":"9303cf7ea9fb21a1899de43d8c5cef92b24f3e4a","modified":1473770571100},{"_id":"src/examples/todomvc.md","hash":"a3e570c4abb9572a1d30875874ed4ecedc0149a3","modified":1473770571100},{"_id":"src/examples/tree-view.md","hash":"87b80bd1fb2c2c059fef4bdf664e4ca3ddbdf2ac","modified":1473770571100},{"_id":"src/guide/index.md","hash":"be17a0a88e816220f7a0bd0ef3aa7aee9853a0fb","modified":1473770608805},{"_id":"src/guide/vc-alert.md","hash":"6bd8b22a746cb01ecbbd63dde4c04871de479158","modified":1473770608805},{"_id":"src/guide/vc-animate.md","hash":"35b86f63fc6f3f2d3dbea302f713168c27377640","modified":1473770608805},{"_id":"src/guide/vc-autocomplete.md","hash":"9785dfaa5d64be89e8dc8423bb129b44a8c843fc","modified":1473770608805},{"_id":"src/guide/vc-backtop.md","hash":"f849235e721c30b3822730245396dfb7719fd0eb","modified":1473770608805},{"_id":"src/guide/vc-breadcrumb.md","hash":"a09f230b4a5fbaeef530bf46bc6ecdf06a5b3d77","modified":1473770608805},{"_id":"src/guide/vc-button.md","hash":"baf99a29a5db445f6d9c883688ece7a6c5d63336","modified":1473770608805},{"_id":"src/guide/vc-buttonGroup.md","hash":"e40256d7dda2cc74fff95de8903609b194390da8","modified":1473770608805},{"_id":"src/guide/vc-card.md","hash":"046f4ec1ec546db635548dcf9f6a1f991431b827","modified":1473770608805},{"_id":"src/guide/vc-carousel.md","hash":"de3ff9dab0ace766458c8c7b29a364d5dfd51596","modified":1473770608805},{"_id":"src/guide/vc-cascader.md","hash":"c4482012fa5ab30f45d6d9cb117b5f6907bb1638","modified":1473770608805},{"_id":"src/guide/vc-checkbox.md","hash":"1c50f7e0e8c57e867ec2466b483634da25822bbc","modified":1473770608805},{"_id":"src/guide/vc-dialog.md","hash":"98e36ef6051f7659f8f40f423b056647963d2643","modified":1473770608805},{"_id":"src/guide/vc-dropdown.md","hash":"fc016d5557774d98155eb169dc8b05766d854e29","modified":1473770608805},{"_id":"src/guide/vc-easyclearinput.md","hash":"16c7ad713eabd8e509e2d247124bb104735df6dd","modified":1473770608805},{"_id":"src/guide/vc-icon.md","hash":"2548a8d11b860336aa9e56fbe079e5ccea90e6d2","modified":1473770608805},{"_id":"src/guide/vc-message.md","hash":"a3d587b0e1247cdcf51239a425859b785af761e9","modified":1473770608805},{"_id":"src/guide/vc-modal.md","hash":"7372b9ddc3475f0cf484ca7b20c1a18aa4c2da90","modified":1473770608805},{"_id":"src/guide/vc-notification.md","hash":"e4e3060a3244023fc71e11e6bc4ccc41f1f45857","modified":1473770608805},{"_id":"src/guide/vc-pagination.md","hash":"e4076763dc0b41268eed54c7293cf7811e5d26d4","modified":1473770608805},{"_id":"src/guide/vc-popover.md","hash":"d72f8862dd3e4e7642d1044322f6ee5fdf7052cf","modified":1473770608805},{"_id":"src/guide/vc-progress.md","hash":"27741437dc5aa71663e9fef604c33f52f66353a1","modified":1473770608805},{"_id":"src/guide/vc-radio.md","hash":"3384b6b6311ebd036382821463c6e40de1bf4df5","modified":1473770608805},{"_id":"src/guide/vc-select.md","hash":"f36a1d9cadddb4ead026f6c577215032972ab32c","modified":1473770608805},{"_id":"src/guide/vc-spin.md","hash":"92b8c8b4abfb44e92ef449fa67290470ac9710d8","modified":1473770608805},{"_id":"src/guide/vc-table.md","hash":"93cfbfafdbe3db7e00defc6cdb0b2bff876d3ae3","modified":1473770608805},{"_id":"src/guide/vc-tabs.md","hash":"c0190c996f329cebaa90c6df726f37802159d5a8","modified":1473770608805},{"_id":"src/guide/vc-tag.md","hash":"4b060e564eb220cfbc2280f4577f11db1d9a55c0","modified":1473770608805},{"_id":"src/guide/vc-toast.md","hash":"cf9eefec11c4cf7866c9ea07f51ebcac6c264f19","modified":1473770608805},{"_id":"src/guide/vc-tooltip.md","hash":"c78eca837ed71de0f971da938b9bab364f5c5f00","modified":1473770608805},{"_id":"themes/vue/layout/index.ejs","hash":"6c6d373f719b6d740f14f3a5cb4fba964367078a","modified":1473770571104},{"_id":"themes/vue/layout/layout.ejs","hash":"f346a98c28a1b1cfa92102b7d9ee56e44604df79","modified":1473770571104},{"_id":"themes/vue/layout/page.ejs","hash":"52c8165cc20654d97e567d056596ae4fac3449d2","modified":1473770571104},{"_id":"themes/vue/layout/post.ejs","hash":"5635a0c149e72ab4774570b730cb004ad60f53c3","modified":1473770571104},{"_id":"themes/vue/layout/partials/blog.ejs","hash":"6c46247a5536fbcee264d758f5f29103266a5eff","modified":1473770571104},{"_id":"themes/vue/layout/partials/community_dropdown.ejs","hash":"15e702a479166338f52158ece2bf37e74aba438d","modified":1473770571104},{"_id":"themes/vue/layout/partials/ga.ejs","hash":"684eccc8f0bca329b42692a1c4262ded777be4c6","modified":1473770571104},{"_id":"themes/vue/layout/partials/header.ejs","hash":"7e72c82d1410c168ea4fa29d886cbcc1a1ef3719","modified":1473770571104},{"_id":"themes/vue/layout/partials/main_menu.ejs","hash":"b05d46678b29d709f8dac14b4461d1fc298287a7","modified":1473770571104},{"_id":"themes/vue/layout/partials/sidebar.ejs","hash":"d10fdd9f00b291197402835ce08bcc8316b78ff5","modified":1473770571104},{"_id":"themes/vue/source/css/_blog.styl","hash":"7c5072951c5bfc75c02033ce5d25f401c9ace33b","modified":1473770571104},{"_id":"themes/vue/source/css/_common.styl","hash":"5b17e964f9a82f077a98dbc212423ec504e9476c","modified":1473770571104},{"_id":"themes/vue/source/css/_demo.styl","hash":"cbd8ade48cd76f530968dd4e8d0f57a6fe7641cd","modified":1473770571104},{"_id":"themes/vue/source/css/_settings.styl","hash":"ddabc9fdceeefca13a3c9ff5b5188237fbb225f4","modified":1473770571104},{"_id":"themes/vue/source/css/_syntax.styl","hash":"edb004001fe151bebfdf63bbc250ba75777b5468","modified":1473770571104},{"_id":"themes/vue/source/css/benchmark.styl","hash":"95d4607b2b59623a673e131e1a267d0311fe89e6","modified":1473770571104},{"_id":"themes/vue/source/css/common.css","hash":"e68e67fc577df463a9e15753c9fad9cf742d6085","modified":1473770571104},{"_id":"themes/vue/source/css/index.styl","hash":"5d408d3ab89b4064416485e97324cd23f67b4076","modified":1473770571104},{"_id":"themes/vue/source/css/page.styl","hash":"7f3f5774ea3df7d8549ed87d8e618a0211560823","modified":1473770571104},{"_id":"themes/vue/source/images/check.png","hash":"682cf89e1802afb1dfddf07a6aed828a45b824af","modified":1473770571104},{"_id":"themes/vue/source/images/components.png","hash":"d4ce2f1000b166e119ea6541c78b3e31106f1fe8","modified":1473770571104},{"_id":"themes/vue/source/images/down.png","hash":"42505e12d686cf580f793bd9193acbac1e3e3a91","modified":1473770571104},{"_id":"themes/vue/source/images/download.png","hash":"d5f13cfe27e3f37a2406be61e5ce08555386e101","modified":1473770571104},{"_id":"themes/vue/source/images/icons.png","hash":"91225ef7011e59dbe6b4b9f2666133fb5e1bc976","modified":1473770571108},{"_id":"themes/vue/source/images/logo.png","hash":"a3adcce57e12725df16ebaecc313e1991b30bb68","modified":1473770571112},{"_id":"themes/vue/source/images/menu.png","hash":"bdaa35eb1ed119caeb934e15a05b9f4a5396d957","modified":1473770571112},{"_id":"themes/vue/source/images/mvvm.png","hash":"52c8a6529e7ed652041a6d71f1824db3991ea574","modified":1473770571112},{"_id":"themes/vue/source/images/search.png","hash":"12d664cc51b8d53c9214830bc9b92fb340526a7b","modified":1473770571112},{"_id":"themes/vue/source/images/state.png","hash":"cab62293b1c242683dc7752b8908844792e2252b","modified":1473770571112},{"_id":"themes/vue/source/js/bootstrap.min.js","hash":"791aa054a026bddc0de92bad6cf7a1c6e73713d5","modified":1473770571116},{"_id":"themes/vue/source/js/common.js","hash":"0b8dc0c43ad86c6895a6d05218eac2924cc8e0a7","modified":1473770571116},{"_id":"themes/vue/source/js/smooth-scroll.min.js","hash":"86d3196a003a5cdc673a4c6ebb75db3ceee1a1a7","modified":1473770571116},{"_id":"themes/vue/source/css/bootstrap.min.css","hash":"8eb176c70b9cfa6871b76d6dc98fb526e7e9b3de","modified":1473770571104},{"_id":"themes/vue/source/images/data.png","hash":"afe647754940aed86a1bf8fa906c4add3ac55948","modified":1473770571104},{"_id":"themes/vue/source/images/lifecycle.png","hash":"c286ca6043ea0769e34f4e56582d964649ee5f96","modified":1473770571112},{"_id":"themes/vue/source/images/vue-component.png","hash":"aed068f28d548f302f12f687adad9f67a2ac9860","modified":1473770571112},{"_id":"themes/vue/source/js/vue.min.js","hash":"40d8fd5511c4ebc81e82ed6d98b1ce7dc454d6da","modified":1473770571116},{"_id":"themes/vue/source/images/vue-component-with-pre-processors.png","hash":"b903fac975e3c140c520284d0520dc72e2cb8b60","modified":1473770571112},{"_id":"themes/vue/source/js/vue.js","hash":"2f44b17db58651d0e77f19746befe077f13a8b62","modified":1473770571116},{"_id":"themes/vue/source/images/hn.png","hash":"40a4ddd34b24a0b96d33697a6e558f2ea39a6281","modified":1473770571108}],"Category":[],"Data":[],"Page":[{"_content":"## Developing\n\nStart a dev server at `localhost:4000`:\n\n```\n$ npm install -g hexo-cli\n$ npm install\n$ hexo g\n$ hexo deploy\n$ hexo server\n```\n\n## vc-bootstrap doc\n\ndoc: [https://iwaimai-bi-fe.github.io/vc-bootstrap-doc/](https://iwaimai-bi-fe.github.io/vc-bootstrap-doc/)\n","source":"Readme.markdown","raw":"## Developing\n\nStart a dev server at `localhost:4000`:\n\n```\n$ npm install -g hexo-cli\n$ npm install\n$ hexo g\n$ hexo deploy\n$ hexo server\n```\n\n## vc-bootstrap doc\n\ndoc: [https://iwaimai-bi-fe.github.io/vc-bootstrap-doc/](https://iwaimai-bi-fe.github.io/vc-bootstrap-doc/)\n","date":"2016-09-13T12:42:51.096Z","updated":"2016-09-13T12:42:51.096Z","path":"Readme.html","title":"","comments":1,"layout":"page","_id":"cit1gzc1l0000yzjx1cqlza8q","content":"<h2 id=\"Developing\"><a href=\"#Developing\" class=\"headerlink\" title=\"Developing\"></a>Developing</h2><p>Start a dev server at <code>localhost:4000</code>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div><div class=\"line\">$ npm install</div><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo deploy</div><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<h2 id=\"vc-bootstrap-doc\"><a href=\"#vc-bootstrap-doc\" class=\"headerlink\" title=\"vc-bootstrap doc\"></a>vc-bootstrap doc</h2><p>doc: <a href=\"https://iwaimai-bi-fe.github.io/vc-bootstrap-doc/\" target=\"_blank\" rel=\"external\">https://iwaimai-bi-fe.github.io/vc-bootstrap-doc/</a></p>\n","excerpt":"","more":"<h2 id=\"Developing\"><a href=\"#Developing\" class=\"headerlink\" title=\"Developing\"></a>Developing</h2><p>Start a dev server at <code>localhost:4000</code>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div><div class=\"line\">$ npm install</div><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo deploy</div><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<h2 id=\"vc-bootstrap-doc\"><a href=\"#vc-bootstrap-doc\" class=\"headerlink\" title=\"vc-bootstrap doc\"></a>vc-bootstrap doc</h2><p>doc: <a href=\"https://iwaimai-bi-fe.github.io/vc-bootstrap-doc/\">https://iwaimai-bi-fe.github.io/vc-bootstrap-doc/</a></p>\n"},{"index":true,"_content":"","source":"index.md","raw":"index: true\n---\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"index.html","title":"","comments":1,"layout":"page","_id":"cit1gzc2e0001yzjxj8dgcrrp","content":"","excerpt":"","more":""},{"blog_index":true,"_content":"","source":"blog/index.md","raw":"---\nblog_index: true\n---\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"blog/index.html","title":"","comments":1,"layout":"page","_id":"cit1gzc8x0003yzjxqpe6t3cd","content":"","excerpt":"","more":""},{"type":"api","_content":"\n## Global Config\n\n`Vue.config` is an object containing Vue's global configurations. You can modify its properties listed below before bootstrapping your application:\n\n### debug\n\n- **Type:** `Boolean`\n\n- **Default:** `false`\n\n- **Usage:**\n\n  ``` js\n  Vue.config.debug = true\n  ```\n\n  When in debug mode, Vue will:\n\n  1. Print stack traces for all warnings.\n\n  2. Make all anchor nodes visible in the DOM as Comment nodes. This makes it easier to inspect the structure of the rendered result.\n\n  <p class=\"tip\">Debug mode is only available in development build.</p>\n\n### delimiters\n\n- **Type:** `Array<String>`\n\n- **Default:** `{% raw %}[\"{{\", \"}}\"]{% endraw %}`\n\n- **Usage:**\n\n  ``` js\n  // ES6 template string style\n  Vue.config.delimiters = ['${', '}']\n  ```\n\n  Change the plain text interpolation delimiters.\n\n### unsafeDelimiters\n\n- **Type:** `Array<String>`\n\n- **Default:** `{% raw %}[\"{{{\", \"}}}\"]{% endraw %}`\n\n- **Usage:**\n\n  ``` js\n  // make it look more dangerous\n  Vue.config.delimiters = ['{!!', '!!}']\n  ```\n\n  Change the raw HTML interpolation delimiters.\n\n### silent\n\n- **Type:** `Boolean`\n\n- **Default:** `false`\n\n- **Usage:**\n\n  ``` js\n  Vue.config.silent = true\n  ```\n\n  Suppress all Vue.js logs and warnings.\n\n### async\n\n- **Type:** `Boolean`\n\n- **Default:** `true`\n\n- **Usage:**\n\n  ``` js\n  Vue.config.async = false\n  ```\n\n  When async mode is off, Vue will perform all DOM updates synchronously upon detecting data change. This may help with debugging in some scenarios, but could also cause degraded performance and affect the order in which watcher callbacks are called. **`async: false` is not recommended in production.**\n\n## Global API\n\n### Vue.extend( options )\n\n- **Arguments:**\n  - `{Object} options`\n\n- **Usage:**\n\n  Create a \"subclass\" of the base Vue constructor. The argument should be an object containing component options.\n\n  The special cases to note here are `el` and `data` options - they must be functions when used with `Vue.extend()`.\n\n  ``` html\n  <div id=\"mount-point\"></div>\n  ```\n\n  ``` js\n  // create reusable constructor\n  var Profile = Vue.extend({\n    template: '<p>{{firstName}} {{lastName}} aka {{alias}}</p>'\n  })\n  // create an instance of Profile\n  var profile = new Profile({\n    data: {\n      firstName: 'Walter',\n      lastName: 'White',\n      alias: 'Heisenberg'\n    }  \n  })\n  // mount it on an element\n  profile.$mount('#mount-point')\n  ```\n\n  Will result in:\n\n  ``` html\n  <p>Walter White aka Heisenberg</p>\n  ```\n\n- **See also:** [Components](/guide/components.html)\n\n### Vue.nextTick( callback )\n\n- **Arguments:**\n  - `{Functon} callback`\n\n- **Usage:**\n\n  Defer the callback to be executed after the next DOM update cycle. Use it immediately after you've changed some data to wait for the DOM update.\n\n  ``` js\n  // modify data\n  vm.msg = 'Hello'\n  // DOM not updated yet\n  Vue.nextTick(function () {\n    // DOM updated\n  })\n  ```\n\n- **See also:** [Async Update Queue](/guide/reactivity.html#Async_Update_Queue)\n\n### Vue.set( object, key, value )\n\n- **Arguments:**\n  - `{Object} object`\n  - `{String} key`\n  - `{*} value`\n\n- **Usage:**\n\n  Set a property on an object. If the object is reactive, ensure the property is created as a reactive property and trigger view updates. This is primarily used to get around the limitation that Vue cannot detect property additions.\n\n- **See also:** [Reactivity in Depth](/guide/reactivity.html)\n\n### Vue.delete( object, key )\n\n- **Arguments:**\n  - `{Object} object`\n  - `{String} key`\n\n- **Usage:**\n\n  Delete a property on an object. If the object is reactive, ensure the deletion triggers view updates. This is primarily used to get around the limitation that Vue cannot detect property deletions, but you should rarely need to use it.\n\n- **See also:** [Reactivity in Depth](/guide/reactivity.html)\n\n### Vue.directive( id, [definition] )\n\n- **Arguments:**\n  - `{String} id`\n  - `{Function | Object} [definition]`\n\n- **Usage:**\n  \n  Register or retrieve a global directive.\n\n  ``` js\n  // register\n  Vue.directive('my-directive', {\n    bind: function () {},\n    update: function () {},\n    unbind: function () {}\n  })\n\n  // register (simple function directive)\n  Vue.directive('my-directive', function () {\n    // this will be called as `update`\n  })\n\n  // getter, return the directive definition if registered\n  var myDirective = Vue.directive('my-directive')\n  ```\n\n- **See also:** [Custom Directives](/guide/custom-directive.html)\n\n### Vue.elementDirective( id, [definition] )\n\n- **Arguments:**\n  - `{String} id`\n  - `{Object} [definition]`\n\n- **Usage:**\n\n  Register or retrieve a global element directive.\n\n  ``` js\n  // register\n  Vue.elementDirective('my-element', {\n    bind: function () {},\n    // element directives do not use `update`\n    unbind: function () {}\n  })\n\n  // getter, return the directive definition if registered\n  var myDirective = Vue.elementDirective('my-element')\n  ```\n\n- **See also:** [Element Directives](/guide/custom-directive.html#Element_Directives)\n\n### Vue.filter( id, [definition] )\n\n- **Arguments:**\n  - `{String} id`\n  - `{Function | Object} [definition]`\n\n- **Usage:**\n\n  Register or retrieve a global filter.\n\n  ``` js\n  // register\n  Vue.filter('my-filter', function (value) {\n    // return processed value\n  })\n\n  // two way filter\n  Vue.filter('my-filter', {\n    read: function () {},\n    write: function () {}\n  })\n\n  // getter, return the filter if registered\n  var myFilter = Vue.filter('my-filter')\n  ```\n\n- **See also:** [Custom Filter](/guide/custom-filter.html)\n\n### Vue.component( id, [definition] )\n\n- **Arguments:**\n  - `{String} id`\n  - `{Function | Object} [definition]`\n\n- **Usage:**\n\n  Register or retrieve a global component.\n\n  ``` js\n  // register an extended constructor\n  Vue.component('my-component', Vue.extend({ /* ... */}))\n\n  // register an options object (automatically call Vue.extend)\n  Vue.component('my-component', { /* ... */ })\n\n  // retrive a registered component (always return constructor)\n  var MyComponent = Vue.component('my-component')\n  ```\n\n- **See also:** [Components](/guide/components.html).\n\n### Vue.transition( id, [hooks] )\n\n- **Arguments:**\n  - `{String} id`\n  - `{Object} [hooks]`\n\n- **Usage:**\n\n  Register or retrieve a global transition hooks object.\n\n  ``` js\n  // register\n  Vue.transition('fade', {\n    enter: function () {},\n    leave: function () {}\n  })\n\n  // retrieve registered hooks\n  var fadeTransition = Vue.transition('fade')\n  ```\n\n- **See also:** [Transitions](/guide/transitions.html).\n\n### Vue.partial( id, [partial] )\n\n- **Arguments:**\n  - `{String} id`\n  - `{String} [partial]`\n\n- **Usage:**\n\n  Register or retrieve a global template partial string.\n\n  ``` js\n  // register\n  Vue.partial('my-partial', '<div>Hi</div>')\n\n  // retrieve registered partial\n  var myPartial = Vue.partial('my-partial')\n  ```\n\n- **See also:** [Special Elements - &lt;partial&gt;](#partial).\n\n### Vue.use( plugin, [options] )\n\n- **Arguments:**\n  - `{Object | Function} plugin`\n  - `{Object} [options]`\n\n- **Usage:**\n\n  Install a Vue.js plugin. If the plugin is an Object, it must expose an `install` method. If it is a function itself, it will be treated as the install method. The install method will be called with Vue as the argument.\n\n- **See also:** [Plugins](/guide/plugins.html).\n\n### Vue.mixin( mixin )\n\n- **Arguments:**\n  - `{Object} mixin`\n\n- **Usage:**\n\n  Apply a mixin globally, which affects every Vue instance created afterwards. This can be used by plugin authors to inject custom behavior into components. **Not recommended in application code**.\n\n- **See also:** [Global Mixins](/guide/mixins.html#Global_Mixin)\n\n## Options / Data\n\n### data\n\n- **Type:** `Object | Function`\n\n- **Restriction:** Only accepts `Function` when used in `Vue.extend()`.\n\n- **Details:**\n\n  The data object for the Vue instance. Vue.js will recursively convert its properties into getter/setters to make it \"reactive\". **The object must be plain**: native objects, existing getter/setters and prototype properties are ignored. It is not recommended to observe complex objects.\n\n  Once the instance is created, the original data object can be accessed as `vm.$data`. The Vue instance also proxies all the properties found on the data object.\n\n  Properties that start with `_` or `$` will **not** be proxied on the Vue instance because they may conflict with Vue's internal properties and API methods. You will have to access them as `vm.$data._property`.\n\n- **Example:**\n\n  ``` js\n  var data = { a: 1 }\n\n  // direct instance creation\n  var vm = new Vue({\n    data: data\n  })\n  vm.a // -> 1\n  vm.$data === data // -> true\n\n  // must use function when in Vue.extend()\n  var Component = Vue.extend({\n    data: function () {\n      return { a: 1 }\n    }\n  })\n  ```\n\n- **See also:** [Reactivity in Depth](/guide/reactivity.html).\n\n### props\n\n- **Type:** `Array | Object`\n\n- **Details:**\n\n  A list/hash of attributes that are exposed to accept data from the parent component. It has a simple Array-based syntax and an alternative Object-based syntax that allows advanced configurations such as type checking, custom validation and default values.\n\n- **Example:**\n\n  ``` js\n  // simple syntax\n  Vue.component('props-demo-simple', {\n    props: ['size', 'myMessage']\n  })\n\n  // object syntax with validation\n  Vue.component('props-demo-advanced', {\n    props: {\n      // just type check\n      size: Number,\n      // type check plus other validations\n      name: {\n        type: String,\n        required: true\n      }\n    }\n  })\n  ```\n\n- **See also:** [Props](/guide/components.html#Props)\n\n### computed\n\n- **Type:** `Object`\n\n- **Details:**\n\n  Computed properties to be mixed into the Vue instance. All getters and setters have their `this` context automatically bound to the Vue instance.\n\n- **Example:**\n\n  ```js\n  var vm = new Vue({\n    data: { a: 1 },\n    computed: {\n      // get only, just need a function\n      aDouble: function () {\n        return this.a * 2\n      },\n      // both get and set\n      aPlus: {\n        get: function () {\n          return this.a + 1\n        },\n        set: function (v) {\n          this.a = v - 1\n        }\n      }\n    }\n  })\n  vm.aPlus   // -> 2\n  vm.aPlus = 3\n  vm.a       // -> 2\n  vm.aDouble // -> 4\n  ```\n\n- **See also:**\n  - [Computed Properties](/guide/computed.html)\n  - [Reactivity in Depth: Inside Computed Properties](/guide/reactivity.html#Inside_Computed_Properties)\n\n### methods\n\n- **Type:** `Object`\n\n- **Details:**\n\n  Methods to be mixed into the Vue instance. You can access these methods directly on the VM instance, or use them in directive expressions. All methods will have their `this` context automatically bound to the Vue instance.\n\n- **Example:**\n\n  ```js\n  var vm = new Vue({\n    data: { a: 1 },\n    methods: {\n      plus: function () {\n        this.a++\n      }\n    }\n  })\n  vm.plus()\n  vm.a // 2\n  ```\n\n- **See also:** [Methods and Event Handling](/guide/events.html)\n\n### watch\n\n- **Type:** `Object`\n\n- **Details:**\n\n  An object where keys are expressions to watch and values are the corresponding callbacks. The value can also be a string of a method name, or an Object that contains additional options. The Vue instance will call `$watch()` for each entry in the object at instantiation.\n\n- **Example:**\n\n  ``` js\n  var vm = new Vue({\n    data: {\n      a: 1\n    },\n    watch: {\n      'a': function (val, oldVal) {\n        console.log('new: %s, old: %s', val, oldVal)\n      },\n      // string method name\n      'b': 'someMethod',\n      // deep watcher\n      'c': {\n        handler: function (val, oldVal) { /* ... */ },\n        deep: true\n      }\n    }\n  })\n  vm.a = 2 // -> new: 2, old: 1\n  ```\n\n- **See also:** [Instance Methods - vm.$watch](#vm-watch)\n\n## Options / DOM\n\n### el\n\n- **Type:** `String | HTMLElement | Function`\n\n- **Restriction:** only accepts type `Function` when used in `Vue.extend()`.\n\n- **Details:**\n\n  Provide the Vue instance an existing DOM element to mount on. It can be a CSS selector string, an actual HTMLElement, or a function that returns an HTMLElement. Note that the provided element merely serves as a mounting point; it will be replaced if a template is also provided, unless `replace` is set to false. The resolved element will be accessible as `vm.$el`.\n\n  When used in `Vue.extend`, a function must be provided so each instance gets a separately created element.\n\n  If this option is available at instantiation, the instance will immediately enter compilation; otherwise, the user will have to explicitly call `vm.$mount()` to manually start the compilation.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### template\n\n- **Type:** `String`\n\n- **Details:**\n\n  A string template to be used as the markup for the Vue instance. By default, the template will **replace** the mounted element. When the `replace` option is set to `false`, the template will be inserted into the mounted element instead. In both cases, any existing markup inside the mounted element will be ignored, unless content distribution slots are present in the template.\n\n  If the string starts with `#` it will be used as a querySelector and use the selected element's innerHTML as the template string. This allows the use of the common `<script type=\"x-template\">` trick to include templates.\n\n  Note that under certain situations, for example when the template contains more than one top-level element, or contains only plain text, the instance will become a fragment instance - i.e. one that manages a list of nodes rather than a single node. Non flow-control directives on the mount point for fragment instances are ignored.\n\n- **See also:**\n  - [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n  - [Content Distribution](/guide/components.html#Content_Distribution_with_Slots)\n  - [Fragment Instance](/guide/components.html#Fragment_Instance)\n\n### replace\n\n- **Type:** `Boolean`  \n\n- **Default:** `true`\n\n- **Restriction:** only respected if the **template** option is also present.\n\n- **Details:**\n\n  Determines whether to replace the element being mounted on with the template. If set to `false`, the template will overwrite the element's inner content without replacing the element itself.\n\n- **Example**:\n\n  ``` html\n  <div id=\"replace\"></div>\n  ```\n\n  ``` js\n  new Vue({\n    el: '#replace',\n    template: '<p>replaced</p>'\n  })\n  ```\n\n  Will result in:\n\n  ``` html\n  <p>replaced</p>\n  ```\n\n  In comparison, when `replace` is set to `false`:\n\n  ``` html\n  <div id=\"insert\"></div>\n  ```\n\n  ``` js\n  new Vue({\n    el: '#insert',\n    replace: false,\n    template: '<p>inserted</p>'\n  })\n  ```\n\n  Will result in:\n\n  ``` html\n  <div id=\"insert\">\n    <p>inserted</p>\n  </div>\n  ```\n\n## Options / Lifecycle Hooks\n\n### created\n\n- **Type:** `Function`\n\n- **Details:**\n  \n  Called synchronously after the instance is created. At this stage, the instance has finished processing the options which means the following have been set up: data observation, computed properties, methods, watch/event callbacks. However, DOM compilation has not been started, and the `$el` property will not be available yet.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### beforeCompile\n\n- **Type:** `Function`\n\n- **Details:**\n  \n  Called right before the compilation starts.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### compiled\n\n- **Type:** `Function`\n\n- **Details:**\n\n  Called after the compilation is finished. At this stage all directives have been linked so data changes will trigger DOM updates. However, `$el` is not guaranteed to have been inserted into the document yet.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### ready\n\n- **Type:** `Function`\n\n- **Details:**\n\n  Called after compilation **and** the `$el` is **inserted into the document for the first time**, i.e. right after the first `attached` hook. Note this insertion must be executed via Vue (with methods like `vm.$appendTo()` or as a result of a directive update) to trigger the `ready` hook.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### attached\n\n- **Type:** `Function`\n\n- **Details:**\n  \n  Called when `vm.$el` is attached to DOM by a directive or a VM instance method such as `$appendTo()`. Direct manipulation of `vm.$el` will **not** trigger this hook.\n\n### detached\n\n- **Type:** `Function`\n\n- **Details:**\n  \n  Called when `vm.$el` is removed from the DOM by a directive or a VM instance method. Direct manipulation of `vm.$el` will **not** trigger this hook.\n\n### beforeDestroy\n\n- **Type:** `Function`\n\n- **Details:**\n  \n  Called right before a Vue instance is destroyed. At this stage the instance is still fully functional.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### destroyed\n\n- **Type:** `Function`\n\n- **Details:**\n\n  Called after a Vue instance has been destroyed. When this hook is called, all bindings and directives of the Vue instance have been unbound and all child Vue instances have also been destroyed.\n\n  Note if there is a leaving transition, the `destroyed` hook is called **after** the transition has finished.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n## Options / Assets\n\n### directives\n\n- **Type:** `Object`\n\n- **Details:**\n\n  A hash of directives to be made available to the Vue instance.\n\n- **See also:**\n  - [Custom Directives](/guide/custom-directive.html)\n  - [Assets Naming Convention](/guide/components.html#Assets_Naming_Convention)\n\n### elementDirectives\n\n- **Type:** `Object`\n\n- **Details:**\n\n  A hash of element directives to be made available to the Vue instance.\n\n- **See also:**\n  - [Element Directives](/guide/custom-directive.html#Element_Directives)\n  - [Assets Naming Convention](/guide/components.html#Assets_Naming_Convention)\n\n### filters\n\n- **Type:** `Object`\n\n- **Details:**\n\n  A hash of filters to be made available to the Vue instance.\n\n- **See also:**\n  - [Custom Filters](/guide/custom-filter.html)\n  - [Assets Naming Convention](/guide/components.html#Assets_Naming_Convention)\n\n### components\n\n- **Type:** `Object`\n\n- **Details:**\n\n  A hash of components to be made available to the Vue instance.\n\n- **See also:**\n  - [Components](/guide/components.html)\n\n### transitions\n\n- **Type:** `Object`\n\n- **Details:**\n\n  A hash of transitions to be made available to the Vue instance.\n\n- **See also:**\n  - [Transitions](/guide/transitions.html)\n\n### partials\n\n- **Type:** `Object`\n\n- **Details:**\n\n  A hash of partial strings to be made available to the Vue instance.\n\n- **See also:**\n  - [Special Elements - partial](#partial)\n\n## Options / Misc\n\n### parent\n\n- **Type:** `Vue instance`\n\n- **Details:**\n\n  Specify the parent instance for the instance to be created. Establishes a parent-child relationship between the two. The parent will be accessible as `this.$parent` for the child, and the child will be pushed into the parent's `$children` array.\n\n- **See also:** [Parent-Child Communication](/guide/components.html#Parent-Child_Communication)\n\n### events\n\n- **Type:** `Object`\n\n- **Details:**\n\n  An object where keys are events to listen for and values are the corresponding callbacks. Note these are Vue events rather than DOM events. The value can also be a string of a method name. The Vue instance will call `$on()` for each entry in the object at instantiation.\n\n- **Example:**\n\n  ``` js\n  var vm = new Vue({\n    events: {\n      'hook:created': function () {\n        console.log('created!')\n      },\n      greeting: function (msg) {\n        console.log(msg)\n      },\n      // can also use a string for methods\n      bye: 'sayGoodbye'\n    },\n    methods: {\n      sayGoodbye: function () {\n        console.log('goodbye!')\n      }\n    }\n  }) // -> created!\n  vm.$emit('greeting', 'hi!') // -> hi!\n  vm.$emit('bye')             // -> goodbye!\n  ```\n\n- **See also:**\n  - [Instance Methods - Events](#Instance_Methods_/_Events)\n  - [Parent-Child Communication](/guide/components.html#Parent-Child_Communication)\n\n### mixins\n\n- **Type:** `Array`\n\n- **Details:**\n\n  The `mixins` option accepts an array of mixin objects. These mixin objects can contain instance options just like normal instance objects, and they will be merged against the eventual options using the same option merging logic in `Vue.extend()`. e.g. If your mixin contains a created hook and the component itself also has one, both functions will be called.\n\n  Mixin hooks are called in the order they are provided, and called before the component's own hooks.\n\n- **Example:**\n\n  ``` js\n  var mixin = {\n    created: function () { console.log(1) }\n  }\n  var vm = new Vue({\n    created: function () { console.log(2) },\n    mixins: [mixin]\n  })\n  // -> 1\n  // -> 2\n  ```\n\n- **See also:** [Mixins](/guide/mixins.html)\n\n### name\n\n- **Type:** `String`\n\n- **Restriction:** only respected when used in `Vue.extend()`.\n\n- **Details:**\n\n  Allow the component to recursively invoke itself in its template. Note that when a component is registered globally with `Vue.component()`, the global ID is automatically set as its name.\n\n  Another benefit of specifying a `name` option is console inspection. When inspecting an extended Vue component in the console, the default constructor name is `VueComponent`, which isn't very informative. By passing in an optional `name` option to `Vue.extend()`, you will get a better inspection output so that you know which component you are looking at. The string will be camelized and used as the component's constructor name.\n\n- **Example:**\n\n  ``` js\n  var Ctor = Vue.extend({\n    name: 'stack-overflow',\n    template:\n      '<div>' +\n        // recursively invoke self\n        '<stack-overflow></stack-overflow>' +\n      '</div>'\n  })\n\n  // this will actually result in a max stack size exceeded\n  // error, but let's assume it works...\n  var vm = new Ctor()\n\n  console.log(vm) // -> StackOverflow {$el: null, ...}\n  ```\n\n## Instance Properties\n\n### vm.$data\n\n- **Type:** `Object`\n\n- **Details:**\n\n  The data object that the Vue instance is observing. You can swap it with a new object. The Vue instance proxies access to the properties on its data object.\n\n### vm.$el\n\n- **Type:** `HTMLElement`\n\n- **Read only**\n\n- **Details:**\n\n  The DOM element that the Vue instance is managing. Note that for [Fragment Instances](/guide/components.html#Fragment_Instance), `vm.$el` will return an anchor node that indicates the starting position of the fragment.\n\n### vm.$options\n\n- **Type:** `Object`\n\n- **Read only**\n\n- **Details:**\n\n  The instantiation options used for the current Vue instance. This is useful when you want to include custom properties in the options:\n\n  ``` js\n  new Vue({\n    customOption: 'foo',\n    created: function () {\n      console.log(this.$options.customOption) // -> 'foo'\n    }\n  })\n  ```\n\n### vm.$parent\n\n- **Type:** `Vue instance`\n\n- **Read only**\n\n- **Details:**\n\n  The parent instance, if the current instance has one.\n\n### vm.$root\n\n- **Type:** `Vue instance`\n\n- **Read only**\n\n- **Details:**\n\n  The root Vue instance of the current component tree. If the current instance has no parents this value will be itself.\n\n### vm.$children\n\n- **Type:** `Array<Vue instance>`\n\n- **Read only**\n\n- **Details:**\n\n  The direct child components of the current instance.\n\n### vm.$refs\n\n- **Type:** `Object`\n\n- **Read only**\n\n- **Details:**\n\n  An object that holds child components that have `v-ref` registered.\n\n- **See also:**\n  - [Child Component Refs](/guide/components.html#Child_Component_Refs)\n  - [v-ref](#v-ref).\n\n### vm.$els\n\n- **Type:** `Object`\n\n- **Read only**\n\n- **Details:**\n\n  An object that holds DOM elements that have `v-el` registered.\n\n- **See also:** [v-el](#v-el).\n\n## Instance Methods / Data\n\n### vm.$watch( expOrFn, callback, [options] )\n\n- **Arguments:**\n  - `{String|Function} expOrFn`\n  - `{Function} callback`\n  - `{Object} [options]`\n    - `{Boolean} deep`\n    - `{Boolean} immediate`\n\n- **Returns:** `{Function} unwatch`\n\n- **Usage:**\n\n  Watch an expression or a computed function on the Vue instance for changes. The callback gets called with the new value and the old value. The expression can be a single keypath or any valid binding expressions.\n\n- **Example:**\n\n  ``` js\n  // keypath\n  vm.$watch('a.b.c', function (newVal, oldVal) {\n    // do something\n  })\n\n  // expression\n  vm.$watch('a + b', function (newVal, oldVal) {\n    // do something\n  })\n\n  // function\n  vm.$watch(\n    function () {\n      return this.a + this.b\n    },\n    function (newVal, oldVal) {\n      // do something\n    }\n  )\n  ```\n\n  `vm.$watch` returns an unwatch function that stops firing the callback:\n\n  ``` js\n  var unwatch = vm.$watch('a', cb)\n  // later, teardown the watcher\n  unwatch()\n  ```\n\n- **Option: deep**\n\n  To also detect nested value changes inside Objects, you need to pass in `deep: true` in the options argument. Note that you don't need to do so to listen for Array mutations.\n\n  ``` js\n  vm.$watch('someObject', callback, {\n    deep: true\n  })\n  vm.someObject.nestedValue = 123\n  // callback is fired\n  ```\n\n- **Option: immediate**\n\n  Passing in `immediate: true` in the option will trigger the callback immediately with the current value of the expression:\n\n  ``` js\n  vm.$watch('a', callback, {\n    immediate: true\n  })\n  // callback is fired immediately with current value of `a`\n  ```\n\n### vm.$get( expression )\n\n- **Arguments:**\n  - `{String} expression`\n\n- **Usage:**\n\n  Retrieve a value from the Vue instance given an expression. Expressions that throw errors will be suppressed and return `undefined`.\n\n- **Example:**\n\n  ``` js\n  var vm = new Vue({\n    data: {\n      a: {\n        b: 1\n      }\n    }\n  })\n  vm.$get('a.b') // -> 1\n  vm.$get('a.b + 1') // -> 2\n  ```\n\n### vm.$set( keypath, value )\n\n- **Arguments:**\n  - `{String} keypath`\n  - `{*} value`\n\n- **Usage:**\n\n  Set a data value on the Vue instance given a valid keypath. In most cases you should prefer setting properties using plain object syntax, e.g. `vm.a.b = 123`. This method is only needed in two scenarios:\n\n  1. When you have a keypath string and want to dynamically set the value using that keypath.\n\n  2. When you want to set a property that doesn't exist.\n\n  If the path doesn't exist it will be recursively created and made reactive. If a new root-level reactive property is created due to a `$set` call, the Vue instance will be forced into a \"digest cycle\", during which all its watchers are re-evaluated.\n\n- **Example:**\n\n  ``` js\n  var vm = new Vue({\n    data: {\n      a: {\n        b: 1\n      }\n    }\n  })\n  \n  // set an existing path\n  vm.$set('a.b', 2)\n  vm.a.b // -> 2\n\n  // set a non-existent path, will force digest\n  vm.$set('c', 3)\n  vm.c // ->\n  ```\n\n- **See also:** [Reactivity in Depth](/guide/reactivity.html)\n\n### vm.$delete( key )\n\n- **Arguments:**\n  - `{String} key`\n\n- **Usage:**\n\n  Delete a root level property on the Vue instance (and also its `$data`). Forces a digest cycle. Not recommended.\n\n### vm.$eval( expression )\n\n- **Arguments:**\n  - `{String} expression`\n\n- **Usage:**\n\n  Evaluate a valid binding expression on the current instance. The expression can also contain filters.\n\n- **Example:**\n\n  ``` js\n  // assuming vm.msg = 'hello'\n  vm.$eval('msg | uppercase') // -> 'HELLO'\n  ```\n\n### vm.$interpolate( templateString )\n\n- **Arguments:**\n  - `{String} templateString`\n\n- **Usage:**\n\n  Evaluate a piece of template string containing mustache interpolations. Note that this method simply performs string interpolation; attribute directives are ignored.\n\n- **Example:**\n\n  ``` js\n  // assuming vm.msg = 'hello'\n  vm.$interpolate('{{msg}} world!') // -> 'hello world!'\n  ```\n\n### vm.$log( [keypath] )\n\n- **Arguments:**\n  - `{String} [keypath]`\n\n- **Usage:**\n\n  Log the current instance data as a plain object, which is more inspection-friendly than a bunch of getter/setters. Also accepts an optional key.\n\n  ``` js\n  vm.$log() // logs entire ViewModel data\n  vm.$log('item') // logs vm.item\n  ```\n\n## Instance Methods / Events\n\n### vm.$on( event, callback )\n\n- **Arguments:**\n  - `{String} event`\n  - `{Function} callback`\n\n- **Usage:**\n\n  Listen for a custom event on the current vm. Events can be triggered by `vm.$emit`, `vm.$dispatch` or `vm.$broadcast`. The callback will receive all the additional arguments passed into these event-triggering methods.\n\n- **Example:**\n\n  ``` js\n  vm.$on('test', function (msg) {\n    console.log(msg)\n  })\n  vm.$emit('test', 'hi')\n  // -> \"hi\"\n  ```\n\n### vm.$once( event, callback )\n\n- **Arguments:**\n  - `{String} event`\n  - `{Function} callback`\n\n- **Usage:**\n\n  Listen for a custom event, but only once. The listener will be removed once it triggers for the first time.\n\n### vm.$off( [event, callback] )\n\n- **Arguments:**\n  - `{String} [event]`\n  - `{Function} [callback]`\n\n- **Usage:**\n\n  Remove event listener(s).\n\n  - If no arguments are provided, remove all event listeners;\n\n  - If only the event is provided, remove all listeners for that event;\n\n  - If both event and callback are given, remove the listener for that specific callback only.\n\n### vm.$emit( event, [...args] )\n\n- **Arguments:**\n  - `{String} event`\n  - `[...args]`\n\n  Trigger an event on the current instance. Any additional arguments will be passed into the listener's callback function.\n\n### vm.$dispatch( event, [...args] )\n\n- **Arguments:**\n  - `{String} event`\n  - `[...args]`\n\n- **Usage:**\n\n  Dispatch an event, first triggering it on the instance itself, and then propagates upward along the parent chain. The propagation stops when it triggers a parent event listener, unless that listener returns `true`. Any additional arguments will be passed into the listener's callback function.\n\n- **Example:**\n\n  ``` js\n  // create a parent chain\n  var parent = new Vue()\n  var child1 = new Vue({ parent: parent })\n  var child2 = new Vue({ parent: child1 })\n\n  parent.$on('test', function () {\n    console.log('parent notified')\n  })\n  child1.$on('test', function () {\n    console.log('child1 notified')\n  })\n  child2.$on('test', function () {\n    console.log('child2 notified')\n  })\n\n  child2.$dispatch('test')\n  // -> \"child2 notified\"\n  // -> \"child1 notified\"\n  // parent is NOT notified, because child1 didn't return\n  // true in its callback\n  ```\n\n- **See also:** [Parent-Child Communication](/guide/components.html#Parent-Child_Communication)\n\n### vm.$broadcast( event, [...args] )\n\n- **Arguments:**\n  - `{String} event`\n  - `[...args]`\n\n- **Usage:**\n\n  Broadcast an event that propagates downward to all descendants of the current instance. Since the descendants expand into multiple sub-trees, the event propagation will follow many different \"paths\". The propagation for each path will stop when a listener callback is fired along that path, unless the callback returns `true`.\n\n- **Example:**\n\n  ``` js\n  var parent = new Vue()\n  // child1 and child2 are siblings\n  var child1 = new Vue({ parent: parent })\n  var child2 = new Vue({ parent: parent })\n  // child3 is nested under child2\n  var child3 = new Vue({ parent: child2 })\n\n  child1.$on('test', function () {\n    console.log('child1 notified')\n  })\n  child2.$on('test', function () {\n    console.log('child2 notified')\n  })\n  child3.$on('test', function () {\n    console.log('child3 notified')\n  })\n\n  parent.$broadcast('test')\n  // -> \"child1 notified\"\n  // -> \"child2 notified\"\n  // child3 is NOT notified, because child2 didn't return\n  // true in its callback\n  ```\n\n## Instance Methods / DOM\n\n### vm.$appendTo( elementOrSelector, [callback] )\n\n- **Arguments:**\n  - `{Element|String} elementOrSelector`\n  - `{Function} [callback]`\n\n- **Returns:** `vm` - the instance itself\n\n- **Usage:**\n\n  Append the Vue instance's DOM element or fragment to target element. The target can be either an element or a querySelector string. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).\n\n### vm.$before( elementOrSelector, [callback] )\n\n- **Arguments:**\n  - `{Element|String} elementOrSelector`\n  - `{Function} [callback]`\n\n- **Returns:** `vm` - the instance itself\n\n- **Usage:**\n\n  Insert the Vue instance's DOM element or fragment before target element. The target can be either an element or a querySelector string. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).\n\n### vm.$after( elementOrSelector, [callback] )\n\n- **Arguments:**\n  - `{Element|String} elementOrSelector`\n  - `{Function} [callback]`\n\n- **Returns:** `vm` - the instance itself\n\n- **Usage:**\n\n  Insert the Vue instance's DOM element or fragment after target element. The target can be either an element or a querySelector string. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).\n\n### vm.$remove( [callback] )\n\n- **Arguments:**\n  - `{Function} [callback]`\n\n- **Returns:** `vm` - the instance itself\n\n- **Usage:**\n  \n  Remove the Vue instance's DOM element or fragment from the DOM. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).\n\n### vm.$nextTick( callback )\n\n- **Arguments:**\n  - `{Function} [callback]`\n\n- **Usage:**\n\n  Defer the callback to be executed after the next DOM update cycle. Use it immediately after you've changed some data to wait for the DOM update. This is the same as the global `Vue.nextTick`, except that the callback's `this` context is automatically bound to the instance calling this method.\n\n- **Example:**\n\n  ``` js\n  new Vue({\n    // ...\n    methods: {\n      // ...\n      example: function () {\n        // modify data\n        this.message = 'changed'\n        // DOM is not updated yet\n        this.$nextTick(function () {\n          // DOM is now updated\n          // `this` is bound to the current instance\n          this.doSomethingElse()\n        })\n      }\n    }\n  })\n  ```\n\n- **See also:**\n  - [Vue.nextTick](#Vue-nextTick)\n  - [Async Update Queue](/guide/reactivity.html#Async_Update_Queue)\n\n## Instance Methods / Lifecycle\n\n### vm.$mount( [elementOrSelector] )\n\n- **Arguments:**\n  - `{Element|String} [elementOrSelector]`\n\n- **Returns:** `vm` - the instance itself\n\n- **Usage:**\n\n  If a Vue instance didn't receive the `el` option at instantiation, it will be in \"unmounted\" state, without an associated DOM element or fragment. `vm.$mount()` can be used to manually start the mounting/compilation of an unmounted Vue instance.\n\n  If no argument is provided, the template will be created as an out-of-document fragment, and you will have to use other DOM instance methods to insert it into the document yourself. If `replace` option is set to `false`, then an empty `<div>` will be automatically created as the wrapper element.\n\n  Calling `$mount()` on an already mounted instance will have no effect. The method returns the instance itself so you can chain other instance methods after it.\n\n- **Example:**\n\n  ``` js\n  var MyComponent = Vue.extend({\n    template: '<div>Hello!</div>'\n  })\n  \n  // create and mount to #app (will replace #app)\n  new MyComponent().$mount('#app')\n\n  // the above is the same as:\n  new MyComponent({ el: '#app' })\n\n  // or, compile off-document and append afterwards:\n  new MyComponent().$mount().$appendTo('#container')\n  ```\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### vm.$destroy( [remove] )\n\n- **Arguments:**\n  - `{Boolean} [remove] - default: false`\n\n- **Usage:**\n\n  Completely destroy a vm. Clean up its connections with other existing vms, unbind all its directives, turn off all event listeners and, if the `remove` argument is true, remove its associated DOM element or fragment from the DOM.\n\n  Triggers the `beforeDestroy` and `destroyed` hooks.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n## Directives\n\n### v-text\n\n- **Expects:** `String`\n\n- **Details:**\n\n  Updates the element's `textContent`.\n\n  Internally, `{% raw %}{{ Mustache }}{% endraw %}` interpolations are also compiled as a `v-text` directive on a textNode. The directive form requires a wrapper element, but offers slightly better performance and avoids FOUC (Flash of Uncompiled Content).\n\n- **Example:**\n\n  ``` html\n  <span v-text=\"msg\"></span>\n  <!-- same as -->\n  <span>{{msg}}</span>\n  ```\n\n### v-html\n\n- **Expects:** `String`\n\n- **Details:**\n\n  Updates the element's `innerHTML`. The contents are inserted as plain HTML - data bindings are ignored. If you need to reuse template pieces, you should use [partials](#partial).\n\n  Internally, `{% raw %}{{{ Mustache }}}{% endraw %}` interpolations are also compiled as a `v-html` directive using anchor nodes. The directive form requires a wrapper element, but offers slightly better performance and avoids FOUC (Flash of Uncompiled Content).\n\n  <p class=\"tip\">Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to [XSS attacks](https://en.wikipedia.org/wiki/Cross-site_scripting). Only use `v-html` on trusted content and **never** on user-provided content.</p>\n\n- **Example:**\n\n  ``` html\n  <div v-html=\"html\"></div>\n  <!-- same as -->\n  <div>{{{html}}}</div>\n  ```\n\n### v-if\n\n- **Expects:** `*`\n\n- **Usage:**\n\n  Conditionally render the element based on the truthy-ness of the expression value. The element and its contained data bindings / components are destroyed and re-constructed during toggles. If the element is a `<template>` element, its content will be extracted as the conditional block.\n\n- **See also:** [Conditional Rendering](/guide/conditional.html)\n\n### v-show\n\n- **Expects:** `*`\n\n- **Usage:**\n\n  Toggle's the element's `display` CSS property based on the truthy-ness of the expression value. Triggers transitions if present.\n\n- **See also:** [Conditional Rendering - v-show](/guide/conditional.html#v-show)\n\n### v-else\n\n- **Does not expect expression**\n\n- **Restriction:** previous sibling element must have `v-if` or `v-show`.\n\n- **Usage:**\n\n  Denote the \"else block\" for `v-if` and `v-show`.\n\n  ``` html\n  <div v-if=\"Math.random() > 0.5\">\n    Sorry\n  </div>\n  <div v-else>\n    Not sorry\n  </div>\n  ```\n\n- **See also:** [Conditional Rendering - v-else](/guide/conditional.html#v-else)\n\n### v-for\n\n- **Expects:** `Array | Object | Number | String`\n\n- **Param Attributes:**\n  - [`track-by`](/guide/list.html#track-by)\n  - [`stagger`](/guide/transitions.html#Staggering_Transitions)\n  - [`enter-stagger`](/guide/transitions.html#Staggering_Transitions)\n  - [`leave-stagger`](/guide/transitions.html#Staggering_Transitions)\n\n- **Usage:**\n\n  Render the element or template block multiple times based on the source data. The expression must use the special syntax to provide an alias for the current element being iterated on:\n\n  ``` html\n  <div v-for=\"item in items\">\n    {{ item.text }}\n  </div>\n  ```\n\n  Alternatively, you can also specify an alias for the index (or the key if used on an Object):\n\n  ``` html\n  <div v-for=\"(index, item) in items\"></div>\n  <div v-for=\"(key, val) in object\"></div>\n  ```\n\n  The detailed usage for `v-for` is explained in the guide section linked below.\n\n- **See also:** [List Rendering](/guide/list.html).\n\n### v-on\n\n- **Shorthand:** `@`\n\n- **Expects:** `Function | Inline Statement`\n\n- **Argument:** `event (required)`\n\n- **Modifiers:**\n  - `.stop` - call `event.stopPropagation()`.\n  - `.prevent` - call `event.preventDefault()`.\n  - `.{keyCode | keyAlias}` - only trigger handler on certain keys.\n\n- **Usage:**\n\n  Attaches an event listener to the element. The event type is denoted by the argument. The expression can either be a method name or an inline statement, or simply omitted when there are modifiers present.\n\n  When used on a normal element, it listens to **native DOM events** only. When used on a custom element component, it also listens to **custom events** emitted on that child component.\n\n- **Example:**\n\n  ``` html\n  <!-- method handler -->\n  <button v-on:click=\"doThis\"></button>\n\n  <!-- inline statement -->\n  <button v-on:click=\"doThat('hello')\"></button>\n\n  <!-- shorthand -->\n  <button @click=\"doThis\"></button>\n\n  <!-- stop propagation -->\n  <button @click.stop=\"doThis\"></button>\n\n  <!-- prevent default -->\n  <button @click.prevent=\"doThis\"></button>\n\n  <!-- prevent default without expression -->\n  <form @submit.prevent></form>\n\n  <!-- chain modifiers -->\n  <button @click.stop.prevent=\"doThis\"></button>\n\n  <!-- key modifier using keyAlias -->\n  <input @keyup.enter=\"onEnter\">\n\n  <!-- key modifier using keyCode -->\n  <input @keyup.13=\"onEnter\">\n  ```\n\n  Listening to custom events on a child component (the handler is called when \"my-event\" is emitted on the child):\n\n  ``` html\n  <my-component @my-event=\"handleThis\"></my-component>\n  ```\n\n- **See also:** [Methods and Event Handling](/guide/events.html)\n\n### v-bind\n\n- **Shorthand:** `:`\n\n- **Expects:** `* (with argument) | Object (without argument)`\n\n- **Argument:** `attrOrProp (optional)`\n\n- **Modifiers:**\n  - `.sync` - make the binding two-way. Only respected for prop bindings.\n  - `.once` - make the binding one-time. Only respected for prop bindings.\n\n- **Usage:**\n\n  Dynamically bind one or more attributes, or a component prop to an expression.\n\n  When used to bind the `class` or `style` attribute, it supports additional value types such as Array or Objects. See linked guide section below for more details.\n\n  When used for prop binding, the prop must be properly declared in the child component. Prop bindings can specify a different binding type using one of the modifiers.\n\n  When used without an argument, can be used to bind an object containing attribute name-value pairs. Note in this mode `class` and `style` does not support Array or Objects.\n\n- **Example:**\n\n  ``` html\n  <!-- bind an attribute -->\n  <img v-bind:src=\"imageSrc\">\n\n  <!-- shorthand -->\n  <img :src=\"imageSrc\">\n\n  <!-- class binding -->\n  <div :class=\"{ red: isRed }\"></div>\n  <div :class=\"[classA, classB]\"></div>\n\n  <!-- style binding -->\n  <div :style=\"{ fontSize: size + 'px' }\"></div>\n  <div :style=\"[styleObjectA, styleObjectB]\"></div>\n\n  <!-- binding an object of attributes -->\n  <div v-bind=\"{ id: someProp, 'other-attr': otherProp }\"></div>\n\n  <!-- prop binding. \"prop\" must be declared in my-component. -->\n  <my-component :prop=\"someThing\"></my-component>\n\n  <!-- two-way prop binding -->\n  <my-component :prop.sync=\"someThing\"></my-component>\n\n  <!-- one-time prop binding -->\n  <my-component :prop.once=\"someThing\"></my-component>\n  ```\n\n- **See also:**\n  - [Class and Style Bindings](/guide/class-and-style.html)\n  - [Component Props](/guide/components.html#Props)\n\n### v-model\n\n- **Expects:** varies based on input type\n\n- **Limited to:**\n  - `<input>`\n  - `<select>`\n  - `<textarea>`\n\n- **Param Attributes:**\n  - [`lazy`](/guide/forms.html#lazy)\n  - [`number`](/guide/forms.html#number)\n  - [`debounce`](/guide/forms.html#debounce)\n\n- **Usage:**\n\n  Create a two-way binding on a form input element. For detailed usage, see guide section linked below.\n\n- **See also:** [Form Input Bindings](/guide/forms.html)\n\n### v-ref\n\n- **Does not expect expression**\n\n- **Limited to:** child components\n\n- **Argument:** `id (required)`\n\n- **Usage:**\n\n  Register a reference to a child component on its parent for direct access. Does not expect an expression. Must provide an argument as the id to register with. The component instance will be accessible on its parent's `$refs` object.\n\n  When used on a component together with `v-for`, the registered value will be an Array containing all the child component instances corresponding to the Array they are bound to. If the data source for `v-for` is an Object, the registered value will be an Object containing key-instance pairs mirroring the source Object.\n\n- **Note:**\n\n  Because HTML is case-insensitive, camelCase usage like `v-ref:someRef` will be converted to all lowercase. You can use `v-ref:some-ref` which properly sets `this.$refs.someRef`.\n\n- **Example:**\n\n  ``` html\n  <comp v-ref:child></comp>\n  <comp v-ref:some-child></comp>\n  ```\n\n  ``` js\n  // access from parent:\n  this.$refs.child\n  this.$refs.someChild\n  ```\n\n  With `v-for`:\n\n  ``` html\n  <comp v-ref:list v-for=\"item in list\"></comp>\n  ```\n\n  ``` js\n  // this will be an array in parent\n  this.$refs.list\n  ```\n\n- **See also:** [Child Component Refs](/guide/components.html#Child_Component_Refs)\n\n### v-el\n\n- **Does not expect expression**\n\n- **Argument:** `id (required)`\n\n- **Usage:**\n  \n  Register a reference to a DOM element on its owner Vue instance's `$els` object for easier access.\n\n- **Note:**\n\n  Because HTML is case-insensitive, camelCase usage like `v-el:someEl` will be converted to all lowercase. You can use `v-el:some-el` which properly sets `this.$els.someEl`.\n\n- **Example:**\n\n  ``` html\n  <span v-el:msg>hello</span>\n  <span v-el:other-msg>world</span>\n  ```\n  ``` js\n  this.$els.msg.textContent // -> \"hello\"\n  this.$els.otherMsg.textContent // -> \"world\"\n  ```\n\n### v-pre\n\n- **Does not expect expression**\n\n- **Usage**\n\n  Skip compilation for this element and all its children. You can use this for displaying raw mustache tags. Skipping large numbers of nodes with no directives on them can also speed up compilation.\n\n- **Example:**\n\n  ``` html\n  <span v-pre>{{ this will not be compiled }}</span>\n  ```\n\n### v-cloak\n\n- **Does not expect expression**\n\n- **Usage:**\n\n  This directive will remain on the element until the associated Vue instance finishes compilation. Combined with CSS rules such as `[v-cloak] { display: none }`, this directive can be used to hide un-compiled mustache bindings until the Vue instance is ready.\n\n- **Example:**\n\n  ``` css\n  [v-cloak] {\n    display: none;\n  }\n  ```\n\n  ``` html\n  <div v-cloak>\n    {{ message }}\n  </div>\n  ```\n\n  The `<div>` will not be visible until the compilation is done.\n\n## Special Elements\n\n### component\n\n- **Attributes:**\n  - `is`\n\n- **Usage:**\n\n  Alternative syntax for invoking components. Primarily used for dynamic components with the `is` attribute:\n\n  ``` html\n  <!-- a dynamic component controlled by -->\n  <!-- the `componentId` property on the vm -->\n  <component :is=\"componentId\"></component>\n  ```\n\n- **See also:** [Dynamic Components](/guide/components.html#Dynamic_Components)\n\n### slot\n\n- **Attributes:**\n  - `name`\n\n- **Usage:**\n\n  `<slot>` elements serve as content distribution outlets in component templates. The slot element itself will be replaced.\n\n  A slot with the `name` attribute is called a named slot. A named slot will distribute content with a `slot` attribute that matches its name.\n\n  For detailed usage, see the guide section linked below.\n\n- **See also:** [Content Distribution with Slots](/guide/components.html#Content_Distribution_with_Slots)\n\n### partial\n\n- **Attributes:**\n  - `name`\n\n- **Usage:**\n\n  `<partial>` elements serve as outlets for registered template partials. Partial contents are also compiled by Vue when inserted. The `<partial>` element itself will be replaced. It requires a `name` attribute which will be used to resolve the partial's content.\n\n- **Example:**\n\n  ``` js\n  // registering a partial\n  Vue.partial('my-partial', '<p>This is a partial! {{msg}}</p>')\n  ```\n\n  ``` html\n  <!-- a static partial -->\n  <partial name=\"my-partial\"></partial>\n\n  <!-- a dynamic partial -->\n  <!-- renders partial with id === vm.partialId -->\n  <partial v-bind:name=\"partialId\"></partial>\n\n  <!-- dynamic partial using v-bind shorthand -->\n  <partial :name=\"partialId\"></partial>\n  ```\n\n## Filters\n\n### capitalize\n\n- **Example:**\n\n  ``` html\n  {{ msg | capitalize }}\n  ```\n\n  *'abc' => 'Abc'*\n\n### uppercase\n\n- **Example:**\n\n  ``` html\n  {{ msg | uppercase }}\n  ```\n\n  *'abc' => 'ABC'*\n\n### lowercase\n\n- **Example:**\n\n  ``` html\n  {{ msg | lowercase }}\n  ```\n\n  *'ABC' => 'abc'*\n\n### currency\n\n- **Arguments:**\n  - `{String} [symbol] - default: '$'`\n\n- **Example:**\n\n  ``` html\n  {{ amount | currency }}\n  ```\n\n  *12345 => $12,345.00*\n\n  Use a different symbol:\n\n  ``` html\n  {{ amount | currency '£' }}\n  ```\n\n  *12345 => £12,345.00*\n\n### pluralize\n\n- **Arguments:**\n  - `{String} single, [double, triple, ...]`\n\n- **Usage:**\n\n  Pluralizes the argument based on the filtered value. When there is exactly one argument, plural forms simply add an \"s\" at the end. When there are more than one argument, the arguments will be used as array of strings corresponding to the single, double, triple ... forms of the word to be pluralized. When the number to be pluralized exceeds the length of the arguments, it will use the last entry in the array.\n\n- **Example:**\n\n  ``` html\n  {{count}} {{count | pluralize 'item'}}\n  ```\n\n  *1 => '1 item'*  \n  *2 => '2 items'*\n\n  ``` html\n  {{date}}{{date | pluralize 'st' 'nd' 'rd' 'th'}}\n  ```\n\n  Will result in:\n\n  *1 => '1st'*  \n  *2 => '2nd'*\n  *3 => '3rd'*\n  *4 => '4th'*\n  *5 => '5th'*\n\n### json\n\n- **Arguments:**\n  - `{Number} [indent] - default: 2`\n\n- **Usage:**\n  \n  Output the result of calling `JSON.stringify()` on the value instead of outputting the `toString()` value (e.g. `[object Object]`).\n\n- **Example:**\n\n  Print an object with 4-space indent:\n\n  ``` html\n  <pre>{{ nestedObject | json 4 }}</pre>\n  ```\n\n### debounce\n\n- **Limited to:** directives that expect `Function` values, e.g. `v-on`\n\n- **Arguments:**\n  - `{Number} [wait] - default: 300`\n\n- **Usage:**\n\n  Wrap the handler to debounce it for `x` milliseconds, where `x` is the argument. Default wait time is 300ms. A debounced handler will be delayed until at least `x` ms has passed after the call moment; if the handler is called again before the delay period, the delay period is reset to `x` ms.\n\n- **Example:**\n\n  ``` html\n  <input @keyup=\"onKeyup | debounce 500\">\n  ```\n\n### limitBy\n\n- **Limited to:** directives that expect `Array` values, e.g. `v-for`\n\n- **Arguments:**\n  - `{Number} limit`\n\n- **Usage:**\n\n  Limit the array to the first N items, as specified by the argument.\n\n  ``` html\n  <!-- only display first 10 items -->\n  <div v-for=\"item in items | limitBy 10\"></div>\n  ```\n\n### filterBy\n\n- **Limited to:** directives that expect `Array` values, e.g. `v-for`\n\n- **Arguments:**\n  - `{String | Function} targetStringOrFunction`\n  - `\"in\" (optional delimiter)`\n  - `{String} [...searchKeys]`\n\n- **Usage:**\n\n  Return a filtered version of the source Array. The first argument can either be a string or a function.\n\n  When the first argument is a string, it will be used as the target string to search for in each element of the Array:\n\n  ``` html\n  <div v-for=\"item in items | filterBy 'hello'\">\n  ```\n\n  In the above example, only items that contain the target string `\"hello\"` will be displayed.\n\n  If the item is an object, the filter will recursively search every nested property of the object for the target string. To narrow down the search scope, additional search keys can be specified:\n\n  ``` html\n  <div v-for=\"user in users | filterBy 'Jack' in 'name'\">\n  ```\n\n  In the above example, the filter will only search for `\"Jack\"` in the `name` field of each user object. **It is a good idea to always limit the search scope for better performance.**\n\n  The examples above are using static arguments - we can, of course, use dynamic arguments as target string or search keys. Combined with `v-model` we can easily implement type-ahead filtering:\n\n  ``` html\n  <div id=\"filter-by-example\">\n    <input v-model=\"name\">\n    <ul>\n      <li v-for=\"user in users | filterBy name in 'name'\">\n        {{ user.name }}\n      </li>\n    </ul>\n  </div>\n  ```\n\n  ``` js\n  new Vue({\n    el: '#filter-by-example',\n    data: {\n      name: '',\n      users: [\n        { name: 'Bruce' },\n        { name: 'Chuck' },\n        { name: 'Jackie' }\n      ]\n    }\n  })\n  ```\n\n  {% raw %}\n  <div id=\"filter-by-example\" class=\"demo\">\n    <input v-model=\"name\">\n    <ul>\n      <li v-for=\"user in users | filterBy name in 'name'\">\n        {{ user.name }}\n      </li>\n    </ul>\n  </div>\n  <script>\n  new Vue({\n    el: '#filter-by-example',\n    data: {\n      name: '',\n      users: [{ name: 'Bruce' }, { name: 'Chuck' }, { name: 'Jackie' }]\n    }\n  })\n  </script>\n  {% endraw %}\n\n- **Additional Examples:**\n\n  Multiple search keys:\n\n  ``` html\n  <li v-for=\"user in users | filterBy searchText in 'name' 'phone'\"></li>\n  ```\n\n  Multiple search keys with a dynamic Array argument:\n\n  ``` html\n  <!-- fields = ['fieldA', 'fieldB'] -->\n  <div v-for=\"user in users | filterBy searchText in fields\">\n  ```\n\n  Use a custom filter function:\n\n  ``` html\n  <div v-for=\"user in users | filterBy myCustomFilterFunction\">\n  ```\n\n### orderBy\n\n- **Limited to:** directives that expect `Array` values, e.g. `v-for`\n\n- **Arguments:**\n  - `{String} sortKey`\n  - `{String} [order] - default: 1`\n\n- **Usage:**\n\n  Return a sorted version of the source Array. The `sortKey` is the key to use for the sorting. The optional `order` argument specifies whether the result should be in ascending (`order >= 0`) or descending (`order < 0`) order.\n\n  For arrays of primitive values, any truthy `sortKey` will work.\n\n- **Example:**\n\n  Sort users by name:\n\n  ``` html\n  <ul>\n    <li v-for=\"user in users | orderBy 'name'\">\n      {{ user.name }}\n    </li>\n  </ul>\n  ```\n\n  In descending order:\n\n  ``` html\n  <ul>\n    <li v-for=\"user in users | orderBy 'name' -1\">\n      {{ user.name }}\n    </li>\n  </ul>\n  ```\n\n  Sort primitive values:\n\n  ``` html\n  <ul>\n    <li v-for=\"n in numbers | orderBy true\">\n      {{ n }}\n    </li>\n  </ul>\n  ```\n\n  Dynamic sort order:\n\n  ``` html\n  <div id=\"orderby-example\">\n    <button @click=\"order = order * -1\">Reverse Sort Order</button>\n    <ul>\n      <li v-for=\"user in users | orderBy 'name' order\">\n        {{ user.name }}\n      </li>\n    </ul>\n  </div>\n  ```\n\n  ``` js\n  new Vue({\n    el: '#orderby-example',\n    data: {\n      order: 1,\n      users: [{ name: 'Bruce' }, { name: 'Chuck' }, { name: 'Jackie' }]\n    }\n  })\n  ```\n\n  {% raw %}\n  <div id=\"orderby-example\" class=\"demo\">\n    <button @click=\"order = order * -1\">Reverse Sort Order</button>\n    <ul>\n      <li v-for=\"user in users | orderBy 'name' order\">\n        {{ user.name }}\n      </li>\n    </ul>\n  </div>\n  <script>\n  new Vue({\n    el: '#orderby-example',\n    data: {\n      order: 1,\n      users: [{ name: 'Bruce' }, { name: 'Chuck' }, { name: 'Jackie' }]\n    }\n  })\n  </script>\n  {% endraw %}\n","source":"api/index.md","raw":"---\ntype: api\n---\n\n## Global Config\n\n`Vue.config` is an object containing Vue's global configurations. You can modify its properties listed below before bootstrapping your application:\n\n### debug\n\n- **Type:** `Boolean`\n\n- **Default:** `false`\n\n- **Usage:**\n\n  ``` js\n  Vue.config.debug = true\n  ```\n\n  When in debug mode, Vue will:\n\n  1. Print stack traces for all warnings.\n\n  2. Make all anchor nodes visible in the DOM as Comment nodes. This makes it easier to inspect the structure of the rendered result.\n\n  <p class=\"tip\">Debug mode is only available in development build.</p>\n\n### delimiters\n\n- **Type:** `Array<String>`\n\n- **Default:** `{% raw %}[\"{{\", \"}}\"]{% endraw %}`\n\n- **Usage:**\n\n  ``` js\n  // ES6 template string style\n  Vue.config.delimiters = ['${', '}']\n  ```\n\n  Change the plain text interpolation delimiters.\n\n### unsafeDelimiters\n\n- **Type:** `Array<String>`\n\n- **Default:** `{% raw %}[\"{{{\", \"}}}\"]{% endraw %}`\n\n- **Usage:**\n\n  ``` js\n  // make it look more dangerous\n  Vue.config.delimiters = ['{!!', '!!}']\n  ```\n\n  Change the raw HTML interpolation delimiters.\n\n### silent\n\n- **Type:** `Boolean`\n\n- **Default:** `false`\n\n- **Usage:**\n\n  ``` js\n  Vue.config.silent = true\n  ```\n\n  Suppress all Vue.js logs and warnings.\n\n### async\n\n- **Type:** `Boolean`\n\n- **Default:** `true`\n\n- **Usage:**\n\n  ``` js\n  Vue.config.async = false\n  ```\n\n  When async mode is off, Vue will perform all DOM updates synchronously upon detecting data change. This may help with debugging in some scenarios, but could also cause degraded performance and affect the order in which watcher callbacks are called. **`async: false` is not recommended in production.**\n\n## Global API\n\n### Vue.extend( options )\n\n- **Arguments:**\n  - `{Object} options`\n\n- **Usage:**\n\n  Create a \"subclass\" of the base Vue constructor. The argument should be an object containing component options.\n\n  The special cases to note here are `el` and `data` options - they must be functions when used with `Vue.extend()`.\n\n  ``` html\n  <div id=\"mount-point\"></div>\n  ```\n\n  ``` js\n  // create reusable constructor\n  var Profile = Vue.extend({\n    template: '<p>{{firstName}} {{lastName}} aka {{alias}}</p>'\n  })\n  // create an instance of Profile\n  var profile = new Profile({\n    data: {\n      firstName: 'Walter',\n      lastName: 'White',\n      alias: 'Heisenberg'\n    }  \n  })\n  // mount it on an element\n  profile.$mount('#mount-point')\n  ```\n\n  Will result in:\n\n  ``` html\n  <p>Walter White aka Heisenberg</p>\n  ```\n\n- **See also:** [Components](/guide/components.html)\n\n### Vue.nextTick( callback )\n\n- **Arguments:**\n  - `{Functon} callback`\n\n- **Usage:**\n\n  Defer the callback to be executed after the next DOM update cycle. Use it immediately after you've changed some data to wait for the DOM update.\n\n  ``` js\n  // modify data\n  vm.msg = 'Hello'\n  // DOM not updated yet\n  Vue.nextTick(function () {\n    // DOM updated\n  })\n  ```\n\n- **See also:** [Async Update Queue](/guide/reactivity.html#Async_Update_Queue)\n\n### Vue.set( object, key, value )\n\n- **Arguments:**\n  - `{Object} object`\n  - `{String} key`\n  - `{*} value`\n\n- **Usage:**\n\n  Set a property on an object. If the object is reactive, ensure the property is created as a reactive property and trigger view updates. This is primarily used to get around the limitation that Vue cannot detect property additions.\n\n- **See also:** [Reactivity in Depth](/guide/reactivity.html)\n\n### Vue.delete( object, key )\n\n- **Arguments:**\n  - `{Object} object`\n  - `{String} key`\n\n- **Usage:**\n\n  Delete a property on an object. If the object is reactive, ensure the deletion triggers view updates. This is primarily used to get around the limitation that Vue cannot detect property deletions, but you should rarely need to use it.\n\n- **See also:** [Reactivity in Depth](/guide/reactivity.html)\n\n### Vue.directive( id, [definition] )\n\n- **Arguments:**\n  - `{String} id`\n  - `{Function | Object} [definition]`\n\n- **Usage:**\n  \n  Register or retrieve a global directive.\n\n  ``` js\n  // register\n  Vue.directive('my-directive', {\n    bind: function () {},\n    update: function () {},\n    unbind: function () {}\n  })\n\n  // register (simple function directive)\n  Vue.directive('my-directive', function () {\n    // this will be called as `update`\n  })\n\n  // getter, return the directive definition if registered\n  var myDirective = Vue.directive('my-directive')\n  ```\n\n- **See also:** [Custom Directives](/guide/custom-directive.html)\n\n### Vue.elementDirective( id, [definition] )\n\n- **Arguments:**\n  - `{String} id`\n  - `{Object} [definition]`\n\n- **Usage:**\n\n  Register or retrieve a global element directive.\n\n  ``` js\n  // register\n  Vue.elementDirective('my-element', {\n    bind: function () {},\n    // element directives do not use `update`\n    unbind: function () {}\n  })\n\n  // getter, return the directive definition if registered\n  var myDirective = Vue.elementDirective('my-element')\n  ```\n\n- **See also:** [Element Directives](/guide/custom-directive.html#Element_Directives)\n\n### Vue.filter( id, [definition] )\n\n- **Arguments:**\n  - `{String} id`\n  - `{Function | Object} [definition]`\n\n- **Usage:**\n\n  Register or retrieve a global filter.\n\n  ``` js\n  // register\n  Vue.filter('my-filter', function (value) {\n    // return processed value\n  })\n\n  // two way filter\n  Vue.filter('my-filter', {\n    read: function () {},\n    write: function () {}\n  })\n\n  // getter, return the filter if registered\n  var myFilter = Vue.filter('my-filter')\n  ```\n\n- **See also:** [Custom Filter](/guide/custom-filter.html)\n\n### Vue.component( id, [definition] )\n\n- **Arguments:**\n  - `{String} id`\n  - `{Function | Object} [definition]`\n\n- **Usage:**\n\n  Register or retrieve a global component.\n\n  ``` js\n  // register an extended constructor\n  Vue.component('my-component', Vue.extend({ /* ... */}))\n\n  // register an options object (automatically call Vue.extend)\n  Vue.component('my-component', { /* ... */ })\n\n  // retrive a registered component (always return constructor)\n  var MyComponent = Vue.component('my-component')\n  ```\n\n- **See also:** [Components](/guide/components.html).\n\n### Vue.transition( id, [hooks] )\n\n- **Arguments:**\n  - `{String} id`\n  - `{Object} [hooks]`\n\n- **Usage:**\n\n  Register or retrieve a global transition hooks object.\n\n  ``` js\n  // register\n  Vue.transition('fade', {\n    enter: function () {},\n    leave: function () {}\n  })\n\n  // retrieve registered hooks\n  var fadeTransition = Vue.transition('fade')\n  ```\n\n- **See also:** [Transitions](/guide/transitions.html).\n\n### Vue.partial( id, [partial] )\n\n- **Arguments:**\n  - `{String} id`\n  - `{String} [partial]`\n\n- **Usage:**\n\n  Register or retrieve a global template partial string.\n\n  ``` js\n  // register\n  Vue.partial('my-partial', '<div>Hi</div>')\n\n  // retrieve registered partial\n  var myPartial = Vue.partial('my-partial')\n  ```\n\n- **See also:** [Special Elements - &lt;partial&gt;](#partial).\n\n### Vue.use( plugin, [options] )\n\n- **Arguments:**\n  - `{Object | Function} plugin`\n  - `{Object} [options]`\n\n- **Usage:**\n\n  Install a Vue.js plugin. If the plugin is an Object, it must expose an `install` method. If it is a function itself, it will be treated as the install method. The install method will be called with Vue as the argument.\n\n- **See also:** [Plugins](/guide/plugins.html).\n\n### Vue.mixin( mixin )\n\n- **Arguments:**\n  - `{Object} mixin`\n\n- **Usage:**\n\n  Apply a mixin globally, which affects every Vue instance created afterwards. This can be used by plugin authors to inject custom behavior into components. **Not recommended in application code**.\n\n- **See also:** [Global Mixins](/guide/mixins.html#Global_Mixin)\n\n## Options / Data\n\n### data\n\n- **Type:** `Object | Function`\n\n- **Restriction:** Only accepts `Function` when used in `Vue.extend()`.\n\n- **Details:**\n\n  The data object for the Vue instance. Vue.js will recursively convert its properties into getter/setters to make it \"reactive\". **The object must be plain**: native objects, existing getter/setters and prototype properties are ignored. It is not recommended to observe complex objects.\n\n  Once the instance is created, the original data object can be accessed as `vm.$data`. The Vue instance also proxies all the properties found on the data object.\n\n  Properties that start with `_` or `$` will **not** be proxied on the Vue instance because they may conflict with Vue's internal properties and API methods. You will have to access them as `vm.$data._property`.\n\n- **Example:**\n\n  ``` js\n  var data = { a: 1 }\n\n  // direct instance creation\n  var vm = new Vue({\n    data: data\n  })\n  vm.a // -> 1\n  vm.$data === data // -> true\n\n  // must use function when in Vue.extend()\n  var Component = Vue.extend({\n    data: function () {\n      return { a: 1 }\n    }\n  })\n  ```\n\n- **See also:** [Reactivity in Depth](/guide/reactivity.html).\n\n### props\n\n- **Type:** `Array | Object`\n\n- **Details:**\n\n  A list/hash of attributes that are exposed to accept data from the parent component. It has a simple Array-based syntax and an alternative Object-based syntax that allows advanced configurations such as type checking, custom validation and default values.\n\n- **Example:**\n\n  ``` js\n  // simple syntax\n  Vue.component('props-demo-simple', {\n    props: ['size', 'myMessage']\n  })\n\n  // object syntax with validation\n  Vue.component('props-demo-advanced', {\n    props: {\n      // just type check\n      size: Number,\n      // type check plus other validations\n      name: {\n        type: String,\n        required: true\n      }\n    }\n  })\n  ```\n\n- **See also:** [Props](/guide/components.html#Props)\n\n### computed\n\n- **Type:** `Object`\n\n- **Details:**\n\n  Computed properties to be mixed into the Vue instance. All getters and setters have their `this` context automatically bound to the Vue instance.\n\n- **Example:**\n\n  ```js\n  var vm = new Vue({\n    data: { a: 1 },\n    computed: {\n      // get only, just need a function\n      aDouble: function () {\n        return this.a * 2\n      },\n      // both get and set\n      aPlus: {\n        get: function () {\n          return this.a + 1\n        },\n        set: function (v) {\n          this.a = v - 1\n        }\n      }\n    }\n  })\n  vm.aPlus   // -> 2\n  vm.aPlus = 3\n  vm.a       // -> 2\n  vm.aDouble // -> 4\n  ```\n\n- **See also:**\n  - [Computed Properties](/guide/computed.html)\n  - [Reactivity in Depth: Inside Computed Properties](/guide/reactivity.html#Inside_Computed_Properties)\n\n### methods\n\n- **Type:** `Object`\n\n- **Details:**\n\n  Methods to be mixed into the Vue instance. You can access these methods directly on the VM instance, or use them in directive expressions. All methods will have their `this` context automatically bound to the Vue instance.\n\n- **Example:**\n\n  ```js\n  var vm = new Vue({\n    data: { a: 1 },\n    methods: {\n      plus: function () {\n        this.a++\n      }\n    }\n  })\n  vm.plus()\n  vm.a // 2\n  ```\n\n- **See also:** [Methods and Event Handling](/guide/events.html)\n\n### watch\n\n- **Type:** `Object`\n\n- **Details:**\n\n  An object where keys are expressions to watch and values are the corresponding callbacks. The value can also be a string of a method name, or an Object that contains additional options. The Vue instance will call `$watch()` for each entry in the object at instantiation.\n\n- **Example:**\n\n  ``` js\n  var vm = new Vue({\n    data: {\n      a: 1\n    },\n    watch: {\n      'a': function (val, oldVal) {\n        console.log('new: %s, old: %s', val, oldVal)\n      },\n      // string method name\n      'b': 'someMethod',\n      // deep watcher\n      'c': {\n        handler: function (val, oldVal) { /* ... */ },\n        deep: true\n      }\n    }\n  })\n  vm.a = 2 // -> new: 2, old: 1\n  ```\n\n- **See also:** [Instance Methods - vm.$watch](#vm-watch)\n\n## Options / DOM\n\n### el\n\n- **Type:** `String | HTMLElement | Function`\n\n- **Restriction:** only accepts type `Function` when used in `Vue.extend()`.\n\n- **Details:**\n\n  Provide the Vue instance an existing DOM element to mount on. It can be a CSS selector string, an actual HTMLElement, or a function that returns an HTMLElement. Note that the provided element merely serves as a mounting point; it will be replaced if a template is also provided, unless `replace` is set to false. The resolved element will be accessible as `vm.$el`.\n\n  When used in `Vue.extend`, a function must be provided so each instance gets a separately created element.\n\n  If this option is available at instantiation, the instance will immediately enter compilation; otherwise, the user will have to explicitly call `vm.$mount()` to manually start the compilation.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### template\n\n- **Type:** `String`\n\n- **Details:**\n\n  A string template to be used as the markup for the Vue instance. By default, the template will **replace** the mounted element. When the `replace` option is set to `false`, the template will be inserted into the mounted element instead. In both cases, any existing markup inside the mounted element will be ignored, unless content distribution slots are present in the template.\n\n  If the string starts with `#` it will be used as a querySelector and use the selected element's innerHTML as the template string. This allows the use of the common `<script type=\"x-template\">` trick to include templates.\n\n  Note that under certain situations, for example when the template contains more than one top-level element, or contains only plain text, the instance will become a fragment instance - i.e. one that manages a list of nodes rather than a single node. Non flow-control directives on the mount point for fragment instances are ignored.\n\n- **See also:**\n  - [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n  - [Content Distribution](/guide/components.html#Content_Distribution_with_Slots)\n  - [Fragment Instance](/guide/components.html#Fragment_Instance)\n\n### replace\n\n- **Type:** `Boolean`  \n\n- **Default:** `true`\n\n- **Restriction:** only respected if the **template** option is also present.\n\n- **Details:**\n\n  Determines whether to replace the element being mounted on with the template. If set to `false`, the template will overwrite the element's inner content without replacing the element itself.\n\n- **Example**:\n\n  ``` html\n  <div id=\"replace\"></div>\n  ```\n\n  ``` js\n  new Vue({\n    el: '#replace',\n    template: '<p>replaced</p>'\n  })\n  ```\n\n  Will result in:\n\n  ``` html\n  <p>replaced</p>\n  ```\n\n  In comparison, when `replace` is set to `false`:\n\n  ``` html\n  <div id=\"insert\"></div>\n  ```\n\n  ``` js\n  new Vue({\n    el: '#insert',\n    replace: false,\n    template: '<p>inserted</p>'\n  })\n  ```\n\n  Will result in:\n\n  ``` html\n  <div id=\"insert\">\n    <p>inserted</p>\n  </div>\n  ```\n\n## Options / Lifecycle Hooks\n\n### created\n\n- **Type:** `Function`\n\n- **Details:**\n  \n  Called synchronously after the instance is created. At this stage, the instance has finished processing the options which means the following have been set up: data observation, computed properties, methods, watch/event callbacks. However, DOM compilation has not been started, and the `$el` property will not be available yet.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### beforeCompile\n\n- **Type:** `Function`\n\n- **Details:**\n  \n  Called right before the compilation starts.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### compiled\n\n- **Type:** `Function`\n\n- **Details:**\n\n  Called after the compilation is finished. At this stage all directives have been linked so data changes will trigger DOM updates. However, `$el` is not guaranteed to have been inserted into the document yet.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### ready\n\n- **Type:** `Function`\n\n- **Details:**\n\n  Called after compilation **and** the `$el` is **inserted into the document for the first time**, i.e. right after the first `attached` hook. Note this insertion must be executed via Vue (with methods like `vm.$appendTo()` or as a result of a directive update) to trigger the `ready` hook.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### attached\n\n- **Type:** `Function`\n\n- **Details:**\n  \n  Called when `vm.$el` is attached to DOM by a directive or a VM instance method such as `$appendTo()`. Direct manipulation of `vm.$el` will **not** trigger this hook.\n\n### detached\n\n- **Type:** `Function`\n\n- **Details:**\n  \n  Called when `vm.$el` is removed from the DOM by a directive or a VM instance method. Direct manipulation of `vm.$el` will **not** trigger this hook.\n\n### beforeDestroy\n\n- **Type:** `Function`\n\n- **Details:**\n  \n  Called right before a Vue instance is destroyed. At this stage the instance is still fully functional.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### destroyed\n\n- **Type:** `Function`\n\n- **Details:**\n\n  Called after a Vue instance has been destroyed. When this hook is called, all bindings and directives of the Vue instance have been unbound and all child Vue instances have also been destroyed.\n\n  Note if there is a leaving transition, the `destroyed` hook is called **after** the transition has finished.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n## Options / Assets\n\n### directives\n\n- **Type:** `Object`\n\n- **Details:**\n\n  A hash of directives to be made available to the Vue instance.\n\n- **See also:**\n  - [Custom Directives](/guide/custom-directive.html)\n  - [Assets Naming Convention](/guide/components.html#Assets_Naming_Convention)\n\n### elementDirectives\n\n- **Type:** `Object`\n\n- **Details:**\n\n  A hash of element directives to be made available to the Vue instance.\n\n- **See also:**\n  - [Element Directives](/guide/custom-directive.html#Element_Directives)\n  - [Assets Naming Convention](/guide/components.html#Assets_Naming_Convention)\n\n### filters\n\n- **Type:** `Object`\n\n- **Details:**\n\n  A hash of filters to be made available to the Vue instance.\n\n- **See also:**\n  - [Custom Filters](/guide/custom-filter.html)\n  - [Assets Naming Convention](/guide/components.html#Assets_Naming_Convention)\n\n### components\n\n- **Type:** `Object`\n\n- **Details:**\n\n  A hash of components to be made available to the Vue instance.\n\n- **See also:**\n  - [Components](/guide/components.html)\n\n### transitions\n\n- **Type:** `Object`\n\n- **Details:**\n\n  A hash of transitions to be made available to the Vue instance.\n\n- **See also:**\n  - [Transitions](/guide/transitions.html)\n\n### partials\n\n- **Type:** `Object`\n\n- **Details:**\n\n  A hash of partial strings to be made available to the Vue instance.\n\n- **See also:**\n  - [Special Elements - partial](#partial)\n\n## Options / Misc\n\n### parent\n\n- **Type:** `Vue instance`\n\n- **Details:**\n\n  Specify the parent instance for the instance to be created. Establishes a parent-child relationship between the two. The parent will be accessible as `this.$parent` for the child, and the child will be pushed into the parent's `$children` array.\n\n- **See also:** [Parent-Child Communication](/guide/components.html#Parent-Child_Communication)\n\n### events\n\n- **Type:** `Object`\n\n- **Details:**\n\n  An object where keys are events to listen for and values are the corresponding callbacks. Note these are Vue events rather than DOM events. The value can also be a string of a method name. The Vue instance will call `$on()` for each entry in the object at instantiation.\n\n- **Example:**\n\n  ``` js\n  var vm = new Vue({\n    events: {\n      'hook:created': function () {\n        console.log('created!')\n      },\n      greeting: function (msg) {\n        console.log(msg)\n      },\n      // can also use a string for methods\n      bye: 'sayGoodbye'\n    },\n    methods: {\n      sayGoodbye: function () {\n        console.log('goodbye!')\n      }\n    }\n  }) // -> created!\n  vm.$emit('greeting', 'hi!') // -> hi!\n  vm.$emit('bye')             // -> goodbye!\n  ```\n\n- **See also:**\n  - [Instance Methods - Events](#Instance_Methods_/_Events)\n  - [Parent-Child Communication](/guide/components.html#Parent-Child_Communication)\n\n### mixins\n\n- **Type:** `Array`\n\n- **Details:**\n\n  The `mixins` option accepts an array of mixin objects. These mixin objects can contain instance options just like normal instance objects, and they will be merged against the eventual options using the same option merging logic in `Vue.extend()`. e.g. If your mixin contains a created hook and the component itself also has one, both functions will be called.\n\n  Mixin hooks are called in the order they are provided, and called before the component's own hooks.\n\n- **Example:**\n\n  ``` js\n  var mixin = {\n    created: function () { console.log(1) }\n  }\n  var vm = new Vue({\n    created: function () { console.log(2) },\n    mixins: [mixin]\n  })\n  // -> 1\n  // -> 2\n  ```\n\n- **See also:** [Mixins](/guide/mixins.html)\n\n### name\n\n- **Type:** `String`\n\n- **Restriction:** only respected when used in `Vue.extend()`.\n\n- **Details:**\n\n  Allow the component to recursively invoke itself in its template. Note that when a component is registered globally with `Vue.component()`, the global ID is automatically set as its name.\n\n  Another benefit of specifying a `name` option is console inspection. When inspecting an extended Vue component in the console, the default constructor name is `VueComponent`, which isn't very informative. By passing in an optional `name` option to `Vue.extend()`, you will get a better inspection output so that you know which component you are looking at. The string will be camelized and used as the component's constructor name.\n\n- **Example:**\n\n  ``` js\n  var Ctor = Vue.extend({\n    name: 'stack-overflow',\n    template:\n      '<div>' +\n        // recursively invoke self\n        '<stack-overflow></stack-overflow>' +\n      '</div>'\n  })\n\n  // this will actually result in a max stack size exceeded\n  // error, but let's assume it works...\n  var vm = new Ctor()\n\n  console.log(vm) // -> StackOverflow {$el: null, ...}\n  ```\n\n## Instance Properties\n\n### vm.$data\n\n- **Type:** `Object`\n\n- **Details:**\n\n  The data object that the Vue instance is observing. You can swap it with a new object. The Vue instance proxies access to the properties on its data object.\n\n### vm.$el\n\n- **Type:** `HTMLElement`\n\n- **Read only**\n\n- **Details:**\n\n  The DOM element that the Vue instance is managing. Note that for [Fragment Instances](/guide/components.html#Fragment_Instance), `vm.$el` will return an anchor node that indicates the starting position of the fragment.\n\n### vm.$options\n\n- **Type:** `Object`\n\n- **Read only**\n\n- **Details:**\n\n  The instantiation options used for the current Vue instance. This is useful when you want to include custom properties in the options:\n\n  ``` js\n  new Vue({\n    customOption: 'foo',\n    created: function () {\n      console.log(this.$options.customOption) // -> 'foo'\n    }\n  })\n  ```\n\n### vm.$parent\n\n- **Type:** `Vue instance`\n\n- **Read only**\n\n- **Details:**\n\n  The parent instance, if the current instance has one.\n\n### vm.$root\n\n- **Type:** `Vue instance`\n\n- **Read only**\n\n- **Details:**\n\n  The root Vue instance of the current component tree. If the current instance has no parents this value will be itself.\n\n### vm.$children\n\n- **Type:** `Array<Vue instance>`\n\n- **Read only**\n\n- **Details:**\n\n  The direct child components of the current instance.\n\n### vm.$refs\n\n- **Type:** `Object`\n\n- **Read only**\n\n- **Details:**\n\n  An object that holds child components that have `v-ref` registered.\n\n- **See also:**\n  - [Child Component Refs](/guide/components.html#Child_Component_Refs)\n  - [v-ref](#v-ref).\n\n### vm.$els\n\n- **Type:** `Object`\n\n- **Read only**\n\n- **Details:**\n\n  An object that holds DOM elements that have `v-el` registered.\n\n- **See also:** [v-el](#v-el).\n\n## Instance Methods / Data\n\n### vm.$watch( expOrFn, callback, [options] )\n\n- **Arguments:**\n  - `{String|Function} expOrFn`\n  - `{Function} callback`\n  - `{Object} [options]`\n    - `{Boolean} deep`\n    - `{Boolean} immediate`\n\n- **Returns:** `{Function} unwatch`\n\n- **Usage:**\n\n  Watch an expression or a computed function on the Vue instance for changes. The callback gets called with the new value and the old value. The expression can be a single keypath or any valid binding expressions.\n\n- **Example:**\n\n  ``` js\n  // keypath\n  vm.$watch('a.b.c', function (newVal, oldVal) {\n    // do something\n  })\n\n  // expression\n  vm.$watch('a + b', function (newVal, oldVal) {\n    // do something\n  })\n\n  // function\n  vm.$watch(\n    function () {\n      return this.a + this.b\n    },\n    function (newVal, oldVal) {\n      // do something\n    }\n  )\n  ```\n\n  `vm.$watch` returns an unwatch function that stops firing the callback:\n\n  ``` js\n  var unwatch = vm.$watch('a', cb)\n  // later, teardown the watcher\n  unwatch()\n  ```\n\n- **Option: deep**\n\n  To also detect nested value changes inside Objects, you need to pass in `deep: true` in the options argument. Note that you don't need to do so to listen for Array mutations.\n\n  ``` js\n  vm.$watch('someObject', callback, {\n    deep: true\n  })\n  vm.someObject.nestedValue = 123\n  // callback is fired\n  ```\n\n- **Option: immediate**\n\n  Passing in `immediate: true` in the option will trigger the callback immediately with the current value of the expression:\n\n  ``` js\n  vm.$watch('a', callback, {\n    immediate: true\n  })\n  // callback is fired immediately with current value of `a`\n  ```\n\n### vm.$get( expression )\n\n- **Arguments:**\n  - `{String} expression`\n\n- **Usage:**\n\n  Retrieve a value from the Vue instance given an expression. Expressions that throw errors will be suppressed and return `undefined`.\n\n- **Example:**\n\n  ``` js\n  var vm = new Vue({\n    data: {\n      a: {\n        b: 1\n      }\n    }\n  })\n  vm.$get('a.b') // -> 1\n  vm.$get('a.b + 1') // -> 2\n  ```\n\n### vm.$set( keypath, value )\n\n- **Arguments:**\n  - `{String} keypath`\n  - `{*} value`\n\n- **Usage:**\n\n  Set a data value on the Vue instance given a valid keypath. In most cases you should prefer setting properties using plain object syntax, e.g. `vm.a.b = 123`. This method is only needed in two scenarios:\n\n  1. When you have a keypath string and want to dynamically set the value using that keypath.\n\n  2. When you want to set a property that doesn't exist.\n\n  If the path doesn't exist it will be recursively created and made reactive. If a new root-level reactive property is created due to a `$set` call, the Vue instance will be forced into a \"digest cycle\", during which all its watchers are re-evaluated.\n\n- **Example:**\n\n  ``` js\n  var vm = new Vue({\n    data: {\n      a: {\n        b: 1\n      }\n    }\n  })\n  \n  // set an existing path\n  vm.$set('a.b', 2)\n  vm.a.b // -> 2\n\n  // set a non-existent path, will force digest\n  vm.$set('c', 3)\n  vm.c // ->\n  ```\n\n- **See also:** [Reactivity in Depth](/guide/reactivity.html)\n\n### vm.$delete( key )\n\n- **Arguments:**\n  - `{String} key`\n\n- **Usage:**\n\n  Delete a root level property on the Vue instance (and also its `$data`). Forces a digest cycle. Not recommended.\n\n### vm.$eval( expression )\n\n- **Arguments:**\n  - `{String} expression`\n\n- **Usage:**\n\n  Evaluate a valid binding expression on the current instance. The expression can also contain filters.\n\n- **Example:**\n\n  ``` js\n  // assuming vm.msg = 'hello'\n  vm.$eval('msg | uppercase') // -> 'HELLO'\n  ```\n\n### vm.$interpolate( templateString )\n\n- **Arguments:**\n  - `{String} templateString`\n\n- **Usage:**\n\n  Evaluate a piece of template string containing mustache interpolations. Note that this method simply performs string interpolation; attribute directives are ignored.\n\n- **Example:**\n\n  ``` js\n  // assuming vm.msg = 'hello'\n  vm.$interpolate('{{msg}} world!') // -> 'hello world!'\n  ```\n\n### vm.$log( [keypath] )\n\n- **Arguments:**\n  - `{String} [keypath]`\n\n- **Usage:**\n\n  Log the current instance data as a plain object, which is more inspection-friendly than a bunch of getter/setters. Also accepts an optional key.\n\n  ``` js\n  vm.$log() // logs entire ViewModel data\n  vm.$log('item') // logs vm.item\n  ```\n\n## Instance Methods / Events\n\n### vm.$on( event, callback )\n\n- **Arguments:**\n  - `{String} event`\n  - `{Function} callback`\n\n- **Usage:**\n\n  Listen for a custom event on the current vm. Events can be triggered by `vm.$emit`, `vm.$dispatch` or `vm.$broadcast`. The callback will receive all the additional arguments passed into these event-triggering methods.\n\n- **Example:**\n\n  ``` js\n  vm.$on('test', function (msg) {\n    console.log(msg)\n  })\n  vm.$emit('test', 'hi')\n  // -> \"hi\"\n  ```\n\n### vm.$once( event, callback )\n\n- **Arguments:**\n  - `{String} event`\n  - `{Function} callback`\n\n- **Usage:**\n\n  Listen for a custom event, but only once. The listener will be removed once it triggers for the first time.\n\n### vm.$off( [event, callback] )\n\n- **Arguments:**\n  - `{String} [event]`\n  - `{Function} [callback]`\n\n- **Usage:**\n\n  Remove event listener(s).\n\n  - If no arguments are provided, remove all event listeners;\n\n  - If only the event is provided, remove all listeners for that event;\n\n  - If both event and callback are given, remove the listener for that specific callback only.\n\n### vm.$emit( event, [...args] )\n\n- **Arguments:**\n  - `{String} event`\n  - `[...args]`\n\n  Trigger an event on the current instance. Any additional arguments will be passed into the listener's callback function.\n\n### vm.$dispatch( event, [...args] )\n\n- **Arguments:**\n  - `{String} event`\n  - `[...args]`\n\n- **Usage:**\n\n  Dispatch an event, first triggering it on the instance itself, and then propagates upward along the parent chain. The propagation stops when it triggers a parent event listener, unless that listener returns `true`. Any additional arguments will be passed into the listener's callback function.\n\n- **Example:**\n\n  ``` js\n  // create a parent chain\n  var parent = new Vue()\n  var child1 = new Vue({ parent: parent })\n  var child2 = new Vue({ parent: child1 })\n\n  parent.$on('test', function () {\n    console.log('parent notified')\n  })\n  child1.$on('test', function () {\n    console.log('child1 notified')\n  })\n  child2.$on('test', function () {\n    console.log('child2 notified')\n  })\n\n  child2.$dispatch('test')\n  // -> \"child2 notified\"\n  // -> \"child1 notified\"\n  // parent is NOT notified, because child1 didn't return\n  // true in its callback\n  ```\n\n- **See also:** [Parent-Child Communication](/guide/components.html#Parent-Child_Communication)\n\n### vm.$broadcast( event, [...args] )\n\n- **Arguments:**\n  - `{String} event`\n  - `[...args]`\n\n- **Usage:**\n\n  Broadcast an event that propagates downward to all descendants of the current instance. Since the descendants expand into multiple sub-trees, the event propagation will follow many different \"paths\". The propagation for each path will stop when a listener callback is fired along that path, unless the callback returns `true`.\n\n- **Example:**\n\n  ``` js\n  var parent = new Vue()\n  // child1 and child2 are siblings\n  var child1 = new Vue({ parent: parent })\n  var child2 = new Vue({ parent: parent })\n  // child3 is nested under child2\n  var child3 = new Vue({ parent: child2 })\n\n  child1.$on('test', function () {\n    console.log('child1 notified')\n  })\n  child2.$on('test', function () {\n    console.log('child2 notified')\n  })\n  child3.$on('test', function () {\n    console.log('child3 notified')\n  })\n\n  parent.$broadcast('test')\n  // -> \"child1 notified\"\n  // -> \"child2 notified\"\n  // child3 is NOT notified, because child2 didn't return\n  // true in its callback\n  ```\n\n## Instance Methods / DOM\n\n### vm.$appendTo( elementOrSelector, [callback] )\n\n- **Arguments:**\n  - `{Element|String} elementOrSelector`\n  - `{Function} [callback]`\n\n- **Returns:** `vm` - the instance itself\n\n- **Usage:**\n\n  Append the Vue instance's DOM element or fragment to target element. The target can be either an element or a querySelector string. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).\n\n### vm.$before( elementOrSelector, [callback] )\n\n- **Arguments:**\n  - `{Element|String} elementOrSelector`\n  - `{Function} [callback]`\n\n- **Returns:** `vm` - the instance itself\n\n- **Usage:**\n\n  Insert the Vue instance's DOM element or fragment before target element. The target can be either an element or a querySelector string. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).\n\n### vm.$after( elementOrSelector, [callback] )\n\n- **Arguments:**\n  - `{Element|String} elementOrSelector`\n  - `{Function} [callback]`\n\n- **Returns:** `vm` - the instance itself\n\n- **Usage:**\n\n  Insert the Vue instance's DOM element or fragment after target element. The target can be either an element or a querySelector string. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).\n\n### vm.$remove( [callback] )\n\n- **Arguments:**\n  - `{Function} [callback]`\n\n- **Returns:** `vm` - the instance itself\n\n- **Usage:**\n  \n  Remove the Vue instance's DOM element or fragment from the DOM. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).\n\n### vm.$nextTick( callback )\n\n- **Arguments:**\n  - `{Function} [callback]`\n\n- **Usage:**\n\n  Defer the callback to be executed after the next DOM update cycle. Use it immediately after you've changed some data to wait for the DOM update. This is the same as the global `Vue.nextTick`, except that the callback's `this` context is automatically bound to the instance calling this method.\n\n- **Example:**\n\n  ``` js\n  new Vue({\n    // ...\n    methods: {\n      // ...\n      example: function () {\n        // modify data\n        this.message = 'changed'\n        // DOM is not updated yet\n        this.$nextTick(function () {\n          // DOM is now updated\n          // `this` is bound to the current instance\n          this.doSomethingElse()\n        })\n      }\n    }\n  })\n  ```\n\n- **See also:**\n  - [Vue.nextTick](#Vue-nextTick)\n  - [Async Update Queue](/guide/reactivity.html#Async_Update_Queue)\n\n## Instance Methods / Lifecycle\n\n### vm.$mount( [elementOrSelector] )\n\n- **Arguments:**\n  - `{Element|String} [elementOrSelector]`\n\n- **Returns:** `vm` - the instance itself\n\n- **Usage:**\n\n  If a Vue instance didn't receive the `el` option at instantiation, it will be in \"unmounted\" state, without an associated DOM element or fragment. `vm.$mount()` can be used to manually start the mounting/compilation of an unmounted Vue instance.\n\n  If no argument is provided, the template will be created as an out-of-document fragment, and you will have to use other DOM instance methods to insert it into the document yourself. If `replace` option is set to `false`, then an empty `<div>` will be automatically created as the wrapper element.\n\n  Calling `$mount()` on an already mounted instance will have no effect. The method returns the instance itself so you can chain other instance methods after it.\n\n- **Example:**\n\n  ``` js\n  var MyComponent = Vue.extend({\n    template: '<div>Hello!</div>'\n  })\n  \n  // create and mount to #app (will replace #app)\n  new MyComponent().$mount('#app')\n\n  // the above is the same as:\n  new MyComponent({ el: '#app' })\n\n  // or, compile off-document and append afterwards:\n  new MyComponent().$mount().$appendTo('#container')\n  ```\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n### vm.$destroy( [remove] )\n\n- **Arguments:**\n  - `{Boolean} [remove] - default: false`\n\n- **Usage:**\n\n  Completely destroy a vm. Clean up its connections with other existing vms, unbind all its directives, turn off all event listeners and, if the `remove` argument is true, remove its associated DOM element or fragment from the DOM.\n\n  Triggers the `beforeDestroy` and `destroyed` hooks.\n\n- **See also:** [Lifecycle Diagram](/guide/instance.html#Lifecycle_Diagram)\n\n## Directives\n\n### v-text\n\n- **Expects:** `String`\n\n- **Details:**\n\n  Updates the element's `textContent`.\n\n  Internally, `{% raw %}{{ Mustache }}{% endraw %}` interpolations are also compiled as a `v-text` directive on a textNode. The directive form requires a wrapper element, but offers slightly better performance and avoids FOUC (Flash of Uncompiled Content).\n\n- **Example:**\n\n  ``` html\n  <span v-text=\"msg\"></span>\n  <!-- same as -->\n  <span>{{msg}}</span>\n  ```\n\n### v-html\n\n- **Expects:** `String`\n\n- **Details:**\n\n  Updates the element's `innerHTML`. The contents are inserted as plain HTML - data bindings are ignored. If you need to reuse template pieces, you should use [partials](#partial).\n\n  Internally, `{% raw %}{{{ Mustache }}}{% endraw %}` interpolations are also compiled as a `v-html` directive using anchor nodes. The directive form requires a wrapper element, but offers slightly better performance and avoids FOUC (Flash of Uncompiled Content).\n\n  <p class=\"tip\">Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to [XSS attacks](https://en.wikipedia.org/wiki/Cross-site_scripting). Only use `v-html` on trusted content and **never** on user-provided content.</p>\n\n- **Example:**\n\n  ``` html\n  <div v-html=\"html\"></div>\n  <!-- same as -->\n  <div>{{{html}}}</div>\n  ```\n\n### v-if\n\n- **Expects:** `*`\n\n- **Usage:**\n\n  Conditionally render the element based on the truthy-ness of the expression value. The element and its contained data bindings / components are destroyed and re-constructed during toggles. If the element is a `<template>` element, its content will be extracted as the conditional block.\n\n- **See also:** [Conditional Rendering](/guide/conditional.html)\n\n### v-show\n\n- **Expects:** `*`\n\n- **Usage:**\n\n  Toggle's the element's `display` CSS property based on the truthy-ness of the expression value. Triggers transitions if present.\n\n- **See also:** [Conditional Rendering - v-show](/guide/conditional.html#v-show)\n\n### v-else\n\n- **Does not expect expression**\n\n- **Restriction:** previous sibling element must have `v-if` or `v-show`.\n\n- **Usage:**\n\n  Denote the \"else block\" for `v-if` and `v-show`.\n\n  ``` html\n  <div v-if=\"Math.random() > 0.5\">\n    Sorry\n  </div>\n  <div v-else>\n    Not sorry\n  </div>\n  ```\n\n- **See also:** [Conditional Rendering - v-else](/guide/conditional.html#v-else)\n\n### v-for\n\n- **Expects:** `Array | Object | Number | String`\n\n- **Param Attributes:**\n  - [`track-by`](/guide/list.html#track-by)\n  - [`stagger`](/guide/transitions.html#Staggering_Transitions)\n  - [`enter-stagger`](/guide/transitions.html#Staggering_Transitions)\n  - [`leave-stagger`](/guide/transitions.html#Staggering_Transitions)\n\n- **Usage:**\n\n  Render the element or template block multiple times based on the source data. The expression must use the special syntax to provide an alias for the current element being iterated on:\n\n  ``` html\n  <div v-for=\"item in items\">\n    {{ item.text }}\n  </div>\n  ```\n\n  Alternatively, you can also specify an alias for the index (or the key if used on an Object):\n\n  ``` html\n  <div v-for=\"(index, item) in items\"></div>\n  <div v-for=\"(key, val) in object\"></div>\n  ```\n\n  The detailed usage for `v-for` is explained in the guide section linked below.\n\n- **See also:** [List Rendering](/guide/list.html).\n\n### v-on\n\n- **Shorthand:** `@`\n\n- **Expects:** `Function | Inline Statement`\n\n- **Argument:** `event (required)`\n\n- **Modifiers:**\n  - `.stop` - call `event.stopPropagation()`.\n  - `.prevent` - call `event.preventDefault()`.\n  - `.{keyCode | keyAlias}` - only trigger handler on certain keys.\n\n- **Usage:**\n\n  Attaches an event listener to the element. The event type is denoted by the argument. The expression can either be a method name or an inline statement, or simply omitted when there are modifiers present.\n\n  When used on a normal element, it listens to **native DOM events** only. When used on a custom element component, it also listens to **custom events** emitted on that child component.\n\n- **Example:**\n\n  ``` html\n  <!-- method handler -->\n  <button v-on:click=\"doThis\"></button>\n\n  <!-- inline statement -->\n  <button v-on:click=\"doThat('hello')\"></button>\n\n  <!-- shorthand -->\n  <button @click=\"doThis\"></button>\n\n  <!-- stop propagation -->\n  <button @click.stop=\"doThis\"></button>\n\n  <!-- prevent default -->\n  <button @click.prevent=\"doThis\"></button>\n\n  <!-- prevent default without expression -->\n  <form @submit.prevent></form>\n\n  <!-- chain modifiers -->\n  <button @click.stop.prevent=\"doThis\"></button>\n\n  <!-- key modifier using keyAlias -->\n  <input @keyup.enter=\"onEnter\">\n\n  <!-- key modifier using keyCode -->\n  <input @keyup.13=\"onEnter\">\n  ```\n\n  Listening to custom events on a child component (the handler is called when \"my-event\" is emitted on the child):\n\n  ``` html\n  <my-component @my-event=\"handleThis\"></my-component>\n  ```\n\n- **See also:** [Methods and Event Handling](/guide/events.html)\n\n### v-bind\n\n- **Shorthand:** `:`\n\n- **Expects:** `* (with argument) | Object (without argument)`\n\n- **Argument:** `attrOrProp (optional)`\n\n- **Modifiers:**\n  - `.sync` - make the binding two-way. Only respected for prop bindings.\n  - `.once` - make the binding one-time. Only respected for prop bindings.\n\n- **Usage:**\n\n  Dynamically bind one or more attributes, or a component prop to an expression.\n\n  When used to bind the `class` or `style` attribute, it supports additional value types such as Array or Objects. See linked guide section below for more details.\n\n  When used for prop binding, the prop must be properly declared in the child component. Prop bindings can specify a different binding type using one of the modifiers.\n\n  When used without an argument, can be used to bind an object containing attribute name-value pairs. Note in this mode `class` and `style` does not support Array or Objects.\n\n- **Example:**\n\n  ``` html\n  <!-- bind an attribute -->\n  <img v-bind:src=\"imageSrc\">\n\n  <!-- shorthand -->\n  <img :src=\"imageSrc\">\n\n  <!-- class binding -->\n  <div :class=\"{ red: isRed }\"></div>\n  <div :class=\"[classA, classB]\"></div>\n\n  <!-- style binding -->\n  <div :style=\"{ fontSize: size + 'px' }\"></div>\n  <div :style=\"[styleObjectA, styleObjectB]\"></div>\n\n  <!-- binding an object of attributes -->\n  <div v-bind=\"{ id: someProp, 'other-attr': otherProp }\"></div>\n\n  <!-- prop binding. \"prop\" must be declared in my-component. -->\n  <my-component :prop=\"someThing\"></my-component>\n\n  <!-- two-way prop binding -->\n  <my-component :prop.sync=\"someThing\"></my-component>\n\n  <!-- one-time prop binding -->\n  <my-component :prop.once=\"someThing\"></my-component>\n  ```\n\n- **See also:**\n  - [Class and Style Bindings](/guide/class-and-style.html)\n  - [Component Props](/guide/components.html#Props)\n\n### v-model\n\n- **Expects:** varies based on input type\n\n- **Limited to:**\n  - `<input>`\n  - `<select>`\n  - `<textarea>`\n\n- **Param Attributes:**\n  - [`lazy`](/guide/forms.html#lazy)\n  - [`number`](/guide/forms.html#number)\n  - [`debounce`](/guide/forms.html#debounce)\n\n- **Usage:**\n\n  Create a two-way binding on a form input element. For detailed usage, see guide section linked below.\n\n- **See also:** [Form Input Bindings](/guide/forms.html)\n\n### v-ref\n\n- **Does not expect expression**\n\n- **Limited to:** child components\n\n- **Argument:** `id (required)`\n\n- **Usage:**\n\n  Register a reference to a child component on its parent for direct access. Does not expect an expression. Must provide an argument as the id to register with. The component instance will be accessible on its parent's `$refs` object.\n\n  When used on a component together with `v-for`, the registered value will be an Array containing all the child component instances corresponding to the Array they are bound to. If the data source for `v-for` is an Object, the registered value will be an Object containing key-instance pairs mirroring the source Object.\n\n- **Note:**\n\n  Because HTML is case-insensitive, camelCase usage like `v-ref:someRef` will be converted to all lowercase. You can use `v-ref:some-ref` which properly sets `this.$refs.someRef`.\n\n- **Example:**\n\n  ``` html\n  <comp v-ref:child></comp>\n  <comp v-ref:some-child></comp>\n  ```\n\n  ``` js\n  // access from parent:\n  this.$refs.child\n  this.$refs.someChild\n  ```\n\n  With `v-for`:\n\n  ``` html\n  <comp v-ref:list v-for=\"item in list\"></comp>\n  ```\n\n  ``` js\n  // this will be an array in parent\n  this.$refs.list\n  ```\n\n- **See also:** [Child Component Refs](/guide/components.html#Child_Component_Refs)\n\n### v-el\n\n- **Does not expect expression**\n\n- **Argument:** `id (required)`\n\n- **Usage:**\n  \n  Register a reference to a DOM element on its owner Vue instance's `$els` object for easier access.\n\n- **Note:**\n\n  Because HTML is case-insensitive, camelCase usage like `v-el:someEl` will be converted to all lowercase. You can use `v-el:some-el` which properly sets `this.$els.someEl`.\n\n- **Example:**\n\n  ``` html\n  <span v-el:msg>hello</span>\n  <span v-el:other-msg>world</span>\n  ```\n  ``` js\n  this.$els.msg.textContent // -> \"hello\"\n  this.$els.otherMsg.textContent // -> \"world\"\n  ```\n\n### v-pre\n\n- **Does not expect expression**\n\n- **Usage**\n\n  Skip compilation for this element and all its children. You can use this for displaying raw mustache tags. Skipping large numbers of nodes with no directives on them can also speed up compilation.\n\n- **Example:**\n\n  ``` html\n  <span v-pre>{{ this will not be compiled }}</span>\n  ```\n\n### v-cloak\n\n- **Does not expect expression**\n\n- **Usage:**\n\n  This directive will remain on the element until the associated Vue instance finishes compilation. Combined with CSS rules such as `[v-cloak] { display: none }`, this directive can be used to hide un-compiled mustache bindings until the Vue instance is ready.\n\n- **Example:**\n\n  ``` css\n  [v-cloak] {\n    display: none;\n  }\n  ```\n\n  ``` html\n  <div v-cloak>\n    {{ message }}\n  </div>\n  ```\n\n  The `<div>` will not be visible until the compilation is done.\n\n## Special Elements\n\n### component\n\n- **Attributes:**\n  - `is`\n\n- **Usage:**\n\n  Alternative syntax for invoking components. Primarily used for dynamic components with the `is` attribute:\n\n  ``` html\n  <!-- a dynamic component controlled by -->\n  <!-- the `componentId` property on the vm -->\n  <component :is=\"componentId\"></component>\n  ```\n\n- **See also:** [Dynamic Components](/guide/components.html#Dynamic_Components)\n\n### slot\n\n- **Attributes:**\n  - `name`\n\n- **Usage:**\n\n  `<slot>` elements serve as content distribution outlets in component templates. The slot element itself will be replaced.\n\n  A slot with the `name` attribute is called a named slot. A named slot will distribute content with a `slot` attribute that matches its name.\n\n  For detailed usage, see the guide section linked below.\n\n- **See also:** [Content Distribution with Slots](/guide/components.html#Content_Distribution_with_Slots)\n\n### partial\n\n- **Attributes:**\n  - `name`\n\n- **Usage:**\n\n  `<partial>` elements serve as outlets for registered template partials. Partial contents are also compiled by Vue when inserted. The `<partial>` element itself will be replaced. It requires a `name` attribute which will be used to resolve the partial's content.\n\n- **Example:**\n\n  ``` js\n  // registering a partial\n  Vue.partial('my-partial', '<p>This is a partial! {{msg}}</p>')\n  ```\n\n  ``` html\n  <!-- a static partial -->\n  <partial name=\"my-partial\"></partial>\n\n  <!-- a dynamic partial -->\n  <!-- renders partial with id === vm.partialId -->\n  <partial v-bind:name=\"partialId\"></partial>\n\n  <!-- dynamic partial using v-bind shorthand -->\n  <partial :name=\"partialId\"></partial>\n  ```\n\n## Filters\n\n### capitalize\n\n- **Example:**\n\n  ``` html\n  {{ msg | capitalize }}\n  ```\n\n  *'abc' => 'Abc'*\n\n### uppercase\n\n- **Example:**\n\n  ``` html\n  {{ msg | uppercase }}\n  ```\n\n  *'abc' => 'ABC'*\n\n### lowercase\n\n- **Example:**\n\n  ``` html\n  {{ msg | lowercase }}\n  ```\n\n  *'ABC' => 'abc'*\n\n### currency\n\n- **Arguments:**\n  - `{String} [symbol] - default: '$'`\n\n- **Example:**\n\n  ``` html\n  {{ amount | currency }}\n  ```\n\n  *12345 => $12,345.00*\n\n  Use a different symbol:\n\n  ``` html\n  {{ amount | currency '£' }}\n  ```\n\n  *12345 => £12,345.00*\n\n### pluralize\n\n- **Arguments:**\n  - `{String} single, [double, triple, ...]`\n\n- **Usage:**\n\n  Pluralizes the argument based on the filtered value. When there is exactly one argument, plural forms simply add an \"s\" at the end. When there are more than one argument, the arguments will be used as array of strings corresponding to the single, double, triple ... forms of the word to be pluralized. When the number to be pluralized exceeds the length of the arguments, it will use the last entry in the array.\n\n- **Example:**\n\n  ``` html\n  {{count}} {{count | pluralize 'item'}}\n  ```\n\n  *1 => '1 item'*  \n  *2 => '2 items'*\n\n  ``` html\n  {{date}}{{date | pluralize 'st' 'nd' 'rd' 'th'}}\n  ```\n\n  Will result in:\n\n  *1 => '1st'*  \n  *2 => '2nd'*\n  *3 => '3rd'*\n  *4 => '4th'*\n  *5 => '5th'*\n\n### json\n\n- **Arguments:**\n  - `{Number} [indent] - default: 2`\n\n- **Usage:**\n  \n  Output the result of calling `JSON.stringify()` on the value instead of outputting the `toString()` value (e.g. `[object Object]`).\n\n- **Example:**\n\n  Print an object with 4-space indent:\n\n  ``` html\n  <pre>{{ nestedObject | json 4 }}</pre>\n  ```\n\n### debounce\n\n- **Limited to:** directives that expect `Function` values, e.g. `v-on`\n\n- **Arguments:**\n  - `{Number} [wait] - default: 300`\n\n- **Usage:**\n\n  Wrap the handler to debounce it for `x` milliseconds, where `x` is the argument. Default wait time is 300ms. A debounced handler will be delayed until at least `x` ms has passed after the call moment; if the handler is called again before the delay period, the delay period is reset to `x` ms.\n\n- **Example:**\n\n  ``` html\n  <input @keyup=\"onKeyup | debounce 500\">\n  ```\n\n### limitBy\n\n- **Limited to:** directives that expect `Array` values, e.g. `v-for`\n\n- **Arguments:**\n  - `{Number} limit`\n\n- **Usage:**\n\n  Limit the array to the first N items, as specified by the argument.\n\n  ``` html\n  <!-- only display first 10 items -->\n  <div v-for=\"item in items | limitBy 10\"></div>\n  ```\n\n### filterBy\n\n- **Limited to:** directives that expect `Array` values, e.g. `v-for`\n\n- **Arguments:**\n  - `{String | Function} targetStringOrFunction`\n  - `\"in\" (optional delimiter)`\n  - `{String} [...searchKeys]`\n\n- **Usage:**\n\n  Return a filtered version of the source Array. The first argument can either be a string or a function.\n\n  When the first argument is a string, it will be used as the target string to search for in each element of the Array:\n\n  ``` html\n  <div v-for=\"item in items | filterBy 'hello'\">\n  ```\n\n  In the above example, only items that contain the target string `\"hello\"` will be displayed.\n\n  If the item is an object, the filter will recursively search every nested property of the object for the target string. To narrow down the search scope, additional search keys can be specified:\n\n  ``` html\n  <div v-for=\"user in users | filterBy 'Jack' in 'name'\">\n  ```\n\n  In the above example, the filter will only search for `\"Jack\"` in the `name` field of each user object. **It is a good idea to always limit the search scope for better performance.**\n\n  The examples above are using static arguments - we can, of course, use dynamic arguments as target string or search keys. Combined with `v-model` we can easily implement type-ahead filtering:\n\n  ``` html\n  <div id=\"filter-by-example\">\n    <input v-model=\"name\">\n    <ul>\n      <li v-for=\"user in users | filterBy name in 'name'\">\n        {{ user.name }}\n      </li>\n    </ul>\n  </div>\n  ```\n\n  ``` js\n  new Vue({\n    el: '#filter-by-example',\n    data: {\n      name: '',\n      users: [\n        { name: 'Bruce' },\n        { name: 'Chuck' },\n        { name: 'Jackie' }\n      ]\n    }\n  })\n  ```\n\n  {% raw %}\n  <div id=\"filter-by-example\" class=\"demo\">\n    <input v-model=\"name\">\n    <ul>\n      <li v-for=\"user in users | filterBy name in 'name'\">\n        {{ user.name }}\n      </li>\n    </ul>\n  </div>\n  <script>\n  new Vue({\n    el: '#filter-by-example',\n    data: {\n      name: '',\n      users: [{ name: 'Bruce' }, { name: 'Chuck' }, { name: 'Jackie' }]\n    }\n  })\n  </script>\n  {% endraw %}\n\n- **Additional Examples:**\n\n  Multiple search keys:\n\n  ``` html\n  <li v-for=\"user in users | filterBy searchText in 'name' 'phone'\"></li>\n  ```\n\n  Multiple search keys with a dynamic Array argument:\n\n  ``` html\n  <!-- fields = ['fieldA', 'fieldB'] -->\n  <div v-for=\"user in users | filterBy searchText in fields\">\n  ```\n\n  Use a custom filter function:\n\n  ``` html\n  <div v-for=\"user in users | filterBy myCustomFilterFunction\">\n  ```\n\n### orderBy\n\n- **Limited to:** directives that expect `Array` values, e.g. `v-for`\n\n- **Arguments:**\n  - `{String} sortKey`\n  - `{String} [order] - default: 1`\n\n- **Usage:**\n\n  Return a sorted version of the source Array. The `sortKey` is the key to use for the sorting. The optional `order` argument specifies whether the result should be in ascending (`order >= 0`) or descending (`order < 0`) order.\n\n  For arrays of primitive values, any truthy `sortKey` will work.\n\n- **Example:**\n\n  Sort users by name:\n\n  ``` html\n  <ul>\n    <li v-for=\"user in users | orderBy 'name'\">\n      {{ user.name }}\n    </li>\n  </ul>\n  ```\n\n  In descending order:\n\n  ``` html\n  <ul>\n    <li v-for=\"user in users | orderBy 'name' -1\">\n      {{ user.name }}\n    </li>\n  </ul>\n  ```\n\n  Sort primitive values:\n\n  ``` html\n  <ul>\n    <li v-for=\"n in numbers | orderBy true\">\n      {{ n }}\n    </li>\n  </ul>\n  ```\n\n  Dynamic sort order:\n\n  ``` html\n  <div id=\"orderby-example\">\n    <button @click=\"order = order * -1\">Reverse Sort Order</button>\n    <ul>\n      <li v-for=\"user in users | orderBy 'name' order\">\n        {{ user.name }}\n      </li>\n    </ul>\n  </div>\n  ```\n\n  ``` js\n  new Vue({\n    el: '#orderby-example',\n    data: {\n      order: 1,\n      users: [{ name: 'Bruce' }, { name: 'Chuck' }, { name: 'Jackie' }]\n    }\n  })\n  ```\n\n  {% raw %}\n  <div id=\"orderby-example\" class=\"demo\">\n    <button @click=\"order = order * -1\">Reverse Sort Order</button>\n    <ul>\n      <li v-for=\"user in users | orderBy 'name' order\">\n        {{ user.name }}\n      </li>\n    </ul>\n  </div>\n  <script>\n  new Vue({\n    el: '#orderby-example',\n    data: {\n      order: 1,\n      users: [{ name: 'Bruce' }, { name: 'Chuck' }, { name: 'Jackie' }]\n    }\n  })\n  </script>\n  {% endraw %}\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"api/index.html","title":"","comments":1,"layout":"page","_id":"cit1gzc950004yzjxmck51g8x","content":"<h2 id=\"Global-Config\"><a href=\"#Global-Config\" class=\"headerlink\" title=\"Global Config\"></a>Global Config</h2><p><code>Vue.config</code> is an object containing Vue’s global configurations. You can modify its properties listed below before bootstrapping your application:</p>\n<h3 id=\"debug\"><a href=\"#debug\" class=\"headerlink\" title=\"debug\"></a>debug</h3><ul>\n<li><p><strong>Type:</strong> <code>Boolean</code></p>\n</li>\n<li><p><strong>Default:</strong> <code>false</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">Vue.config.debug = <span class=\"literal\">true</span></div></pre></td></tr></table></figure>\n<p>When in debug mode, Vue will:</p>\n<ol>\n<li><p>Print stack traces for all warnings.</p>\n</li>\n<li><p>Make all anchor nodes visible in the DOM as Comment nodes. This makes it easier to inspect the structure of the rendered result.</p>\n</li>\n</ol>\n<p class=\"tip\">Debug mode is only available in development build.</p>\n\n</li>\n</ul>\n<h3 id=\"delimiters\"><a href=\"#delimiters\" class=\"headerlink\" title=\"delimiters\"></a>delimiters</h3><ul>\n<li><p><strong>Type:</strong> <code>Array&lt;String&gt;</code></p>\n</li>\n<li><p><strong>Default:</strong> <code>[\"{{\", \"}}\"]</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// ES6 template string style</span></div><div class=\"line\">Vue.config.delimiters = [<span class=\"string\">'$&#123;'</span>, <span class=\"string\">'&#125;'</span>]</div></pre></td></tr></table></figure>\n<p>Change the plain text interpolation delimiters.</p>\n</li>\n</ul>\n<h3 id=\"unsafeDelimiters\"><a href=\"#unsafeDelimiters\" class=\"headerlink\" title=\"unsafeDelimiters\"></a>unsafeDelimiters</h3><ul>\n<li><p><strong>Type:</strong> <code>Array&lt;String&gt;</code></p>\n</li>\n<li><p><strong>Default:</strong> <code>[\"{{{\", \"}}}\"]</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// make it look more dangerous</span></div><div class=\"line\">Vue.config.delimiters = [<span class=\"string\">'&#123;!!'</span>, <span class=\"string\">'!!&#125;'</span>]</div></pre></td></tr></table></figure>\n<p>Change the raw HTML interpolation delimiters.</p>\n</li>\n</ul>\n<h3 id=\"silent\"><a href=\"#silent\" class=\"headerlink\" title=\"silent\"></a>silent</h3><ul>\n<li><p><strong>Type:</strong> <code>Boolean</code></p>\n</li>\n<li><p><strong>Default:</strong> <code>false</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">Vue.config.silent = <span class=\"literal\">true</span></div></pre></td></tr></table></figure>\n<p>Suppress all Vue.js logs and warnings.</p>\n</li>\n</ul>\n<h3 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h3><ul>\n<li><p><strong>Type:</strong> <code>Boolean</code></p>\n</li>\n<li><p><strong>Default:</strong> <code>true</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">Vue.config.async = <span class=\"literal\">false</span></div></pre></td></tr></table></figure>\n<p>When async mode is off, Vue will perform all DOM updates synchronously upon detecting data change. This may help with debugging in some scenarios, but could also cause degraded performance and affect the order in which watcher callbacks are called. <strong><code>async: false</code> is not recommended in production.</strong></p>\n</li>\n</ul>\n<h2 id=\"Global-API\"><a href=\"#Global-API\" class=\"headerlink\" title=\"Global API\"></a>Global API</h2><h3 id=\"Vue-extend-options\"><a href=\"#Vue-extend-options\" class=\"headerlink\" title=\"Vue.extend( options )\"></a>Vue.extend( options )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Object} options</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Create a “subclass” of the base Vue constructor. The argument should be an object containing component options.</p>\n<p>The special cases to note here are <code>el</code> and <code>data</code> options - they must be functions when used with <code>Vue.extend()</code>.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mount-point\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// create reusable constructor</span></div><div class=\"line\"><span class=\"keyword\">var</span> Profile = Vue.extend(&#123;</div><div class=\"line\">  template: <span class=\"string\">'&lt;p&gt;&#123;&#123;firstName&#125;&#125; &#123;&#123;lastName&#125;&#125; aka &#123;&#123;alias&#125;&#125;&lt;/p&gt;'</span></div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// create an instance of Profile</span></div><div class=\"line\"><span class=\"keyword\">var</span> profile = <span class=\"keyword\">new</span> Profile(&#123;</div><div class=\"line\">  data: &#123;</div><div class=\"line\">    firstName: <span class=\"string\">'Walter'</span>,</div><div class=\"line\">    lastName: <span class=\"string\">'White'</span>,</div><div class=\"line\">    alias: <span class=\"string\">'Heisenberg'</span></div><div class=\"line\">  &#125;  </div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// mount it on an element</span></div><div class=\"line\">profile.$mount(<span class=\"string\">'#mount-point'</span>)</div></pre></td></tr></table></figure>\n<p>Will result in:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Walter White aka Heisenberg<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html\">Components</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-nextTick-callback\"><a href=\"#Vue-nextTick-callback\" class=\"headerlink\" title=\"Vue.nextTick( callback )\"></a>Vue.nextTick( callback )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Functon} callback</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Defer the callback to be executed after the next DOM update cycle. Use it immediately after you’ve changed some data to wait for the DOM update.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// modify data</span></div><div class=\"line\">vm.msg = <span class=\"string\">'Hello'</span></div><div class=\"line\"><span class=\"comment\">// DOM not updated yet</span></div><div class=\"line\">Vue.nextTick(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// DOM updated</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/reactivity.html#Async_Update_Queue\">Async Update Queue</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-set-object-key-value\"><a href=\"#Vue-set-object-key-value\" class=\"headerlink\" title=\"Vue.set( object, key, value )\"></a>Vue.set( object, key, value )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Object} object</code></li>\n<li><code>{String} key</code></li>\n<li><code>{*} value</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Set a property on an object. If the object is reactive, ensure the property is created as a reactive property and trigger view updates. This is primarily used to get around the limitation that Vue cannot detect property additions.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/reactivity.html\">Reactivity in Depth</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-delete-object-key\"><a href=\"#Vue-delete-object-key\" class=\"headerlink\" title=\"Vue.delete( object, key )\"></a>Vue.delete( object, key )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Object} object</code></li>\n<li><code>{String} key</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Delete a property on an object. If the object is reactive, ensure the deletion triggers view updates. This is primarily used to get around the limitation that Vue cannot detect property deletions, but you should rarely need to use it.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/reactivity.html\">Reactivity in Depth</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-directive-id-definition\"><a href=\"#Vue-directive-id-definition\" class=\"headerlink\" title=\"Vue.directive( id, [definition] )\"></a>Vue.directive( id, [definition] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} id</code></li>\n<li><code>{Function | Object} [definition]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register or retrieve a global directive.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// register</span></div><div class=\"line\">Vue.directive(<span class=\"string\">'my-directive'</span>, &#123;</div><div class=\"line\">  bind: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,</div><div class=\"line\">  update: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,</div><div class=\"line\">  unbind: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// register (simple function directive)</span></div><div class=\"line\">Vue.directive(<span class=\"string\">'my-directive'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// this will be called as `update`</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// getter, return the directive definition if registered</span></div><div class=\"line\"><span class=\"keyword\">var</span> myDirective = Vue.directive(<span class=\"string\">'my-directive'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/custom-directive.html\">Custom Directives</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-elementDirective-id-definition\"><a href=\"#Vue-elementDirective-id-definition\" class=\"headerlink\" title=\"Vue.elementDirective( id, [definition] )\"></a>Vue.elementDirective( id, [definition] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} id</code></li>\n<li><code>{Object} [definition]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register or retrieve a global element directive.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// register</span></div><div class=\"line\">Vue.elementDirective(<span class=\"string\">'my-element'</span>, &#123;</div><div class=\"line\">  bind: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,</div><div class=\"line\">  <span class=\"comment\">// element directives do not use `update`</span></div><div class=\"line\">  unbind: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// getter, return the directive definition if registered</span></div><div class=\"line\"><span class=\"keyword\">var</span> myDirective = Vue.elementDirective(<span class=\"string\">'my-element'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/custom-directive.html#Element_Directives\">Element Directives</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-filter-id-definition\"><a href=\"#Vue-filter-id-definition\" class=\"headerlink\" title=\"Vue.filter( id, [definition] )\"></a>Vue.filter( id, [definition] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} id</code></li>\n<li><code>{Function | Object} [definition]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register or retrieve a global filter.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// register</span></div><div class=\"line\">Vue.filter(<span class=\"string\">'my-filter'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// return processed value</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// two way filter</span></div><div class=\"line\">Vue.filter(<span class=\"string\">'my-filter'</span>, &#123;</div><div class=\"line\">  read: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,</div><div class=\"line\">  write: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// getter, return the filter if registered</span></div><div class=\"line\"><span class=\"keyword\">var</span> myFilter = Vue.filter(<span class=\"string\">'my-filter'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/custom-filter.html\">Custom Filter</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-component-id-definition\"><a href=\"#Vue-component-id-definition\" class=\"headerlink\" title=\"Vue.component( id, [definition] )\"></a>Vue.component( id, [definition] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} id</code></li>\n<li><code>{Function | Object} [definition]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register or retrieve a global component.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// register an extended constructor</span></div><div class=\"line\">Vue.component(<span class=\"string\">'my-component'</span>, Vue.extend(&#123; <span class=\"comment\">/* ... */</span>&#125;))</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// register an options object (automatically call Vue.extend)</span></div><div class=\"line\">Vue.component(<span class=\"string\">'my-component'</span>, &#123; <span class=\"comment\">/* ... */</span> &#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// retrive a registered component (always return constructor)</span></div><div class=\"line\"><span class=\"keyword\">var</span> MyComponent = Vue.component(<span class=\"string\">'my-component'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html\">Components</a>.</p>\n</li>\n</ul>\n<h3 id=\"Vue-transition-id-hooks\"><a href=\"#Vue-transition-id-hooks\" class=\"headerlink\" title=\"Vue.transition( id, [hooks] )\"></a>Vue.transition( id, [hooks] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} id</code></li>\n<li><code>{Object} [hooks]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register or retrieve a global transition hooks object.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// register</span></div><div class=\"line\">Vue.transition(<span class=\"string\">'fade'</span>, &#123;</div><div class=\"line\">  enter: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,</div><div class=\"line\">  leave: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// retrieve registered hooks</span></div><div class=\"line\"><span class=\"keyword\">var</span> fadeTransition = Vue.transition(<span class=\"string\">'fade'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/transitions.html\">Transitions</a>.</p>\n</li>\n</ul>\n<h3 id=\"Vue-partial-id-partial\"><a href=\"#Vue-partial-id-partial\" class=\"headerlink\" title=\"Vue.partial( id, [partial] )\"></a>Vue.partial( id, [partial] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} id</code></li>\n<li><code>{String} [partial]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register or retrieve a global template partial string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// register</span></div><div class=\"line\">Vue.partial(<span class=\"string\">'my-partial'</span>, <span class=\"string\">'&lt;div&gt;Hi&lt;/div&gt;'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// retrieve registered partial</span></div><div class=\"line\"><span class=\"keyword\">var</span> myPartial = Vue.partial(<span class=\"string\">'my-partial'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"#partial\">Special Elements - &lt;partial&gt;</a>.</p>\n</li>\n</ul>\n<h3 id=\"Vue-use-plugin-options\"><a href=\"#Vue-use-plugin-options\" class=\"headerlink\" title=\"Vue.use( plugin, [options] )\"></a>Vue.use( plugin, [options] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Object | Function} plugin</code></li>\n<li><code>{Object} [options]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Install a Vue.js plugin. If the plugin is an Object, it must expose an <code>install</code> method. If it is a function itself, it will be treated as the install method. The install method will be called with Vue as the argument.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/plugins.html\">Plugins</a>.</p>\n</li>\n</ul>\n<h3 id=\"Vue-mixin-mixin\"><a href=\"#Vue-mixin-mixin\" class=\"headerlink\" title=\"Vue.mixin( mixin )\"></a>Vue.mixin( mixin )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Object} mixin</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Apply a mixin globally, which affects every Vue instance created afterwards. This can be used by plugin authors to inject custom behavior into components. <strong>Not recommended in application code</strong>.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/mixins.html#Global_Mixin\">Global Mixins</a></p>\n</li>\n</ul>\n<h2 id=\"Options-Data\"><a href=\"#Options-Data\" class=\"headerlink\" title=\"Options / Data\"></a>Options / Data</h2><h3 id=\"data\"><a href=\"#data\" class=\"headerlink\" title=\"data\"></a>data</h3><ul>\n<li><p><strong>Type:</strong> <code>Object | Function</code></p>\n</li>\n<li><p><strong>Restriction:</strong> Only accepts <code>Function</code> when used in <code>Vue.extend()</code>.</p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The data object for the Vue instance. Vue.js will recursively convert its properties into getter/setters to make it “reactive”. <strong>The object must be plain</strong>: native objects, existing getter/setters and prototype properties are ignored. It is not recommended to observe complex objects.</p>\n<p>Once the instance is created, the original data object can be accessed as <code>vm.$data</code>. The Vue instance also proxies all the properties found on the data object.</p>\n<p>Properties that start with <code>_</code> or <code>$</code> will <strong>not</strong> be proxied on the Vue instance because they may conflict with Vue’s internal properties and API methods. You will have to access them as <code>vm.$data._property</code>.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> data = &#123; a: <span class=\"number\">1</span> &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// direct instance creation</span></div><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  data: data</div><div class=\"line\">&#125;)</div><div class=\"line\">vm.a <span class=\"comment\">// -&gt; 1</span></div><div class=\"line\">vm.$data === data <span class=\"comment\">// -&gt; true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// must use function when in Vue.extend()</span></div><div class=\"line\"><span class=\"keyword\">var</span> Component = Vue.extend(&#123;</div><div class=\"line\">  data: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123; a: <span class=\"number\">1</span> &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/reactivity.html\">Reactivity in Depth</a>.</p>\n</li>\n</ul>\n<h3 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h3><ul>\n<li><p><strong>Type:</strong> <code>Array | Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A list/hash of attributes that are exposed to accept data from the parent component. It has a simple Array-based syntax and an alternative Object-based syntax that allows advanced configurations such as type checking, custom validation and default values.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// simple syntax</span></div><div class=\"line\">Vue.component(<span class=\"string\">'props-demo-simple'</span>, &#123;</div><div class=\"line\">  props: [<span class=\"string\">'size'</span>, <span class=\"string\">'myMessage'</span>]</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// object syntax with validation</span></div><div class=\"line\">Vue.component(<span class=\"string\">'props-demo-advanced'</span>, &#123;</div><div class=\"line\">  props: &#123;</div><div class=\"line\">    <span class=\"comment\">// just type check</span></div><div class=\"line\">    size: <span class=\"built_in\">Number</span>,</div><div class=\"line\">    <span class=\"comment\">// type check plus other validations</span></div><div class=\"line\">    name: &#123;</div><div class=\"line\">      type: <span class=\"built_in\">String</span>,</div><div class=\"line\">      required: <span class=\"literal\">true</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html#Props\">Props</a></p>\n</li>\n</ul>\n<h3 id=\"computed\"><a href=\"#computed\" class=\"headerlink\" title=\"computed\"></a>computed</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Computed properties to be mixed into the Vue instance. All getters and setters have their <code>this</code> context automatically bound to the Vue instance.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  data: &#123; a: <span class=\"number\">1</span> &#125;,</div><div class=\"line\">  computed: &#123;</div><div class=\"line\">    <span class=\"comment\">// get only, just need a function</span></div><div class=\"line\">    aDouble: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a * <span class=\"number\">2</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"comment\">// both get and set</span></div><div class=\"line\">    aPlus: &#123;</div><div class=\"line\">      get: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + <span class=\"number\">1</span></div><div class=\"line\">      &#125;,</div><div class=\"line\">      set: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">v</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.a = v - <span class=\"number\">1</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">vm.aPlus   <span class=\"comment\">// -&gt; 2</span></div><div class=\"line\">vm.aPlus = <span class=\"number\">3</span></div><div class=\"line\">vm.a       <span class=\"comment\">// -&gt; 2</span></div><div class=\"line\">vm.aDouble <span class=\"comment\">// -&gt; 4</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/computed.html\">Computed Properties</a></li>\n<li><a href=\"/guide/reactivity.html#Inside_Computed_Properties\">Reactivity in Depth: Inside Computed Properties</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"methods\"><a href=\"#methods\" class=\"headerlink\" title=\"methods\"></a>methods</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Methods to be mixed into the Vue instance. You can access these methods directly on the VM instance, or use them in directive expressions. All methods will have their <code>this</code> context automatically bound to the Vue instance.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  data: &#123; a: <span class=\"number\">1</span> &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    plus: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.a++</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">vm.plus()</div><div class=\"line\">vm.a <span class=\"comment\">// 2</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/events.html\">Methods and Event Handling</a></p>\n</li>\n</ul>\n<h3 id=\"watch\"><a href=\"#watch\" class=\"headerlink\" title=\"watch\"></a>watch</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>An object where keys are expressions to watch and values are the corresponding callbacks. The value can also be a string of a method name, or an Object that contains additional options. The Vue instance will call <code>$watch()</code> for each entry in the object at instantiation.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  data: &#123;</div><div class=\"line\">    a: <span class=\"number\">1</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  watch: &#123;</div><div class=\"line\">    <span class=\"string\">'a'</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val, oldVal</span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'new: %s, old: %s'</span>, val, oldVal)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"comment\">// string method name</span></div><div class=\"line\">    <span class=\"string\">'b'</span>: <span class=\"string\">'someMethod'</span>,</div><div class=\"line\">    <span class=\"comment\">// deep watcher</span></div><div class=\"line\">    <span class=\"string\">'c'</span>: &#123;</div><div class=\"line\">      handler: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val, oldVal</span>) </span>&#123; <span class=\"comment\">/* ... */</span> &#125;,</div><div class=\"line\">      deep: <span class=\"literal\">true</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">vm.a = <span class=\"number\">2</span> <span class=\"comment\">// -&gt; new: 2, old: 1</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"#vm-watch\">Instance Methods - vm.$watch</a></p>\n</li>\n</ul>\n<h2 id=\"Options-DOM\"><a href=\"#Options-DOM\" class=\"headerlink\" title=\"Options / DOM\"></a>Options / DOM</h2><h3 id=\"el\"><a href=\"#el\" class=\"headerlink\" title=\"el\"></a>el</h3><ul>\n<li><p><strong>Type:</strong> <code>String | HTMLElement | Function</code></p>\n</li>\n<li><p><strong>Restriction:</strong> only accepts type <code>Function</code> when used in <code>Vue.extend()</code>.</p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Provide the Vue instance an existing DOM element to mount on. It can be a CSS selector string, an actual HTMLElement, or a function that returns an HTMLElement. Note that the provided element merely serves as a mounting point; it will be replaced if a template is also provided, unless <code>replace</code> is set to false. The resolved element will be accessible as <code>vm.$el</code>.</p>\n<p>When used in <code>Vue.extend</code>, a function must be provided so each instance gets a separately created element.</p>\n<p>If this option is available at instantiation, the instance will immediately enter compilation; otherwise, the user will have to explicitly call <code>vm.$mount()</code> to manually start the compilation.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"template\"><a href=\"#template\" class=\"headerlink\" title=\"template\"></a>template</h3><ul>\n<li><p><strong>Type:</strong> <code>String</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A string template to be used as the markup for the Vue instance. By default, the template will <strong>replace</strong> the mounted element. When the <code>replace</code> option is set to <code>false</code>, the template will be inserted into the mounted element instead. In both cases, any existing markup inside the mounted element will be ignored, unless content distribution slots are present in the template.</p>\n<p>If the string starts with <code>#</code> it will be used as a querySelector and use the selected element’s innerHTML as the template string. This allows the use of the common <code>&lt;script type=&quot;x-template&quot;&gt;</code> trick to include templates.</p>\n<p>Note that under certain situations, for example when the template contains more than one top-level element, or contains only plain text, the instance will become a fragment instance - i.e. one that manages a list of nodes rather than a single node. Non flow-control directives on the mount point for fragment instances are ignored.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></li>\n<li><a href=\"/guide/components.html#Content_Distribution_with_Slots\">Content Distribution</a></li>\n<li><a href=\"/guide/components.html#Fragment_Instance\">Fragment Instance</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace\"></a>replace</h3><ul>\n<li><p><strong>Type:</strong> <code>Boolean</code>  </p>\n</li>\n<li><p><strong>Default:</strong> <code>true</code></p>\n</li>\n<li><p><strong>Restriction:</strong> only respected if the <strong>template</strong> option is also present.</p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Determines whether to replace the element being mounted on with the template. If set to <code>false</code>, the template will overwrite the element’s inner content without replacing the element itself.</p>\n</li>\n<li><p><strong>Example</strong>:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"replace\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#replace'</span>,</div><div class=\"line\">  template: <span class=\"string\">'&lt;p&gt;replaced&lt;/p&gt;'</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>Will result in:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>replaced<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>In comparison, when <code>replace</code> is set to <code>false</code>:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insert\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#insert'</span>,</div><div class=\"line\">  replace: <span class=\"literal\">false</span>,</div><div class=\"line\">  template: <span class=\"string\">'&lt;p&gt;inserted&lt;/p&gt;'</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>Will result in:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insert\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>inserted<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Options-Lifecycle-Hooks\"><a href=\"#Options-Lifecycle-Hooks\" class=\"headerlink\" title=\"Options / Lifecycle Hooks\"></a>Options / Lifecycle Hooks</h2><h3 id=\"created\"><a href=\"#created\" class=\"headerlink\" title=\"created\"></a>created</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called synchronously after the instance is created. At this stage, the instance has finished processing the options which means the following have been set up: data observation, computed properties, methods, watch/event callbacks. However, DOM compilation has not been started, and the <code>$el</code> property will not be available yet.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"beforeCompile\"><a href=\"#beforeCompile\" class=\"headerlink\" title=\"beforeCompile\"></a>beforeCompile</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called right before the compilation starts.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"compiled\"><a href=\"#compiled\" class=\"headerlink\" title=\"compiled\"></a>compiled</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called after the compilation is finished. At this stage all directives have been linked so data changes will trigger DOM updates. However, <code>$el</code> is not guaranteed to have been inserted into the document yet.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"ready\"><a href=\"#ready\" class=\"headerlink\" title=\"ready\"></a>ready</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called after compilation <strong>and</strong> the <code>$el</code> is <strong>inserted into the document for the first time</strong>, i.e. right after the first <code>attached</code> hook. Note this insertion must be executed via Vue (with methods like <code>vm.$appendTo()</code> or as a result of a directive update) to trigger the <code>ready</code> hook.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"attached\"><a href=\"#attached\" class=\"headerlink\" title=\"attached\"></a>attached</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called when <code>vm.$el</code> is attached to DOM by a directive or a VM instance method such as <code>$appendTo()</code>. Direct manipulation of <code>vm.$el</code> will <strong>not</strong> trigger this hook.</p>\n</li>\n</ul>\n<h3 id=\"detached\"><a href=\"#detached\" class=\"headerlink\" title=\"detached\"></a>detached</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called when <code>vm.$el</code> is removed from the DOM by a directive or a VM instance method. Direct manipulation of <code>vm.$el</code> will <strong>not</strong> trigger this hook.</p>\n</li>\n</ul>\n<h3 id=\"beforeDestroy\"><a href=\"#beforeDestroy\" class=\"headerlink\" title=\"beforeDestroy\"></a>beforeDestroy</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called right before a Vue instance is destroyed. At this stage the instance is still fully functional.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"destroyed\"><a href=\"#destroyed\" class=\"headerlink\" title=\"destroyed\"></a>destroyed</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called after a Vue instance has been destroyed. When this hook is called, all bindings and directives of the Vue instance have been unbound and all child Vue instances have also been destroyed.</p>\n<p>Note if there is a leaving transition, the <code>destroyed</code> hook is called <strong>after</strong> the transition has finished.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h2 id=\"Options-Assets\"><a href=\"#Options-Assets\" class=\"headerlink\" title=\"Options / Assets\"></a>Options / Assets</h2><h3 id=\"directives\"><a href=\"#directives\" class=\"headerlink\" title=\"directives\"></a>directives</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A hash of directives to be made available to the Vue instance.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/custom-directive.html\">Custom Directives</a></li>\n<li><a href=\"/guide/components.html#Assets_Naming_Convention\">Assets Naming Convention</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"elementDirectives\"><a href=\"#elementDirectives\" class=\"headerlink\" title=\"elementDirectives\"></a>elementDirectives</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A hash of element directives to be made available to the Vue instance.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/custom-directive.html#Element_Directives\">Element Directives</a></li>\n<li><a href=\"/guide/components.html#Assets_Naming_Convention\">Assets Naming Convention</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"filters\"><a href=\"#filters\" class=\"headerlink\" title=\"filters\"></a>filters</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A hash of filters to be made available to the Vue instance.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/custom-filter.html\">Custom Filters</a></li>\n<li><a href=\"/guide/components.html#Assets_Naming_Convention\">Assets Naming Convention</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"components\"><a href=\"#components\" class=\"headerlink\" title=\"components\"></a>components</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A hash of components to be made available to the Vue instance.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/components.html\">Components</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"transitions\"><a href=\"#transitions\" class=\"headerlink\" title=\"transitions\"></a>transitions</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A hash of transitions to be made available to the Vue instance.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/transitions.html\">Transitions</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"partials\"><a href=\"#partials\" class=\"headerlink\" title=\"partials\"></a>partials</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A hash of partial strings to be made available to the Vue instance.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"#partial\">Special Elements - partial</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Options-Misc\"><a href=\"#Options-Misc\" class=\"headerlink\" title=\"Options / Misc\"></a>Options / Misc</h2><h3 id=\"parent\"><a href=\"#parent\" class=\"headerlink\" title=\"parent\"></a>parent</h3><ul>\n<li><p><strong>Type:</strong> <code>Vue instance</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Specify the parent instance for the instance to be created. Establishes a parent-child relationship between the two. The parent will be accessible as <code>this.$parent</code> for the child, and the child will be pushed into the parent’s <code>$children</code> array.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html#Parent-Child_Communication\">Parent-Child Communication</a></p>\n</li>\n</ul>\n<h3 id=\"events\"><a href=\"#events\" class=\"headerlink\" title=\"events\"></a>events</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>An object where keys are events to listen for and values are the corresponding callbacks. Note these are Vue events rather than DOM events. The value can also be a string of a method name. The Vue instance will call <code>$on()</code> for each entry in the object at instantiation.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  events: &#123;</div><div class=\"line\">    <span class=\"string\">'hook:created'</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'created!'</span>)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    greeting: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">msg</span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(msg)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"comment\">// can also use a string for methods</span></div><div class=\"line\">    bye: <span class=\"string\">'sayGoodbye'</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    sayGoodbye: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'goodbye!'</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;) <span class=\"comment\">// -&gt; created!</span></div><div class=\"line\">vm.$emit(<span class=\"string\">'greeting'</span>, <span class=\"string\">'hi!'</span>) <span class=\"comment\">// -&gt; hi!</span></div><div class=\"line\">vm.$emit(<span class=\"string\">'bye'</span>)             <span class=\"comment\">// -&gt; goodbye!</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"#Instance_Methods_/_Events\">Instance Methods - Events</a></li>\n<li><a href=\"/guide/components.html#Parent-Child_Communication\">Parent-Child Communication</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"mixins\"><a href=\"#mixins\" class=\"headerlink\" title=\"mixins\"></a>mixins</h3><ul>\n<li><p><strong>Type:</strong> <code>Array</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The <code>mixins</code> option accepts an array of mixin objects. These mixin objects can contain instance options just like normal instance objects, and they will be merged against the eventual options using the same option merging logic in <code>Vue.extend()</code>. e.g. If your mixin contains a created hook and the component itself also has one, both functions will be called.</p>\n<p>Mixin hooks are called in the order they are provided, and called before the component’s own hooks.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> mixin = &#123;</div><div class=\"line\">  created: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>) &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  created: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>) &#125;,</div><div class=\"line\">  mixins: [mixin]</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// -&gt; 1</span></div><div class=\"line\"><span class=\"comment\">// -&gt; 2</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/mixins.html\">Mixins</a></p>\n</li>\n</ul>\n<h3 id=\"name\"><a href=\"#name\" class=\"headerlink\" title=\"name\"></a>name</h3><ul>\n<li><p><strong>Type:</strong> <code>String</code></p>\n</li>\n<li><p><strong>Restriction:</strong> only respected when used in <code>Vue.extend()</code>.</p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Allow the component to recursively invoke itself in its template. Note that when a component is registered globally with <code>Vue.component()</code>, the global ID is automatically set as its name.</p>\n<p>Another benefit of specifying a <code>name</code> option is console inspection. When inspecting an extended Vue component in the console, the default constructor name is <code>VueComponent</code>, which isn’t very informative. By passing in an optional <code>name</code> option to <code>Vue.extend()</code>, you will get a better inspection output so that you know which component you are looking at. The string will be camelized and used as the component’s constructor name.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> Ctor = Vue.extend(&#123;</div><div class=\"line\">  name: <span class=\"string\">'stack-overflow'</span>,</div><div class=\"line\">  template:</div><div class=\"line\">    <span class=\"string\">'&lt;div&gt;'</span> +</div><div class=\"line\">      <span class=\"comment\">// recursively invoke self</span></div><div class=\"line\">      <span class=\"string\">'&lt;stack-overflow&gt;&lt;/stack-overflow&gt;'</span> +</div><div class=\"line\">    <span class=\"string\">'&lt;/div&gt;'</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// this will actually result in a max stack size exceeded</span></div><div class=\"line\"><span class=\"comment\">// error, but let's assume it works...</span></div><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Ctor()</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(vm) <span class=\"comment\">// -&gt; StackOverflow &#123;$el: null, ...&#125;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Instance-Properties\"><a href=\"#Instance-Properties\" class=\"headerlink\" title=\"Instance Properties\"></a>Instance Properties</h2><h3 id=\"vm-data\"><a href=\"#vm-data\" class=\"headerlink\" title=\"vm.$data\"></a>vm.$data</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The data object that the Vue instance is observing. You can swap it with a new object. The Vue instance proxies access to the properties on its data object.</p>\n</li>\n</ul>\n<h3 id=\"vm-el\"><a href=\"#vm-el\" class=\"headerlink\" title=\"vm.$el\"></a>vm.$el</h3><ul>\n<li><p><strong>Type:</strong> <code>HTMLElement</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The DOM element that the Vue instance is managing. Note that for <a href=\"/guide/components.html#Fragment_Instance\">Fragment Instances</a>, <code>vm.$el</code> will return an anchor node that indicates the starting position of the fragment.</p>\n</li>\n</ul>\n<h3 id=\"vm-options\"><a href=\"#vm-options\" class=\"headerlink\" title=\"vm.$options\"></a>vm.$options</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The instantiation options used for the current Vue instance. This is useful when you want to include custom properties in the options:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  customOption: <span class=\"string\">'foo'</span>,</div><div class=\"line\">  created: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.$options.customOption) <span class=\"comment\">// -&gt; 'foo'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"vm-parent\"><a href=\"#vm-parent\" class=\"headerlink\" title=\"vm.$parent\"></a>vm.$parent</h3><ul>\n<li><p><strong>Type:</strong> <code>Vue instance</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The parent instance, if the current instance has one.</p>\n</li>\n</ul>\n<h3 id=\"vm-root\"><a href=\"#vm-root\" class=\"headerlink\" title=\"vm.$root\"></a>vm.$root</h3><ul>\n<li><p><strong>Type:</strong> <code>Vue instance</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The root Vue instance of the current component tree. If the current instance has no parents this value will be itself.</p>\n</li>\n</ul>\n<h3 id=\"vm-children\"><a href=\"#vm-children\" class=\"headerlink\" title=\"vm.$children\"></a>vm.$children</h3><ul>\n<li><p><strong>Type:</strong> <code>Array&lt;Vue instance&gt;</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The direct child components of the current instance.</p>\n</li>\n</ul>\n<h3 id=\"vm-refs\"><a href=\"#vm-refs\" class=\"headerlink\" title=\"vm.$refs\"></a>vm.$refs</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>An object that holds child components that have <code>v-ref</code> registered.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/components.html#Child_Component_Refs\">Child Component Refs</a></li>\n<li><a href=\"#v-ref\">v-ref</a>.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"vm-els\"><a href=\"#vm-els\" class=\"headerlink\" title=\"vm.$els\"></a>vm.$els</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>An object that holds DOM elements that have <code>v-el</code> registered.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"#v-el\">v-el</a>.</p>\n</li>\n</ul>\n<h2 id=\"Instance-Methods-Data\"><a href=\"#Instance-Methods-Data\" class=\"headerlink\" title=\"Instance Methods / Data\"></a>Instance Methods / Data</h2><h3 id=\"vm-watch-expOrFn-callback-options\"><a href=\"#vm-watch-expOrFn-callback-options\" class=\"headerlink\" title=\"vm.$watch( expOrFn, callback, [options] )\"></a>vm.$watch( expOrFn, callback, [options] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String|Function} expOrFn</code></li>\n<li><code>{Function} callback</code></li>\n<li><code>{Object} [options]</code><ul>\n<li><code>{Boolean} deep</code></li>\n<li><code>{Boolean} immediate</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>Returns:</strong> <code>{Function} unwatch</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Watch an expression or a computed function on the Vue instance for changes. The callback gets called with the new value and the old value. The expression can be a single keypath or any valid binding expressions.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// keypath</span></div><div class=\"line\">vm.$watch(<span class=\"string\">'a.b.c'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newVal, oldVal</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// do something</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// expression</span></div><div class=\"line\">vm.$watch(<span class=\"string\">'a + b'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newVal, oldVal</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// do something</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// function</span></div><div class=\"line\">vm.$watch(</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + <span class=\"keyword\">this</span>.b</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newVal, oldVal</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// do something</span></div><div class=\"line\">  &#125;</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p><code>vm.$watch</code> returns an unwatch function that stops firing the callback:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> unwatch = vm.$watch(<span class=\"string\">'a'</span>, cb)</div><div class=\"line\"><span class=\"comment\">// later, teardown the watcher</span></div><div class=\"line\">unwatch()</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Option: deep</strong></p>\n<p>To also detect nested value changes inside Objects, you need to pass in <code>deep: true</code> in the options argument. Note that you don’t need to do so to listen for Array mutations.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">vm.$watch(<span class=\"string\">'someObject'</span>, callback, &#123;</div><div class=\"line\">  deep: <span class=\"literal\">true</span></div><div class=\"line\">&#125;)</div><div class=\"line\">vm.someObject.nestedValue = <span class=\"number\">123</span></div><div class=\"line\"><span class=\"comment\">// callback is fired</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Option: immediate</strong></p>\n<p>Passing in <code>immediate: true</code> in the option will trigger the callback immediately with the current value of the expression:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">vm.$watch(<span class=\"string\">'a'</span>, callback, &#123;</div><div class=\"line\">  immediate: <span class=\"literal\">true</span></div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// callback is fired immediately with current value of `a`</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"vm-get-expression\"><a href=\"#vm-get-expression\" class=\"headerlink\" title=\"vm.$get( expression )\"></a>vm.$get( expression )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} expression</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Retrieve a value from the Vue instance given an expression. Expressions that throw errors will be suppressed and return <code>undefined</code>.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  data: &#123;</div><div class=\"line\">    a: &#123;</div><div class=\"line\">      b: <span class=\"number\">1</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">vm.$get(<span class=\"string\">'a.b'</span>) <span class=\"comment\">// -&gt; 1</span></div><div class=\"line\">vm.$get(<span class=\"string\">'a.b + 1'</span>) <span class=\"comment\">// -&gt; 2</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"vm-set-keypath-value\"><a href=\"#vm-set-keypath-value\" class=\"headerlink\" title=\"vm.$set( keypath, value )\"></a>vm.$set( keypath, value )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} keypath</code></li>\n<li><code>{*} value</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Set a data value on the Vue instance given a valid keypath. In most cases you should prefer setting properties using plain object syntax, e.g. <code>vm.a.b = 123</code>. This method is only needed in two scenarios:</p>\n<ol>\n<li><p>When you have a keypath string and want to dynamically set the value using that keypath.</p>\n</li>\n<li><p>When you want to set a property that doesn’t exist.</p>\n</li>\n</ol>\n<p>If the path doesn’t exist it will be recursively created and made reactive. If a new root-level reactive property is created due to a <code>$set</code> call, the Vue instance will be forced into a “digest cycle”, during which all its watchers are re-evaluated.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  data: &#123;</div><div class=\"line\">    a: &#123;</div><div class=\"line\">      b: <span class=\"number\">1</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// set an existing path</span></div><div class=\"line\">vm.$set(<span class=\"string\">'a.b'</span>, <span class=\"number\">2</span>)</div><div class=\"line\">vm.a.b <span class=\"comment\">// -&gt; 2</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// set a non-existent path, will force digest</span></div><div class=\"line\">vm.$set(<span class=\"string\">'c'</span>, <span class=\"number\">3</span>)</div><div class=\"line\">vm.c <span class=\"comment\">// -&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/reactivity.html\">Reactivity in Depth</a></p>\n</li>\n</ul>\n<h3 id=\"vm-delete-key\"><a href=\"#vm-delete-key\" class=\"headerlink\" title=\"vm.$delete( key )\"></a>vm.$delete( key )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} key</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Delete a root level property on the Vue instance (and also its <code>$data</code>). Forces a digest cycle. Not recommended.</p>\n</li>\n</ul>\n<h3 id=\"vm-eval-expression\"><a href=\"#vm-eval-expression\" class=\"headerlink\" title=\"vm.$eval( expression )\"></a>vm.$eval( expression )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} expression</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Evaluate a valid binding expression on the current instance. The expression can also contain filters.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// assuming vm.msg = 'hello'</span></div><div class=\"line\">vm.$<span class=\"built_in\">eval</span>(<span class=\"string\">'msg | uppercase'</span>) <span class=\"comment\">// -&gt; 'HELLO'</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"vm-interpolate-templateString\"><a href=\"#vm-interpolate-templateString\" class=\"headerlink\" title=\"vm.$interpolate( templateString )\"></a>vm.$interpolate( templateString )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} templateString</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Evaluate a piece of template string containing mustache interpolations. Note that this method simply performs string interpolation; attribute directives are ignored.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// assuming vm.msg = 'hello'</span></div><div class=\"line\">vm.$interpolate(<span class=\"string\">'&#123;&#123;msg&#125;&#125; world!'</span>) <span class=\"comment\">// -&gt; 'hello world!'</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"vm-log-keypath\"><a href=\"#vm-log-keypath\" class=\"headerlink\" title=\"vm.$log( [keypath] )\"></a>vm.$log( [keypath] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} [keypath]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Log the current instance data as a plain object, which is more inspection-friendly than a bunch of getter/setters. Also accepts an optional key.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">vm.$log() <span class=\"comment\">// logs entire ViewModel data</span></div><div class=\"line\">vm.$log(<span class=\"string\">'item'</span>) <span class=\"comment\">// logs vm.item</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Instance-Methods-Events\"><a href=\"#Instance-Methods-Events\" class=\"headerlink\" title=\"Instance Methods / Events\"></a>Instance Methods / Events</h2><h3 id=\"vm-on-event-callback\"><a href=\"#vm-on-event-callback\" class=\"headerlink\" title=\"vm.$on( event, callback )\"></a>vm.$on( event, callback )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} event</code></li>\n<li><code>{Function} callback</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Listen for a custom event on the current vm. Events can be triggered by <code>vm.$emit</code>, <code>vm.$dispatch</code> or <code>vm.$broadcast</code>. The callback will receive all the additional arguments passed into these event-triggering methods.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">vm.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">msg</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(msg)</div><div class=\"line\">&#125;)</div><div class=\"line\">vm.$emit(<span class=\"string\">'test'</span>, <span class=\"string\">'hi'</span>)</div><div class=\"line\"><span class=\"comment\">// -&gt; \"hi\"</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"vm-once-event-callback\"><a href=\"#vm-once-event-callback\" class=\"headerlink\" title=\"vm.$once( event, callback )\"></a>vm.$once( event, callback )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} event</code></li>\n<li><code>{Function} callback</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Listen for a custom event, but only once. The listener will be removed once it triggers for the first time.</p>\n</li>\n</ul>\n<h3 id=\"vm-off-event-callback\"><a href=\"#vm-off-event-callback\" class=\"headerlink\" title=\"vm.$off( [event, callback] )\"></a>vm.$off( [event, callback] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} [event]</code></li>\n<li><code>{Function} [callback]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Remove event listener(s).</p>\n<ul>\n<li><p>If no arguments are provided, remove all event listeners;</p>\n</li>\n<li><p>If only the event is provided, remove all listeners for that event;</p>\n</li>\n<li><p>If both event and callback are given, remove the listener for that specific callback only.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"vm-emit-event-…args\"><a href=\"#vm-emit-event-…args\" class=\"headerlink\" title=\"vm.$emit( event, […args] )\"></a>vm.$emit( event, […args] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} event</code></li>\n<li><code>[...args]</code></li>\n</ul>\n<p>Trigger an event on the current instance. Any additional arguments will be passed into the listener’s callback function.</p>\n</li>\n</ul>\n<h3 id=\"vm-dispatch-event-…args\"><a href=\"#vm-dispatch-event-…args\" class=\"headerlink\" title=\"vm.$dispatch( event, […args] )\"></a>vm.$dispatch( event, […args] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} event</code></li>\n<li><code>[...args]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Dispatch an event, first triggering it on the instance itself, and then propagates upward along the parent chain. The propagation stops when it triggers a parent event listener, unless that listener returns <code>true</code>. Any additional arguments will be passed into the listener’s callback function.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// create a parent chain</span></div><div class=\"line\"><span class=\"keyword\">var</span> parent = <span class=\"keyword\">new</span> Vue()</div><div class=\"line\"><span class=\"keyword\">var</span> child1 = <span class=\"keyword\">new</span> Vue(&#123; parent: parent &#125;)</div><div class=\"line\"><span class=\"keyword\">var</span> child2 = <span class=\"keyword\">new</span> Vue(&#123; parent: child1 &#125;)</div><div class=\"line\"></div><div class=\"line\">parent.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'parent notified'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\">child1.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'child1 notified'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\">child2.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'child2 notified'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\">child2.$dispatch(<span class=\"string\">'test'</span>)</div><div class=\"line\"><span class=\"comment\">// -&gt; \"child2 notified\"</span></div><div class=\"line\"><span class=\"comment\">// -&gt; \"child1 notified\"</span></div><div class=\"line\"><span class=\"comment\">// parent is NOT notified, because child1 didn't return</span></div><div class=\"line\"><span class=\"comment\">// true in its callback</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html#Parent-Child_Communication\">Parent-Child Communication</a></p>\n</li>\n</ul>\n<h3 id=\"vm-broadcast-event-…args\"><a href=\"#vm-broadcast-event-…args\" class=\"headerlink\" title=\"vm.$broadcast( event, […args] )\"></a>vm.$broadcast( event, […args] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} event</code></li>\n<li><code>[...args]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Broadcast an event that propagates downward to all descendants of the current instance. Since the descendants expand into multiple sub-trees, the event propagation will follow many different “paths”. The propagation for each path will stop when a listener callback is fired along that path, unless the callback returns <code>true</code>.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> parent = <span class=\"keyword\">new</span> Vue()</div><div class=\"line\"><span class=\"comment\">// child1 and child2 are siblings</span></div><div class=\"line\"><span class=\"keyword\">var</span> child1 = <span class=\"keyword\">new</span> Vue(&#123; parent: parent &#125;)</div><div class=\"line\"><span class=\"keyword\">var</span> child2 = <span class=\"keyword\">new</span> Vue(&#123; parent: parent &#125;)</div><div class=\"line\"><span class=\"comment\">// child3 is nested under child2</span></div><div class=\"line\"><span class=\"keyword\">var</span> child3 = <span class=\"keyword\">new</span> Vue(&#123; parent: child2 &#125;)</div><div class=\"line\"></div><div class=\"line\">child1.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'child1 notified'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\">child2.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'child2 notified'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\">child3.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'child3 notified'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\">parent.$broadcast(<span class=\"string\">'test'</span>)</div><div class=\"line\"><span class=\"comment\">// -&gt; \"child1 notified\"</span></div><div class=\"line\"><span class=\"comment\">// -&gt; \"child2 notified\"</span></div><div class=\"line\"><span class=\"comment\">// child3 is NOT notified, because child2 didn't return</span></div><div class=\"line\"><span class=\"comment\">// true in its callback</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Instance-Methods-DOM\"><a href=\"#Instance-Methods-DOM\" class=\"headerlink\" title=\"Instance Methods / DOM\"></a>Instance Methods / DOM</h2><h3 id=\"vm-appendTo-elementOrSelector-callback\"><a href=\"#vm-appendTo-elementOrSelector-callback\" class=\"headerlink\" title=\"vm.$appendTo( elementOrSelector, [callback] )\"></a>vm.$appendTo( elementOrSelector, [callback] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Element|String} elementOrSelector</code></li>\n<li><code>{Function} [callback]</code></li>\n</ul>\n</li>\n<li><p><strong>Returns:</strong> <code>vm</code> - the instance itself</p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Append the Vue instance’s DOM element or fragment to target element. The target can be either an element or a querySelector string. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).</p>\n</li>\n</ul>\n<h3 id=\"vm-before-elementOrSelector-callback\"><a href=\"#vm-before-elementOrSelector-callback\" class=\"headerlink\" title=\"vm.$before( elementOrSelector, [callback] )\"></a>vm.$before( elementOrSelector, [callback] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Element|String} elementOrSelector</code></li>\n<li><code>{Function} [callback]</code></li>\n</ul>\n</li>\n<li><p><strong>Returns:</strong> <code>vm</code> - the instance itself</p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Insert the Vue instance’s DOM element or fragment before target element. The target can be either an element or a querySelector string. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).</p>\n</li>\n</ul>\n<h3 id=\"vm-after-elementOrSelector-callback\"><a href=\"#vm-after-elementOrSelector-callback\" class=\"headerlink\" title=\"vm.$after( elementOrSelector, [callback] )\"></a>vm.$after( elementOrSelector, [callback] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Element|String} elementOrSelector</code></li>\n<li><code>{Function} [callback]</code></li>\n</ul>\n</li>\n<li><p><strong>Returns:</strong> <code>vm</code> - the instance itself</p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Insert the Vue instance’s DOM element or fragment after target element. The target can be either an element or a querySelector string. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).</p>\n</li>\n</ul>\n<h3 id=\"vm-remove-callback\"><a href=\"#vm-remove-callback\" class=\"headerlink\" title=\"vm.$remove( [callback] )\"></a>vm.$remove( [callback] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Function} [callback]</code></li>\n</ul>\n</li>\n<li><p><strong>Returns:</strong> <code>vm</code> - the instance itself</p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Remove the Vue instance’s DOM element or fragment from the DOM. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).</p>\n</li>\n</ul>\n<h3 id=\"vm-nextTick-callback\"><a href=\"#vm-nextTick-callback\" class=\"headerlink\" title=\"vm.$nextTick( callback )\"></a>vm.$nextTick( callback )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Function} [callback]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Defer the callback to be executed after the next DOM update cycle. Use it immediately after you’ve changed some data to wait for the DOM update. This is the same as the global <code>Vue.nextTick</code>, except that the callback’s <code>this</code> context is automatically bound to the instance calling this method.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    <span class=\"comment\">// ...</span></div><div class=\"line\">    example: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"comment\">// modify data</span></div><div class=\"line\">      <span class=\"keyword\">this</span>.message = <span class=\"string\">'changed'</span></div><div class=\"line\">      <span class=\"comment\">// DOM is not updated yet</span></div><div class=\"line\">      <span class=\"keyword\">this</span>.$nextTick(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// DOM is now updated</span></div><div class=\"line\">        <span class=\"comment\">// `this` is bound to the current instance</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.doSomethingElse()</div><div class=\"line\">      &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"#Vue-nextTick\">Vue.nextTick</a></li>\n<li><a href=\"/guide/reactivity.html#Async_Update_Queue\">Async Update Queue</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Instance-Methods-Lifecycle\"><a href=\"#Instance-Methods-Lifecycle\" class=\"headerlink\" title=\"Instance Methods / Lifecycle\"></a>Instance Methods / Lifecycle</h2><h3 id=\"vm-mount-elementOrSelector\"><a href=\"#vm-mount-elementOrSelector\" class=\"headerlink\" title=\"vm.$mount( [elementOrSelector] )\"></a>vm.$mount( [elementOrSelector] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Element|String} [elementOrSelector]</code></li>\n</ul>\n</li>\n<li><p><strong>Returns:</strong> <code>vm</code> - the instance itself</p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>If a Vue instance didn’t receive the <code>el</code> option at instantiation, it will be in “unmounted” state, without an associated DOM element or fragment. <code>vm.$mount()</code> can be used to manually start the mounting/compilation of an unmounted Vue instance.</p>\n<p>If no argument is provided, the template will be created as an out-of-document fragment, and you will have to use other DOM instance methods to insert it into the document yourself. If <code>replace</code> option is set to <code>false</code>, then an empty <code>&lt;div&gt;</code> will be automatically created as the wrapper element.</p>\n<p>Calling <code>$mount()</code> on an already mounted instance will have no effect. The method returns the instance itself so you can chain other instance methods after it.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> MyComponent = Vue.extend(&#123;</div><div class=\"line\">  template: <span class=\"string\">'&lt;div&gt;Hello!&lt;/div&gt;'</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// create and mount to #app (will replace #app)</span></div><div class=\"line\"><span class=\"keyword\">new</span> MyComponent().$mount(<span class=\"string\">'#app'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// the above is the same as:</span></div><div class=\"line\"><span class=\"keyword\">new</span> MyComponent(&#123; el: <span class=\"string\">'#app'</span> &#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// or, compile off-document and append afterwards:</span></div><div class=\"line\"><span class=\"keyword\">new</span> MyComponent().$mount().$appendTo(<span class=\"string\">'#container'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"vm-destroy-remove\"><a href=\"#vm-destroy-remove\" class=\"headerlink\" title=\"vm.$destroy( [remove] )\"></a>vm.$destroy( [remove] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Boolean} [remove] - default: false</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Completely destroy a vm. Clean up its connections with other existing vms, unbind all its directives, turn off all event listeners and, if the <code>remove</code> argument is true, remove its associated DOM element or fragment from the DOM.</p>\n<p>Triggers the <code>beforeDestroy</code> and <code>destroyed</code> hooks.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h2 id=\"Directives\"><a href=\"#Directives\" class=\"headerlink\" title=\"Directives\"></a>Directives</h2><h3 id=\"v-text\"><a href=\"#v-text\" class=\"headerlink\" title=\"v-text\"></a>v-text</h3><ul>\n<li><p><strong>Expects:</strong> <code>String</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Updates the element’s <code>textContent</code>.</p>\n<p>Internally, <code>{{ Mustache }}</code> interpolations are also compiled as a <code>v-text</code> directive on a textNode. The directive form requires a wrapper element, but offers slightly better performance and avoids FOUC (Flash of Uncompiled Content).</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-text</span>=<span class=\"string\">\"msg\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- same as --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"v-html\"><a href=\"#v-html\" class=\"headerlink\" title=\"v-html\"></a>v-html</h3><ul>\n<li><p><strong>Expects:</strong> <code>String</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Updates the element’s <code>innerHTML</code>. The contents are inserted as plain HTML - data bindings are ignored. If you need to reuse template pieces, you should use <a href=\"#partial\">partials</a>.</p>\n<p>Internally, <code>{{{ Mustache }}}</code> interpolations are also compiled as a <code>v-html</code> directive using anchor nodes. The directive form requires a wrapper element, but offers slightly better performance and avoids FOUC (Flash of Uncompiled Content).</p>\n<p class=\"tip\">Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to <a href=\"https://en.wikipedia.org/wiki/Cross-site_scripting\" target=\"_blank\" rel=\"external\">XSS attacks</a>. Only use <code>v-html</code> on trusted content and <strong>never</strong> on user-provided content.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-html</span>=<span class=\"string\">\"html\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- same as --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123;&#123;html&#125;&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"v-if\"><a href=\"#v-if\" class=\"headerlink\" title=\"v-if\"></a>v-if</h3><ul>\n<li><p><strong>Expects:</strong> <code>*</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Conditionally render the element based on the truthy-ness of the expression value. The element and its contained data bindings / components are destroyed and re-constructed during toggles. If the element is a <code>&lt;template&gt;</code> element, its content will be extracted as the conditional block.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/conditional.html\">Conditional Rendering</a></p>\n</li>\n</ul>\n<h3 id=\"v-show\"><a href=\"#v-show\" class=\"headerlink\" title=\"v-show\"></a>v-show</h3><ul>\n<li><p><strong>Expects:</strong> <code>*</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Toggle’s the element’s <code>display</code> CSS property based on the truthy-ness of the expression value. Triggers transitions if present.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/conditional.html#v-show\">Conditional Rendering - v-show</a></p>\n</li>\n</ul>\n<h3 id=\"v-else\"><a href=\"#v-else\" class=\"headerlink\" title=\"v-else\"></a>v-else</h3><ul>\n<li><p><strong>Does not expect expression</strong></p>\n</li>\n<li><p><strong>Restriction:</strong> previous sibling element must have <code>v-if</code> or <code>v-show</code>.</p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Denote the “else block” for <code>v-if</code> and <code>v-show</code>.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"Math.random() &gt; 0.5\"</span>&gt;</span></div><div class=\"line\">  Sorry</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span>&gt;</span></div><div class=\"line\">  Not sorry</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/conditional.html#v-else\">Conditional Rendering - v-else</a></p>\n</li>\n</ul>\n<h3 id=\"v-for\"><a href=\"#v-for\" class=\"headerlink\" title=\"v-for\"></a>v-for</h3><ul>\n<li><p><strong>Expects:</strong> <code>Array | Object | Number | String</code></p>\n</li>\n<li><p><strong>Param Attributes:</strong></p>\n<ul>\n<li><a href=\"/guide/list.html#track-by\"><code>track-by</code></a></li>\n<li><a href=\"/guide/transitions.html#Staggering_Transitions\"><code>stagger</code></a></li>\n<li><a href=\"/guide/transitions.html#Staggering_Transitions\"><code>enter-stagger</code></a></li>\n<li><a href=\"/guide/transitions.html#Staggering_Transitions\"><code>leave-stagger</code></a></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Render the element or template block multiple times based on the source data. The expression must use the special syntax to provide an alias for the current element being iterated on:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in items\"</span>&gt;</span></div><div class=\"line\">  &#123;&#123; item.text &#125;&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Alternatively, you can also specify an alias for the index (or the key if used on an Object):</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(index, item) in items\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(key, val) in object\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>The detailed usage for <code>v-for</code> is explained in the guide section linked below.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/list.html\">List Rendering</a>.</p>\n</li>\n</ul>\n<h3 id=\"v-on\"><a href=\"#v-on\" class=\"headerlink\" title=\"v-on\"></a>v-on</h3><ul>\n<li><p><strong>Shorthand:</strong> <code>@</code></p>\n</li>\n<li><p><strong>Expects:</strong> <code>Function | Inline Statement</code></p>\n</li>\n<li><p><strong>Argument:</strong> <code>event (required)</code></p>\n</li>\n<li><p><strong>Modifiers:</strong></p>\n<ul>\n<li><code>.stop</code> - call <code>event.stopPropagation()</code>.</li>\n<li><code>.prevent</code> - call <code>event.preventDefault()</code>.</li>\n<li><code>.{keyCode | keyAlias}</code> - only trigger handler on certain keys.</li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Attaches an event listener to the element. The event type is denoted by the argument. The expression can either be a method name or an inline statement, or simply omitted when there are modifiers present.</p>\n<p>When used on a normal element, it listens to <strong>native DOM events</strong> only. When used on a custom element component, it also listens to <strong>custom events</strong> emitted on that child component.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- method handler --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"doThis\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- inline statement --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"doThat('hello')\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- shorthand --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"doThis\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- stop propagation --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.stop</span>=<span class=\"string\">\"doThis\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- prevent default --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"doThis\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- prevent default without expression --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> @<span class=\"attr\">submit.prevent</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- chain modifiers --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.stop.prevent</span>=<span class=\"string\">\"doThis\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- key modifier using keyAlias --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> @<span class=\"attr\">keyup.enter</span>=<span class=\"string\">\"onEnter\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- key modifier using keyCode --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> @<span class=\"attr\">keyup.13</span>=<span class=\"string\">\"onEnter\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Listening to custom events on a child component (the handler is called when “my-event” is emitted on the child):</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span> @<span class=\"attr\">my-event</span>=<span class=\"string\">\"handleThis\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/events.html\">Methods and Event Handling</a></p>\n</li>\n</ul>\n<h3 id=\"v-bind\"><a href=\"#v-bind\" class=\"headerlink\" title=\"v-bind\"></a>v-bind</h3><ul>\n<li><p><strong>Shorthand:</strong> <code>:</code></p>\n</li>\n<li><p><strong>Expects:</strong> <code>* (with argument) | Object (without argument)</code></p>\n</li>\n<li><p><strong>Argument:</strong> <code>attrOrProp (optional)</code></p>\n</li>\n<li><p><strong>Modifiers:</strong></p>\n<ul>\n<li><code>.sync</code> - make the binding two-way. Only respected for prop bindings.</li>\n<li><code>.once</code> - make the binding one-time. Only respected for prop bindings.</li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Dynamically bind one or more attributes, or a component prop to an expression.</p>\n<p>When used to bind the <code>class</code> or <code>style</code> attribute, it supports additional value types such as Array or Objects. See linked guide section below for more details.</p>\n<p>When used for prop binding, the prop must be properly declared in the child component. Prop bindings can specify a different binding type using one of the modifiers.</p>\n<p>When used without an argument, can be used to bind an object containing attribute name-value pairs. Note in this mode <code>class</code> and <code>style</code> does not support Array or Objects.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- bind an attribute --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">v-bind:src</span>=<span class=\"string\">\"imageSrc\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- shorthand --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">\"imageSrc\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- class binding --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123; red: isRed &#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"[classA, classB]\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- style binding --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:style</span>=<span class=\"string\">\"&#123; fontSize: size + 'px' &#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:style</span>=<span class=\"string\">\"[styleObjectA, styleObjectB]\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- binding an object of attributes --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-bind</span>=<span class=\"string\">\"&#123; id: someProp, 'other-attr': otherProp &#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- prop binding. \"prop\" must be declared in my-component. --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span> <span class=\"attr\">:prop</span>=<span class=\"string\">\"someThing\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- two-way prop binding --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span> <span class=\"attr\">:prop.sync</span>=<span class=\"string\">\"someThing\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- one-time prop binding --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span> <span class=\"attr\">:prop.once</span>=<span class=\"string\">\"someThing\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/class-and-style.html\">Class and Style Bindings</a></li>\n<li><a href=\"/guide/components.html#Props\">Component Props</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"v-model\"><a href=\"#v-model\" class=\"headerlink\" title=\"v-model\"></a>v-model</h3><ul>\n<li><p><strong>Expects:</strong> varies based on input type</p>\n</li>\n<li><p><strong>Limited to:</strong></p>\n<ul>\n<li><code>&lt;input&gt;</code></li>\n<li><code>&lt;select&gt;</code></li>\n<li><code>&lt;textarea&gt;</code></li>\n</ul>\n</li>\n<li><p><strong>Param Attributes:</strong></p>\n<ul>\n<li><a href=\"/guide/forms.html#lazy\"><code>lazy</code></a></li>\n<li><a href=\"/guide/forms.html#number\"><code>number</code></a></li>\n<li><a href=\"/guide/forms.html#debounce\"><code>debounce</code></a></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Create a two-way binding on a form input element. For detailed usage, see guide section linked below.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/forms.html\">Form Input Bindings</a></p>\n</li>\n</ul>\n<h3 id=\"v-ref\"><a href=\"#v-ref\" class=\"headerlink\" title=\"v-ref\"></a>v-ref</h3><ul>\n<li><p><strong>Does not expect expression</strong></p>\n</li>\n<li><p><strong>Limited to:</strong> child components</p>\n</li>\n<li><p><strong>Argument:</strong> <code>id (required)</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register a reference to a child component on its parent for direct access. Does not expect an expression. Must provide an argument as the id to register with. The component instance will be accessible on its parent’s <code>$refs</code> object.</p>\n<p>When used on a component together with <code>v-for</code>, the registered value will be an Array containing all the child component instances corresponding to the Array they are bound to. If the data source for <code>v-for</code> is an Object, the registered value will be an Object containing key-instance pairs mirroring the source Object.</p>\n</li>\n<li><p><strong>Note:</strong></p>\n<p>Because HTML is case-insensitive, camelCase usage like <code>v-ref:someRef</code> will be converted to all lowercase. You can use <code>v-ref:some-ref</code> which properly sets <code>this.$refs.someRef</code>.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp</span> <span class=\"attr\">v-ref:child</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp</span> <span class=\"attr\">v-ref:some-child</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// access from parent:</span></div><div class=\"line\"><span class=\"keyword\">this</span>.$refs.child</div><div class=\"line\"><span class=\"keyword\">this</span>.$refs.someChild</div></pre></td></tr></table></figure>\n<p>With <code>v-for</code>:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp</span> <span class=\"attr\">v-ref:list</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// this will be an array in parent</span></div><div class=\"line\"><span class=\"keyword\">this</span>.$refs.list</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html#Child_Component_Refs\">Child Component Refs</a></p>\n</li>\n</ul>\n<h3 id=\"v-el\"><a href=\"#v-el\" class=\"headerlink\" title=\"v-el\"></a>v-el</h3><ul>\n<li><p><strong>Does not expect expression</strong></p>\n</li>\n<li><p><strong>Argument:</strong> <code>id (required)</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register a reference to a DOM element on its owner Vue instance’s <code>$els</code> object for easier access.</p>\n</li>\n<li><p><strong>Note:</strong></p>\n<p>Because HTML is case-insensitive, camelCase usage like <code>v-el:someEl</code> will be converted to all lowercase. You can use <code>v-el:some-el</code> which properly sets <code>this.$els.someEl</code>.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-el:msg</span>&gt;</span>hello<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-el:other-msg</span>&gt;</span>world<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.$els.msg.textContent <span class=\"comment\">// -&gt; \"hello\"</span></div><div class=\"line\"><span class=\"keyword\">this</span>.$els.otherMsg.textContent <span class=\"comment\">// -&gt; \"world\"</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"v-pre\"><a href=\"#v-pre\" class=\"headerlink\" title=\"v-pre\"></a>v-pre</h3><ul>\n<li><p><strong>Does not expect expression</strong></p>\n</li>\n<li><p><strong>Usage</strong></p>\n<p>Skip compilation for this element and all its children. You can use this for displaying raw mustache tags. Skipping large numbers of nodes with no directives on them can also speed up compilation.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-pre</span>&gt;</span>&#123;&#123; this will not be compiled &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"v-cloak\"><a href=\"#v-cloak\" class=\"headerlink\" title=\"v-cloak\"></a>v-cloak</h3><ul>\n<li><p><strong>Does not expect expression</strong></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>This directive will remain on the element until the associated Vue instance finishes compilation. Combined with CSS rules such as <code>[v-cloak] { display: none }</code>, this directive can be used to hide un-compiled mustache bindings until the Vue instance is ready.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-attr\">[v-cloak]</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-cloak</span>&gt;</span></div><div class=\"line\">  &#123;&#123; message &#125;&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>The <code>&lt;div&gt;</code> will not be visible until the compilation is done.</p>\n</li>\n</ul>\n<h2 id=\"Special-Elements\"><a href=\"#Special-Elements\" class=\"headerlink\" title=\"Special Elements\"></a>Special Elements</h2><h3 id=\"component\"><a href=\"#component\" class=\"headerlink\" title=\"component\"></a>component</h3><ul>\n<li><p><strong>Attributes:</strong></p>\n<ul>\n<li><code>is</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Alternative syntax for invoking components. Primarily used for dynamic components with the <code>is</code> attribute:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- a dynamic component controlled by --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- the `componentId` property on the vm --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">:is</span>=<span class=\"string\">\"componentId\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html#Dynamic_Components\">Dynamic Components</a></p>\n</li>\n</ul>\n<h3 id=\"slot\"><a href=\"#slot\" class=\"headerlink\" title=\"slot\"></a>slot</h3><ul>\n<li><p><strong>Attributes:</strong></p>\n<ul>\n<li><code>name</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p><code>&lt;slot&gt;</code> elements serve as content distribution outlets in component templates. The slot element itself will be replaced.</p>\n<p>A slot with the <code>name</code> attribute is called a named slot. A named slot will distribute content with a <code>slot</code> attribute that matches its name.</p>\n<p>For detailed usage, see the guide section linked below.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html#Content_Distribution_with_Slots\">Content Distribution with Slots</a></p>\n</li>\n</ul>\n<h3 id=\"partial\"><a href=\"#partial\" class=\"headerlink\" title=\"partial\"></a>partial</h3><ul>\n<li><p><strong>Attributes:</strong></p>\n<ul>\n<li><code>name</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p><code>&lt;partial&gt;</code> elements serve as outlets for registered template partials. Partial contents are also compiled by Vue when inserted. The <code>&lt;partial&gt;</code> element itself will be replaced. It requires a <code>name</code> attribute which will be used to resolve the partial’s content.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// registering a partial</span></div><div class=\"line\">Vue.partial(<span class=\"string\">'my-partial'</span>, <span class=\"string\">'&lt;p&gt;This is a partial! &#123;&#123;msg&#125;&#125;&lt;/p&gt;'</span>)</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- a static partial --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">partial</span> <span class=\"attr\">name</span>=<span class=\"string\">\"my-partial\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">partial</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- a dynamic partial --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- renders partial with id === vm.partialId --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">partial</span> <span class=\"attr\">v-bind:name</span>=<span class=\"string\">\"partialId\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">partial</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- dynamic partial using v-bind shorthand --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">partial</span> <span class=\"attr\">:name</span>=<span class=\"string\">\"partialId\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">partial</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Filters\"><a href=\"#Filters\" class=\"headerlink\" title=\"Filters\"></a>Filters</h2><h3 id=\"capitalize\"><a href=\"#capitalize\" class=\"headerlink\" title=\"capitalize\"></a>capitalize</h3><ul>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123; msg | capitalize &#125;&#125;</div></pre></td></tr></table></figure>\n<p><em>‘abc’ =&gt; ‘Abc’</em></p>\n</li>\n</ul>\n<h3 id=\"uppercase\"><a href=\"#uppercase\" class=\"headerlink\" title=\"uppercase\"></a>uppercase</h3><ul>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123; msg | uppercase &#125;&#125;</div></pre></td></tr></table></figure>\n<p><em>‘abc’ =&gt; ‘ABC’</em></p>\n</li>\n</ul>\n<h3 id=\"lowercase\"><a href=\"#lowercase\" class=\"headerlink\" title=\"lowercase\"></a>lowercase</h3><ul>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123; msg | lowercase &#125;&#125;</div></pre></td></tr></table></figure>\n<p><em>‘ABC’ =&gt; ‘abc’</em></p>\n</li>\n</ul>\n<h3 id=\"currency\"><a href=\"#currency\" class=\"headerlink\" title=\"currency\"></a>currency</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} [symbol] - default: &#39;$&#39;</code></li>\n</ul>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123; amount | currency &#125;&#125;</div></pre></td></tr></table></figure>\n<p><em>12345 =&gt; $12,345.00</em></p>\n<p>Use a different symbol:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123; amount | currency '£' &#125;&#125;</div></pre></td></tr></table></figure>\n<p><em>12345 =&gt; £12,345.00</em></p>\n</li>\n</ul>\n<h3 id=\"pluralize\"><a href=\"#pluralize\" class=\"headerlink\" title=\"pluralize\"></a>pluralize</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} single, [double, triple, ...]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Pluralizes the argument based on the filtered value. When there is exactly one argument, plural forms simply add an “s” at the end. When there are more than one argument, the arguments will be used as array of strings corresponding to the single, double, triple … forms of the word to be pluralized. When the number to be pluralized exceeds the length of the arguments, it will use the last entry in the array.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123;count&#125;&#125; &#123;&#123;count | pluralize 'item'&#125;&#125;</div></pre></td></tr></table></figure>\n<p><em>1 =&gt; ‘1 item’</em><br><em>2 =&gt; ‘2 items’</em></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123;date&#125;&#125;&#123;&#123;date | pluralize 'st' 'nd' 'rd' 'th'&#125;&#125;</div></pre></td></tr></table></figure>\n<p>Will result in:</p>\n<p><em>1 =&gt; ‘1st’</em><br><em>2 =&gt; ‘2nd’</em><br><em>3 =&gt; ‘3rd’</em><br><em>4 =&gt; ‘4th’</em><br><em>5 =&gt; ‘5th’</em></p>\n</li>\n</ul>\n<h3 id=\"json\"><a href=\"#json\" class=\"headerlink\" title=\"json\"></a>json</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Number} [indent] - default: 2</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Output the result of calling <code>JSON.stringify()</code> on the value instead of outputting the <code>toString()</code> value (e.g. <code>[object Object]</code>).</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<p>Print an object with 4-space indent:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">pre</span>&gt;</span>&#123;&#123; nestedObject | json 4 &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"debounce\"><a href=\"#debounce\" class=\"headerlink\" title=\"debounce\"></a>debounce</h3><ul>\n<li><p><strong>Limited to:</strong> directives that expect <code>Function</code> values, e.g. <code>v-on</code></p>\n</li>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Number} [wait] - default: 300</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Wrap the handler to debounce it for <code>x</code> milliseconds, where <code>x</code> is the argument. Default wait time is 300ms. A debounced handler will be delayed until at least <code>x</code> ms has passed after the call moment; if the handler is called again before the delay period, the delay period is reset to <code>x</code> ms.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> @<span class=\"attr\">keyup</span>=<span class=\"string\">\"onKeyup | debounce 500\"</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"limitBy\"><a href=\"#limitBy\" class=\"headerlink\" title=\"limitBy\"></a>limitBy</h3><ul>\n<li><p><strong>Limited to:</strong> directives that expect <code>Array</code> values, e.g. <code>v-for</code></p>\n</li>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Number} limit</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Limit the array to the first N items, as specified by the argument.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- only display first 10 items --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in items | limitBy 10\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"filterBy\"><a href=\"#filterBy\" class=\"headerlink\" title=\"filterBy\"></a>filterBy</h3><ul>\n<li><p><strong>Limited to:</strong> directives that expect <code>Array</code> values, e.g. <code>v-for</code></p>\n</li>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String | Function} targetStringOrFunction</code></li>\n<li><code>&quot;in&quot; (optional delimiter)</code></li>\n<li><code>{String} [...searchKeys]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Return a filtered version of the source Array. The first argument can either be a string or a function.</p>\n<p>When the first argument is a string, it will be used as the target string to search for in each element of the Array:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in items | filterBy 'hello'\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>In the above example, only items that contain the target string <code>&quot;hello&quot;</code> will be displayed.</p>\n<p>If the item is an object, the filter will recursively search every nested property of the object for the target string. To narrow down the search scope, additional search keys can be specified:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | filterBy 'Jack' in 'name'\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>In the above example, the filter will only search for <code>&quot;Jack&quot;</code> in the <code>name</code> field of each user object. <strong>It is a good idea to always limit the search scope for better performance.</strong></p>\n<p>The examples above are using static arguments - we can, of course, use dynamic arguments as target string or search keys. Combined with <code>v-model</code> we can easily implement type-ahead filtering:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"filter-by-example\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"name\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | filterBy name in 'name'\"</span>&gt;</span></div><div class=\"line\">      &#123;&#123; user.name &#125;&#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#filter-by-example'</span>,</div><div class=\"line\">  data: &#123;</div><div class=\"line\">    name: <span class=\"string\">''</span>,</div><div class=\"line\">    users: [</div><div class=\"line\">      &#123; name: <span class=\"string\">'Bruce'</span> &#125;,</div><div class=\"line\">      &#123; name: <span class=\"string\">'Chuck'</span> &#125;,</div><div class=\"line\">      &#123; name: <span class=\"string\">'Jackie'</span> &#125;</div><div class=\"line\">    ]</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n\n  <div id=\"filter-by-example\" class=\"demo\">\n    <input v-model=\"name\">\n    <ul>\n      <li v-for=\"user in users | filterBy name in 'name'\">\n        {{ user.name }}\n      </li>\n    </ul>\n  </div>\n  <script>\n  new Vue({\n    el: '#filter-by-example',\n    data: {\n      name: '',\n      users: [{ name: 'Bruce' }, { name: 'Chuck' }, { name: 'Jackie' }]\n    }\n  })\n  </script>\n  \n</li>\n<li><p><strong>Additional Examples:</strong></p>\n<p>Multiple search keys:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | filterBy searchText in 'name' 'phone'\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Multiple search keys with a dynamic Array argument:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- fields = ['fieldA', 'fieldB'] --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | filterBy searchText in fields\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Use a custom filter function:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | filterBy myCustomFilterFunction\"</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"orderBy\"><a href=\"#orderBy\" class=\"headerlink\" title=\"orderBy\"></a>orderBy</h3><ul>\n<li><p><strong>Limited to:</strong> directives that expect <code>Array</code> values, e.g. <code>v-for</code></p>\n</li>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} sortKey</code></li>\n<li><code>{String} [order] - default: 1</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Return a sorted version of the source Array. The <code>sortKey</code> is the key to use for the sorting. The optional <code>order</code> argument specifies whether the result should be in ascending (<code>order &gt;= 0</code>) or descending (<code>order &lt; 0</code>) order.</p>\n<p>For arrays of primitive values, any truthy <code>sortKey</code> will work.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<p>Sort users by name:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | orderBy 'name'\"</span>&gt;</span></div><div class=\"line\">    &#123;&#123; user.name &#125;&#125;</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>In descending order:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | orderBy 'name' -1\"</span>&gt;</span></div><div class=\"line\">    &#123;&#123; user.name &#125;&#125;</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Sort primitive values:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"n in numbers | orderBy true\"</span>&gt;</span></div><div class=\"line\">    &#123;&#123; n &#125;&#125;</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Dynamic sort order:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"orderby-example\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"order = order * -1\"</span>&gt;</span>Reverse Sort Order<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | orderBy 'name' order\"</span>&gt;</span></div><div class=\"line\">      &#123;&#123; user.name &#125;&#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#orderby-example'</span>,</div><div class=\"line\">  data: &#123;</div><div class=\"line\">    order: <span class=\"number\">1</span>,</div><div class=\"line\">    users: [&#123; name: <span class=\"string\">'Bruce'</span> &#125;, &#123; name: <span class=\"string\">'Chuck'</span> &#125;, &#123; name: <span class=\"string\">'Jackie'</span> &#125;]</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n\n  <div id=\"orderby-example\" class=\"demo\">\n    <button @click=\"order = order * -1\">Reverse Sort Order</button>\n    <ul>\n      <li v-for=\"user in users | orderBy 'name' order\">\n        {{ user.name }}\n      </li>\n    </ul>\n  </div>\n  <script>\n  new Vue({\n    el: '#orderby-example',\n    data: {\n      order: 1,\n      users: [{ name: 'Bruce' }, { name: 'Chuck' }, { name: 'Jackie' }]\n    }\n  })\n  </script>\n  \n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"Global-Config\"><a href=\"#Global-Config\" class=\"headerlink\" title=\"Global Config\"></a>Global Config</h2><p><code>Vue.config</code> is an object containing Vue’s global configurations. You can modify its properties listed below before bootstrapping your application:</p>\n<h3 id=\"debug\"><a href=\"#debug\" class=\"headerlink\" title=\"debug\"></a>debug</h3><ul>\n<li><p><strong>Type:</strong> <code>Boolean</code></p>\n</li>\n<li><p><strong>Default:</strong> <code>false</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">Vue.config.debug = <span class=\"literal\">true</span></div></pre></td></tr></table></figure>\n<p>When in debug mode, Vue will:</p>\n<ol>\n<li><p>Print stack traces for all warnings.</p>\n</li>\n<li><p>Make all anchor nodes visible in the DOM as Comment nodes. This makes it easier to inspect the structure of the rendered result.</p>\n</li>\n</ol>\n<p class=\"tip\">Debug mode is only available in development build.</p>\n\n</li>\n</ul>\n<h3 id=\"delimiters\"><a href=\"#delimiters\" class=\"headerlink\" title=\"delimiters\"></a>delimiters</h3><ul>\n<li><p><strong>Type:</strong> <code>Array&lt;String&gt;</code></p>\n</li>\n<li><p><strong>Default:</strong> <code>[\"{{\", \"}}\"]</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// ES6 template string style</span></div><div class=\"line\">Vue.config.delimiters = [<span class=\"string\">'$&#123;'</span>, <span class=\"string\">'&#125;'</span>]</div></pre></td></tr></table></figure>\n<p>Change the plain text interpolation delimiters.</p>\n</li>\n</ul>\n<h3 id=\"unsafeDelimiters\"><a href=\"#unsafeDelimiters\" class=\"headerlink\" title=\"unsafeDelimiters\"></a>unsafeDelimiters</h3><ul>\n<li><p><strong>Type:</strong> <code>Array&lt;String&gt;</code></p>\n</li>\n<li><p><strong>Default:</strong> <code>[\"{{{\", \"}}}\"]</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// make it look more dangerous</span></div><div class=\"line\">Vue.config.delimiters = [<span class=\"string\">'&#123;!!'</span>, <span class=\"string\">'!!&#125;'</span>]</div></pre></td></tr></table></figure>\n<p>Change the raw HTML interpolation delimiters.</p>\n</li>\n</ul>\n<h3 id=\"silent\"><a href=\"#silent\" class=\"headerlink\" title=\"silent\"></a>silent</h3><ul>\n<li><p><strong>Type:</strong> <code>Boolean</code></p>\n</li>\n<li><p><strong>Default:</strong> <code>false</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">Vue.config.silent = <span class=\"literal\">true</span></div></pre></td></tr></table></figure>\n<p>Suppress all Vue.js logs and warnings.</p>\n</li>\n</ul>\n<h3 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h3><ul>\n<li><p><strong>Type:</strong> <code>Boolean</code></p>\n</li>\n<li><p><strong>Default:</strong> <code>true</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">Vue.config.async = <span class=\"literal\">false</span></div></pre></td></tr></table></figure>\n<p>When async mode is off, Vue will perform all DOM updates synchronously upon detecting data change. This may help with debugging in some scenarios, but could also cause degraded performance and affect the order in which watcher callbacks are called. <strong><code>async: false</code> is not recommended in production.</strong></p>\n</li>\n</ul>\n<h2 id=\"Global-API\"><a href=\"#Global-API\" class=\"headerlink\" title=\"Global API\"></a>Global API</h2><h3 id=\"Vue-extend-options\"><a href=\"#Vue-extend-options\" class=\"headerlink\" title=\"Vue.extend( options )\"></a>Vue.extend( options )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Object} options</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Create a “subclass” of the base Vue constructor. The argument should be an object containing component options.</p>\n<p>The special cases to note here are <code>el</code> and <code>data</code> options - they must be functions when used with <code>Vue.extend()</code>.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mount-point\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// create reusable constructor</span></div><div class=\"line\"><span class=\"keyword\">var</span> Profile = Vue.extend(&#123;</div><div class=\"line\">  template: <span class=\"string\">'&lt;p&gt;&#123;&#123;firstName&#125;&#125; &#123;&#123;lastName&#125;&#125; aka &#123;&#123;alias&#125;&#125;&lt;/p&gt;'</span></div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// create an instance of Profile</span></div><div class=\"line\"><span class=\"keyword\">var</span> profile = <span class=\"keyword\">new</span> Profile(&#123;</div><div class=\"line\">  data: &#123;</div><div class=\"line\">    firstName: <span class=\"string\">'Walter'</span>,</div><div class=\"line\">    lastName: <span class=\"string\">'White'</span>,</div><div class=\"line\">    alias: <span class=\"string\">'Heisenberg'</span></div><div class=\"line\">  &#125;  </div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// mount it on an element</span></div><div class=\"line\">profile.$mount(<span class=\"string\">'#mount-point'</span>)</div></pre></td></tr></table></figure>\n<p>Will result in:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Walter White aka Heisenberg<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html\">Components</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-nextTick-callback\"><a href=\"#Vue-nextTick-callback\" class=\"headerlink\" title=\"Vue.nextTick( callback )\"></a>Vue.nextTick( callback )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Functon} callback</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Defer the callback to be executed after the next DOM update cycle. Use it immediately after you’ve changed some data to wait for the DOM update.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// modify data</span></div><div class=\"line\">vm.msg = <span class=\"string\">'Hello'</span></div><div class=\"line\"><span class=\"comment\">// DOM not updated yet</span></div><div class=\"line\">Vue.nextTick(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// DOM updated</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/reactivity.html#Async_Update_Queue\">Async Update Queue</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-set-object-key-value\"><a href=\"#Vue-set-object-key-value\" class=\"headerlink\" title=\"Vue.set( object, key, value )\"></a>Vue.set( object, key, value )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Object} object</code></li>\n<li><code>{String} key</code></li>\n<li><code>{*} value</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Set a property on an object. If the object is reactive, ensure the property is created as a reactive property and trigger view updates. This is primarily used to get around the limitation that Vue cannot detect property additions.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/reactivity.html\">Reactivity in Depth</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-delete-object-key\"><a href=\"#Vue-delete-object-key\" class=\"headerlink\" title=\"Vue.delete( object, key )\"></a>Vue.delete( object, key )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Object} object</code></li>\n<li><code>{String} key</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Delete a property on an object. If the object is reactive, ensure the deletion triggers view updates. This is primarily used to get around the limitation that Vue cannot detect property deletions, but you should rarely need to use it.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/reactivity.html\">Reactivity in Depth</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-directive-id-definition\"><a href=\"#Vue-directive-id-definition\" class=\"headerlink\" title=\"Vue.directive( id, [definition] )\"></a>Vue.directive( id, [definition] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} id</code></li>\n<li><code>{Function | Object} [definition]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register or retrieve a global directive.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// register</span></div><div class=\"line\">Vue.directive(<span class=\"string\">'my-directive'</span>, &#123;</div><div class=\"line\">  bind: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,</div><div class=\"line\">  update: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,</div><div class=\"line\">  unbind: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// register (simple function directive)</span></div><div class=\"line\">Vue.directive(<span class=\"string\">'my-directive'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// this will be called as `update`</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// getter, return the directive definition if registered</span></div><div class=\"line\"><span class=\"keyword\">var</span> myDirective = Vue.directive(<span class=\"string\">'my-directive'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/custom-directive.html\">Custom Directives</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-elementDirective-id-definition\"><a href=\"#Vue-elementDirective-id-definition\" class=\"headerlink\" title=\"Vue.elementDirective( id, [definition] )\"></a>Vue.elementDirective( id, [definition] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} id</code></li>\n<li><code>{Object} [definition]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register or retrieve a global element directive.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// register</span></div><div class=\"line\">Vue.elementDirective(<span class=\"string\">'my-element'</span>, &#123;</div><div class=\"line\">  bind: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,</div><div class=\"line\">  <span class=\"comment\">// element directives do not use `update`</span></div><div class=\"line\">  unbind: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// getter, return the directive definition if registered</span></div><div class=\"line\"><span class=\"keyword\">var</span> myDirective = Vue.elementDirective(<span class=\"string\">'my-element'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/custom-directive.html#Element_Directives\">Element Directives</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-filter-id-definition\"><a href=\"#Vue-filter-id-definition\" class=\"headerlink\" title=\"Vue.filter( id, [definition] )\"></a>Vue.filter( id, [definition] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} id</code></li>\n<li><code>{Function | Object} [definition]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register or retrieve a global filter.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// register</span></div><div class=\"line\">Vue.filter(<span class=\"string\">'my-filter'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// return processed value</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// two way filter</span></div><div class=\"line\">Vue.filter(<span class=\"string\">'my-filter'</span>, &#123;</div><div class=\"line\">  read: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,</div><div class=\"line\">  write: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// getter, return the filter if registered</span></div><div class=\"line\"><span class=\"keyword\">var</span> myFilter = Vue.filter(<span class=\"string\">'my-filter'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/custom-filter.html\">Custom Filter</a></p>\n</li>\n</ul>\n<h3 id=\"Vue-component-id-definition\"><a href=\"#Vue-component-id-definition\" class=\"headerlink\" title=\"Vue.component( id, [definition] )\"></a>Vue.component( id, [definition] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} id</code></li>\n<li><code>{Function | Object} [definition]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register or retrieve a global component.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// register an extended constructor</span></div><div class=\"line\">Vue.component(<span class=\"string\">'my-component'</span>, Vue.extend(&#123; <span class=\"comment\">/* ... */</span>&#125;))</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// register an options object (automatically call Vue.extend)</span></div><div class=\"line\">Vue.component(<span class=\"string\">'my-component'</span>, &#123; <span class=\"comment\">/* ... */</span> &#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// retrive a registered component (always return constructor)</span></div><div class=\"line\"><span class=\"keyword\">var</span> MyComponent = Vue.component(<span class=\"string\">'my-component'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html\">Components</a>.</p>\n</li>\n</ul>\n<h3 id=\"Vue-transition-id-hooks\"><a href=\"#Vue-transition-id-hooks\" class=\"headerlink\" title=\"Vue.transition( id, [hooks] )\"></a>Vue.transition( id, [hooks] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} id</code></li>\n<li><code>{Object} [hooks]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register or retrieve a global transition hooks object.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// register</span></div><div class=\"line\">Vue.transition(<span class=\"string\">'fade'</span>, &#123;</div><div class=\"line\">  enter: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,</div><div class=\"line\">  leave: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// retrieve registered hooks</span></div><div class=\"line\"><span class=\"keyword\">var</span> fadeTransition = Vue.transition(<span class=\"string\">'fade'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/transitions.html\">Transitions</a>.</p>\n</li>\n</ul>\n<h3 id=\"Vue-partial-id-partial\"><a href=\"#Vue-partial-id-partial\" class=\"headerlink\" title=\"Vue.partial( id, [partial] )\"></a>Vue.partial( id, [partial] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} id</code></li>\n<li><code>{String} [partial]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register or retrieve a global template partial string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// register</span></div><div class=\"line\">Vue.partial(<span class=\"string\">'my-partial'</span>, <span class=\"string\">'&lt;div&gt;Hi&lt;/div&gt;'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// retrieve registered partial</span></div><div class=\"line\"><span class=\"keyword\">var</span> myPartial = Vue.partial(<span class=\"string\">'my-partial'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"#partial\">Special Elements - &lt;partial&gt;</a>.</p>\n</li>\n</ul>\n<h3 id=\"Vue-use-plugin-options\"><a href=\"#Vue-use-plugin-options\" class=\"headerlink\" title=\"Vue.use( plugin, [options] )\"></a>Vue.use( plugin, [options] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Object | Function} plugin</code></li>\n<li><code>{Object} [options]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Install a Vue.js plugin. If the plugin is an Object, it must expose an <code>install</code> method. If it is a function itself, it will be treated as the install method. The install method will be called with Vue as the argument.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/plugins.html\">Plugins</a>.</p>\n</li>\n</ul>\n<h3 id=\"Vue-mixin-mixin\"><a href=\"#Vue-mixin-mixin\" class=\"headerlink\" title=\"Vue.mixin( mixin )\"></a>Vue.mixin( mixin )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Object} mixin</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Apply a mixin globally, which affects every Vue instance created afterwards. This can be used by plugin authors to inject custom behavior into components. <strong>Not recommended in application code</strong>.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/mixins.html#Global_Mixin\">Global Mixins</a></p>\n</li>\n</ul>\n<h2 id=\"Options-Data\"><a href=\"#Options-Data\" class=\"headerlink\" title=\"Options / Data\"></a>Options / Data</h2><h3 id=\"data\"><a href=\"#data\" class=\"headerlink\" title=\"data\"></a>data</h3><ul>\n<li><p><strong>Type:</strong> <code>Object | Function</code></p>\n</li>\n<li><p><strong>Restriction:</strong> Only accepts <code>Function</code> when used in <code>Vue.extend()</code>.</p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The data object for the Vue instance. Vue.js will recursively convert its properties into getter/setters to make it “reactive”. <strong>The object must be plain</strong>: native objects, existing getter/setters and prototype properties are ignored. It is not recommended to observe complex objects.</p>\n<p>Once the instance is created, the original data object can be accessed as <code>vm.$data</code>. The Vue instance also proxies all the properties found on the data object.</p>\n<p>Properties that start with <code>_</code> or <code>$</code> will <strong>not</strong> be proxied on the Vue instance because they may conflict with Vue’s internal properties and API methods. You will have to access them as <code>vm.$data._property</code>.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> data = &#123; a: <span class=\"number\">1</span> &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// direct instance creation</span></div><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  data: data</div><div class=\"line\">&#125;)</div><div class=\"line\">vm.a <span class=\"comment\">// -&gt; 1</span></div><div class=\"line\">vm.$data === data <span class=\"comment\">// -&gt; true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// must use function when in Vue.extend()</span></div><div class=\"line\"><span class=\"keyword\">var</span> Component = Vue.extend(&#123;</div><div class=\"line\">  data: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123; a: <span class=\"number\">1</span> &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/reactivity.html\">Reactivity in Depth</a>.</p>\n</li>\n</ul>\n<h3 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h3><ul>\n<li><p><strong>Type:</strong> <code>Array | Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A list/hash of attributes that are exposed to accept data from the parent component. It has a simple Array-based syntax and an alternative Object-based syntax that allows advanced configurations such as type checking, custom validation and default values.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// simple syntax</span></div><div class=\"line\">Vue.component(<span class=\"string\">'props-demo-simple'</span>, &#123;</div><div class=\"line\">  props: [<span class=\"string\">'size'</span>, <span class=\"string\">'myMessage'</span>]</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// object syntax with validation</span></div><div class=\"line\">Vue.component(<span class=\"string\">'props-demo-advanced'</span>, &#123;</div><div class=\"line\">  props: &#123;</div><div class=\"line\">    <span class=\"comment\">// just type check</span></div><div class=\"line\">    size: <span class=\"built_in\">Number</span>,</div><div class=\"line\">    <span class=\"comment\">// type check plus other validations</span></div><div class=\"line\">    name: &#123;</div><div class=\"line\">      type: <span class=\"built_in\">String</span>,</div><div class=\"line\">      required: <span class=\"literal\">true</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html#Props\">Props</a></p>\n</li>\n</ul>\n<h3 id=\"computed\"><a href=\"#computed\" class=\"headerlink\" title=\"computed\"></a>computed</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Computed properties to be mixed into the Vue instance. All getters and setters have their <code>this</code> context automatically bound to the Vue instance.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  data: &#123; a: <span class=\"number\">1</span> &#125;,</div><div class=\"line\">  computed: &#123;</div><div class=\"line\">    <span class=\"comment\">// get only, just need a function</span></div><div class=\"line\">    aDouble: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a * <span class=\"number\">2</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"comment\">// both get and set</span></div><div class=\"line\">    aPlus: &#123;</div><div class=\"line\">      get: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + <span class=\"number\">1</span></div><div class=\"line\">      &#125;,</div><div class=\"line\">      set: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">v</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.a = v - <span class=\"number\">1</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">vm.aPlus   <span class=\"comment\">// -&gt; 2</span></div><div class=\"line\">vm.aPlus = <span class=\"number\">3</span></div><div class=\"line\">vm.a       <span class=\"comment\">// -&gt; 2</span></div><div class=\"line\">vm.aDouble <span class=\"comment\">// -&gt; 4</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/computed.html\">Computed Properties</a></li>\n<li><a href=\"/guide/reactivity.html#Inside_Computed_Properties\">Reactivity in Depth: Inside Computed Properties</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"methods\"><a href=\"#methods\" class=\"headerlink\" title=\"methods\"></a>methods</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Methods to be mixed into the Vue instance. You can access these methods directly on the VM instance, or use them in directive expressions. All methods will have their <code>this</code> context automatically bound to the Vue instance.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  data: &#123; a: <span class=\"number\">1</span> &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    plus: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.a++</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">vm.plus()</div><div class=\"line\">vm.a <span class=\"comment\">// 2</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/events.html\">Methods and Event Handling</a></p>\n</li>\n</ul>\n<h3 id=\"watch\"><a href=\"#watch\" class=\"headerlink\" title=\"watch\"></a>watch</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>An object where keys are expressions to watch and values are the corresponding callbacks. The value can also be a string of a method name, or an Object that contains additional options. The Vue instance will call <code>$watch()</code> for each entry in the object at instantiation.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  data: &#123;</div><div class=\"line\">    a: <span class=\"number\">1</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  watch: &#123;</div><div class=\"line\">    <span class=\"string\">'a'</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val, oldVal</span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'new: %s, old: %s'</span>, val, oldVal)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"comment\">// string method name</span></div><div class=\"line\">    <span class=\"string\">'b'</span>: <span class=\"string\">'someMethod'</span>,</div><div class=\"line\">    <span class=\"comment\">// deep watcher</span></div><div class=\"line\">    <span class=\"string\">'c'</span>: &#123;</div><div class=\"line\">      handler: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val, oldVal</span>) </span>&#123; <span class=\"comment\">/* ... */</span> &#125;,</div><div class=\"line\">      deep: <span class=\"literal\">true</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">vm.a = <span class=\"number\">2</span> <span class=\"comment\">// -&gt; new: 2, old: 1</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"#vm-watch\">Instance Methods - vm.$watch</a></p>\n</li>\n</ul>\n<h2 id=\"Options-DOM\"><a href=\"#Options-DOM\" class=\"headerlink\" title=\"Options / DOM\"></a>Options / DOM</h2><h3 id=\"el\"><a href=\"#el\" class=\"headerlink\" title=\"el\"></a>el</h3><ul>\n<li><p><strong>Type:</strong> <code>String | HTMLElement | Function</code></p>\n</li>\n<li><p><strong>Restriction:</strong> only accepts type <code>Function</code> when used in <code>Vue.extend()</code>.</p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Provide the Vue instance an existing DOM element to mount on. It can be a CSS selector string, an actual HTMLElement, or a function that returns an HTMLElement. Note that the provided element merely serves as a mounting point; it will be replaced if a template is also provided, unless <code>replace</code> is set to false. The resolved element will be accessible as <code>vm.$el</code>.</p>\n<p>When used in <code>Vue.extend</code>, a function must be provided so each instance gets a separately created element.</p>\n<p>If this option is available at instantiation, the instance will immediately enter compilation; otherwise, the user will have to explicitly call <code>vm.$mount()</code> to manually start the compilation.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"template\"><a href=\"#template\" class=\"headerlink\" title=\"template\"></a>template</h3><ul>\n<li><p><strong>Type:</strong> <code>String</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A string template to be used as the markup for the Vue instance. By default, the template will <strong>replace</strong> the mounted element. When the <code>replace</code> option is set to <code>false</code>, the template will be inserted into the mounted element instead. In both cases, any existing markup inside the mounted element will be ignored, unless content distribution slots are present in the template.</p>\n<p>If the string starts with <code>#</code> it will be used as a querySelector and use the selected element’s innerHTML as the template string. This allows the use of the common <code>&lt;script type=&quot;x-template&quot;&gt;</code> trick to include templates.</p>\n<p>Note that under certain situations, for example when the template contains more than one top-level element, or contains only plain text, the instance will become a fragment instance - i.e. one that manages a list of nodes rather than a single node. Non flow-control directives on the mount point for fragment instances are ignored.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></li>\n<li><a href=\"/guide/components.html#Content_Distribution_with_Slots\">Content Distribution</a></li>\n<li><a href=\"/guide/components.html#Fragment_Instance\">Fragment Instance</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace\"></a>replace</h3><ul>\n<li><p><strong>Type:</strong> <code>Boolean</code>  </p>\n</li>\n<li><p><strong>Default:</strong> <code>true</code></p>\n</li>\n<li><p><strong>Restriction:</strong> only respected if the <strong>template</strong> option is also present.</p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Determines whether to replace the element being mounted on with the template. If set to <code>false</code>, the template will overwrite the element’s inner content without replacing the element itself.</p>\n</li>\n<li><p><strong>Example</strong>:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"replace\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#replace'</span>,</div><div class=\"line\">  template: <span class=\"string\">'&lt;p&gt;replaced&lt;/p&gt;'</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>Will result in:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>replaced<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>In comparison, when <code>replace</code> is set to <code>false</code>:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insert\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#insert'</span>,</div><div class=\"line\">  replace: <span class=\"literal\">false</span>,</div><div class=\"line\">  template: <span class=\"string\">'&lt;p&gt;inserted&lt;/p&gt;'</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>Will result in:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"insert\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>inserted<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Options-Lifecycle-Hooks\"><a href=\"#Options-Lifecycle-Hooks\" class=\"headerlink\" title=\"Options / Lifecycle Hooks\"></a>Options / Lifecycle Hooks</h2><h3 id=\"created\"><a href=\"#created\" class=\"headerlink\" title=\"created\"></a>created</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called synchronously after the instance is created. At this stage, the instance has finished processing the options which means the following have been set up: data observation, computed properties, methods, watch/event callbacks. However, DOM compilation has not been started, and the <code>$el</code> property will not be available yet.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"beforeCompile\"><a href=\"#beforeCompile\" class=\"headerlink\" title=\"beforeCompile\"></a>beforeCompile</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called right before the compilation starts.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"compiled\"><a href=\"#compiled\" class=\"headerlink\" title=\"compiled\"></a>compiled</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called after the compilation is finished. At this stage all directives have been linked so data changes will trigger DOM updates. However, <code>$el</code> is not guaranteed to have been inserted into the document yet.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"ready\"><a href=\"#ready\" class=\"headerlink\" title=\"ready\"></a>ready</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called after compilation <strong>and</strong> the <code>$el</code> is <strong>inserted into the document for the first time</strong>, i.e. right after the first <code>attached</code> hook. Note this insertion must be executed via Vue (with methods like <code>vm.$appendTo()</code> or as a result of a directive update) to trigger the <code>ready</code> hook.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"attached\"><a href=\"#attached\" class=\"headerlink\" title=\"attached\"></a>attached</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called when <code>vm.$el</code> is attached to DOM by a directive or a VM instance method such as <code>$appendTo()</code>. Direct manipulation of <code>vm.$el</code> will <strong>not</strong> trigger this hook.</p>\n</li>\n</ul>\n<h3 id=\"detached\"><a href=\"#detached\" class=\"headerlink\" title=\"detached\"></a>detached</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called when <code>vm.$el</code> is removed from the DOM by a directive or a VM instance method. Direct manipulation of <code>vm.$el</code> will <strong>not</strong> trigger this hook.</p>\n</li>\n</ul>\n<h3 id=\"beforeDestroy\"><a href=\"#beforeDestroy\" class=\"headerlink\" title=\"beforeDestroy\"></a>beforeDestroy</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called right before a Vue instance is destroyed. At this stage the instance is still fully functional.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"destroyed\"><a href=\"#destroyed\" class=\"headerlink\" title=\"destroyed\"></a>destroyed</h3><ul>\n<li><p><strong>Type:</strong> <code>Function</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Called after a Vue instance has been destroyed. When this hook is called, all bindings and directives of the Vue instance have been unbound and all child Vue instances have also been destroyed.</p>\n<p>Note if there is a leaving transition, the <code>destroyed</code> hook is called <strong>after</strong> the transition has finished.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h2 id=\"Options-Assets\"><a href=\"#Options-Assets\" class=\"headerlink\" title=\"Options / Assets\"></a>Options / Assets</h2><h3 id=\"directives\"><a href=\"#directives\" class=\"headerlink\" title=\"directives\"></a>directives</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A hash of directives to be made available to the Vue instance.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/custom-directive.html\">Custom Directives</a></li>\n<li><a href=\"/guide/components.html#Assets_Naming_Convention\">Assets Naming Convention</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"elementDirectives\"><a href=\"#elementDirectives\" class=\"headerlink\" title=\"elementDirectives\"></a>elementDirectives</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A hash of element directives to be made available to the Vue instance.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/custom-directive.html#Element_Directives\">Element Directives</a></li>\n<li><a href=\"/guide/components.html#Assets_Naming_Convention\">Assets Naming Convention</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"filters\"><a href=\"#filters\" class=\"headerlink\" title=\"filters\"></a>filters</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A hash of filters to be made available to the Vue instance.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/custom-filter.html\">Custom Filters</a></li>\n<li><a href=\"/guide/components.html#Assets_Naming_Convention\">Assets Naming Convention</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"components\"><a href=\"#components\" class=\"headerlink\" title=\"components\"></a>components</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A hash of components to be made available to the Vue instance.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/components.html\">Components</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"transitions\"><a href=\"#transitions\" class=\"headerlink\" title=\"transitions\"></a>transitions</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A hash of transitions to be made available to the Vue instance.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/transitions.html\">Transitions</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"partials\"><a href=\"#partials\" class=\"headerlink\" title=\"partials\"></a>partials</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>A hash of partial strings to be made available to the Vue instance.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"#partial\">Special Elements - partial</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Options-Misc\"><a href=\"#Options-Misc\" class=\"headerlink\" title=\"Options / Misc\"></a>Options / Misc</h2><h3 id=\"parent\"><a href=\"#parent\" class=\"headerlink\" title=\"parent\"></a>parent</h3><ul>\n<li><p><strong>Type:</strong> <code>Vue instance</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Specify the parent instance for the instance to be created. Establishes a parent-child relationship between the two. The parent will be accessible as <code>this.$parent</code> for the child, and the child will be pushed into the parent’s <code>$children</code> array.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html#Parent-Child_Communication\">Parent-Child Communication</a></p>\n</li>\n</ul>\n<h3 id=\"events\"><a href=\"#events\" class=\"headerlink\" title=\"events\"></a>events</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>An object where keys are events to listen for and values are the corresponding callbacks. Note these are Vue events rather than DOM events. The value can also be a string of a method name. The Vue instance will call <code>$on()</code> for each entry in the object at instantiation.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  events: &#123;</div><div class=\"line\">    <span class=\"string\">'hook:created'</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'created!'</span>)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    greeting: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">msg</span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(msg)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"comment\">// can also use a string for methods</span></div><div class=\"line\">    bye: <span class=\"string\">'sayGoodbye'</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    sayGoodbye: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'goodbye!'</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;) <span class=\"comment\">// -&gt; created!</span></div><div class=\"line\">vm.$emit(<span class=\"string\">'greeting'</span>, <span class=\"string\">'hi!'</span>) <span class=\"comment\">// -&gt; hi!</span></div><div class=\"line\">vm.$emit(<span class=\"string\">'bye'</span>)             <span class=\"comment\">// -&gt; goodbye!</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"#Instance_Methods_/_Events\">Instance Methods - Events</a></li>\n<li><a href=\"/guide/components.html#Parent-Child_Communication\">Parent-Child Communication</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"mixins\"><a href=\"#mixins\" class=\"headerlink\" title=\"mixins\"></a>mixins</h3><ul>\n<li><p><strong>Type:</strong> <code>Array</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The <code>mixins</code> option accepts an array of mixin objects. These mixin objects can contain instance options just like normal instance objects, and they will be merged against the eventual options using the same option merging logic in <code>Vue.extend()</code>. e.g. If your mixin contains a created hook and the component itself also has one, both functions will be called.</p>\n<p>Mixin hooks are called in the order they are provided, and called before the component’s own hooks.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> mixin = &#123;</div><div class=\"line\">  created: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>) &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  created: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>) &#125;,</div><div class=\"line\">  mixins: [mixin]</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// -&gt; 1</span></div><div class=\"line\"><span class=\"comment\">// -&gt; 2</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/mixins.html\">Mixins</a></p>\n</li>\n</ul>\n<h3 id=\"name\"><a href=\"#name\" class=\"headerlink\" title=\"name\"></a>name</h3><ul>\n<li><p><strong>Type:</strong> <code>String</code></p>\n</li>\n<li><p><strong>Restriction:</strong> only respected when used in <code>Vue.extend()</code>.</p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Allow the component to recursively invoke itself in its template. Note that when a component is registered globally with <code>Vue.component()</code>, the global ID is automatically set as its name.</p>\n<p>Another benefit of specifying a <code>name</code> option is console inspection. When inspecting an extended Vue component in the console, the default constructor name is <code>VueComponent</code>, which isn’t very informative. By passing in an optional <code>name</code> option to <code>Vue.extend()</code>, you will get a better inspection output so that you know which component you are looking at. The string will be camelized and used as the component’s constructor name.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> Ctor = Vue.extend(&#123;</div><div class=\"line\">  name: <span class=\"string\">'stack-overflow'</span>,</div><div class=\"line\">  template:</div><div class=\"line\">    <span class=\"string\">'&lt;div&gt;'</span> +</div><div class=\"line\">      <span class=\"comment\">// recursively invoke self</span></div><div class=\"line\">      <span class=\"string\">'&lt;stack-overflow&gt;&lt;/stack-overflow&gt;'</span> +</div><div class=\"line\">    <span class=\"string\">'&lt;/div&gt;'</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// this will actually result in a max stack size exceeded</span></div><div class=\"line\"><span class=\"comment\">// error, but let's assume it works...</span></div><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Ctor()</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(vm) <span class=\"comment\">// -&gt; StackOverflow &#123;$el: null, ...&#125;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Instance-Properties\"><a href=\"#Instance-Properties\" class=\"headerlink\" title=\"Instance Properties\"></a>Instance Properties</h2><h3 id=\"vm-data\"><a href=\"#vm-data\" class=\"headerlink\" title=\"vm.$data\"></a>vm.$data</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The data object that the Vue instance is observing. You can swap it with a new object. The Vue instance proxies access to the properties on its data object.</p>\n</li>\n</ul>\n<h3 id=\"vm-el\"><a href=\"#vm-el\" class=\"headerlink\" title=\"vm.$el\"></a>vm.$el</h3><ul>\n<li><p><strong>Type:</strong> <code>HTMLElement</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The DOM element that the Vue instance is managing. Note that for <a href=\"/guide/components.html#Fragment_Instance\">Fragment Instances</a>, <code>vm.$el</code> will return an anchor node that indicates the starting position of the fragment.</p>\n</li>\n</ul>\n<h3 id=\"vm-options\"><a href=\"#vm-options\" class=\"headerlink\" title=\"vm.$options\"></a>vm.$options</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The instantiation options used for the current Vue instance. This is useful when you want to include custom properties in the options:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  customOption: <span class=\"string\">'foo'</span>,</div><div class=\"line\">  created: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.$options.customOption) <span class=\"comment\">// -&gt; 'foo'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"vm-parent\"><a href=\"#vm-parent\" class=\"headerlink\" title=\"vm.$parent\"></a>vm.$parent</h3><ul>\n<li><p><strong>Type:</strong> <code>Vue instance</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The parent instance, if the current instance has one.</p>\n</li>\n</ul>\n<h3 id=\"vm-root\"><a href=\"#vm-root\" class=\"headerlink\" title=\"vm.$root\"></a>vm.$root</h3><ul>\n<li><p><strong>Type:</strong> <code>Vue instance</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The root Vue instance of the current component tree. If the current instance has no parents this value will be itself.</p>\n</li>\n</ul>\n<h3 id=\"vm-children\"><a href=\"#vm-children\" class=\"headerlink\" title=\"vm.$children\"></a>vm.$children</h3><ul>\n<li><p><strong>Type:</strong> <code>Array&lt;Vue instance&gt;</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>The direct child components of the current instance.</p>\n</li>\n</ul>\n<h3 id=\"vm-refs\"><a href=\"#vm-refs\" class=\"headerlink\" title=\"vm.$refs\"></a>vm.$refs</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>An object that holds child components that have <code>v-ref</code> registered.</p>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/components.html#Child_Component_Refs\">Child Component Refs</a></li>\n<li><a href=\"#v-ref\">v-ref</a>.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"vm-els\"><a href=\"#vm-els\" class=\"headerlink\" title=\"vm.$els\"></a>vm.$els</h3><ul>\n<li><p><strong>Type:</strong> <code>Object</code></p>\n</li>\n<li><p><strong>Read only</strong></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>An object that holds DOM elements that have <code>v-el</code> registered.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"#v-el\">v-el</a>.</p>\n</li>\n</ul>\n<h2 id=\"Instance-Methods-Data\"><a href=\"#Instance-Methods-Data\" class=\"headerlink\" title=\"Instance Methods / Data\"></a>Instance Methods / Data</h2><h3 id=\"vm-watch-expOrFn-callback-options\"><a href=\"#vm-watch-expOrFn-callback-options\" class=\"headerlink\" title=\"vm.$watch( expOrFn, callback, [options] )\"></a>vm.$watch( expOrFn, callback, [options] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String|Function} expOrFn</code></li>\n<li><code>{Function} callback</code></li>\n<li><code>{Object} [options]</code><ul>\n<li><code>{Boolean} deep</code></li>\n<li><code>{Boolean} immediate</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>Returns:</strong> <code>{Function} unwatch</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Watch an expression or a computed function on the Vue instance for changes. The callback gets called with the new value and the old value. The expression can be a single keypath or any valid binding expressions.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// keypath</span></div><div class=\"line\">vm.$watch(<span class=\"string\">'a.b.c'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newVal, oldVal</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// do something</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// expression</span></div><div class=\"line\">vm.$watch(<span class=\"string\">'a + b'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newVal, oldVal</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// do something</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// function</span></div><div class=\"line\">vm.$watch(</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + <span class=\"keyword\">this</span>.b</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newVal, oldVal</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// do something</span></div><div class=\"line\">  &#125;</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p><code>vm.$watch</code> returns an unwatch function that stops firing the callback:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> unwatch = vm.$watch(<span class=\"string\">'a'</span>, cb)</div><div class=\"line\"><span class=\"comment\">// later, teardown the watcher</span></div><div class=\"line\">unwatch()</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Option: deep</strong></p>\n<p>To also detect nested value changes inside Objects, you need to pass in <code>deep: true</code> in the options argument. Note that you don’t need to do so to listen for Array mutations.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">vm.$watch(<span class=\"string\">'someObject'</span>, callback, &#123;</div><div class=\"line\">  deep: <span class=\"literal\">true</span></div><div class=\"line\">&#125;)</div><div class=\"line\">vm.someObject.nestedValue = <span class=\"number\">123</span></div><div class=\"line\"><span class=\"comment\">// callback is fired</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Option: immediate</strong></p>\n<p>Passing in <code>immediate: true</code> in the option will trigger the callback immediately with the current value of the expression:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">vm.$watch(<span class=\"string\">'a'</span>, callback, &#123;</div><div class=\"line\">  immediate: <span class=\"literal\">true</span></div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// callback is fired immediately with current value of `a`</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"vm-get-expression\"><a href=\"#vm-get-expression\" class=\"headerlink\" title=\"vm.$get( expression )\"></a>vm.$get( expression )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} expression</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Retrieve a value from the Vue instance given an expression. Expressions that throw errors will be suppressed and return <code>undefined</code>.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  data: &#123;</div><div class=\"line\">    a: &#123;</div><div class=\"line\">      b: <span class=\"number\">1</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">vm.$get(<span class=\"string\">'a.b'</span>) <span class=\"comment\">// -&gt; 1</span></div><div class=\"line\">vm.$get(<span class=\"string\">'a.b + 1'</span>) <span class=\"comment\">// -&gt; 2</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"vm-set-keypath-value\"><a href=\"#vm-set-keypath-value\" class=\"headerlink\" title=\"vm.$set( keypath, value )\"></a>vm.$set( keypath, value )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} keypath</code></li>\n<li><code>{*} value</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Set a data value on the Vue instance given a valid keypath. In most cases you should prefer setting properties using plain object syntax, e.g. <code>vm.a.b = 123</code>. This method is only needed in two scenarios:</p>\n<ol>\n<li><p>When you have a keypath string and want to dynamically set the value using that keypath.</p>\n</li>\n<li><p>When you want to set a property that doesn’t exist.</p>\n</li>\n</ol>\n<p>If the path doesn’t exist it will be recursively created and made reactive. If a new root-level reactive property is created due to a <code>$set</code> call, the Vue instance will be forced into a “digest cycle”, during which all its watchers are re-evaluated.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  data: &#123;</div><div class=\"line\">    a: &#123;</div><div class=\"line\">      b: <span class=\"number\">1</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// set an existing path</span></div><div class=\"line\">vm.$set(<span class=\"string\">'a.b'</span>, <span class=\"number\">2</span>)</div><div class=\"line\">vm.a.b <span class=\"comment\">// -&gt; 2</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// set a non-existent path, will force digest</span></div><div class=\"line\">vm.$set(<span class=\"string\">'c'</span>, <span class=\"number\">3</span>)</div><div class=\"line\">vm.c <span class=\"comment\">// -&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/reactivity.html\">Reactivity in Depth</a></p>\n</li>\n</ul>\n<h3 id=\"vm-delete-key\"><a href=\"#vm-delete-key\" class=\"headerlink\" title=\"vm.$delete( key )\"></a>vm.$delete( key )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} key</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Delete a root level property on the Vue instance (and also its <code>$data</code>). Forces a digest cycle. Not recommended.</p>\n</li>\n</ul>\n<h3 id=\"vm-eval-expression\"><a href=\"#vm-eval-expression\" class=\"headerlink\" title=\"vm.$eval( expression )\"></a>vm.$eval( expression )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} expression</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Evaluate a valid binding expression on the current instance. The expression can also contain filters.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// assuming vm.msg = 'hello'</span></div><div class=\"line\">vm.$<span class=\"built_in\">eval</span>(<span class=\"string\">'msg | uppercase'</span>) <span class=\"comment\">// -&gt; 'HELLO'</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"vm-interpolate-templateString\"><a href=\"#vm-interpolate-templateString\" class=\"headerlink\" title=\"vm.$interpolate( templateString )\"></a>vm.$interpolate( templateString )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} templateString</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Evaluate a piece of template string containing mustache interpolations. Note that this method simply performs string interpolation; attribute directives are ignored.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// assuming vm.msg = 'hello'</span></div><div class=\"line\">vm.$interpolate(<span class=\"string\">'&#123;&#123;msg&#125;&#125; world!'</span>) <span class=\"comment\">// -&gt; 'hello world!'</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"vm-log-keypath\"><a href=\"#vm-log-keypath\" class=\"headerlink\" title=\"vm.$log( [keypath] )\"></a>vm.$log( [keypath] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} [keypath]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Log the current instance data as a plain object, which is more inspection-friendly than a bunch of getter/setters. Also accepts an optional key.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">vm.$log() <span class=\"comment\">// logs entire ViewModel data</span></div><div class=\"line\">vm.$log(<span class=\"string\">'item'</span>) <span class=\"comment\">// logs vm.item</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Instance-Methods-Events\"><a href=\"#Instance-Methods-Events\" class=\"headerlink\" title=\"Instance Methods / Events\"></a>Instance Methods / Events</h2><h3 id=\"vm-on-event-callback\"><a href=\"#vm-on-event-callback\" class=\"headerlink\" title=\"vm.$on( event, callback )\"></a>vm.$on( event, callback )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} event</code></li>\n<li><code>{Function} callback</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Listen for a custom event on the current vm. Events can be triggered by <code>vm.$emit</code>, <code>vm.$dispatch</code> or <code>vm.$broadcast</code>. The callback will receive all the additional arguments passed into these event-triggering methods.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">vm.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">msg</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(msg)</div><div class=\"line\">&#125;)</div><div class=\"line\">vm.$emit(<span class=\"string\">'test'</span>, <span class=\"string\">'hi'</span>)</div><div class=\"line\"><span class=\"comment\">// -&gt; \"hi\"</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"vm-once-event-callback\"><a href=\"#vm-once-event-callback\" class=\"headerlink\" title=\"vm.$once( event, callback )\"></a>vm.$once( event, callback )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} event</code></li>\n<li><code>{Function} callback</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Listen for a custom event, but only once. The listener will be removed once it triggers for the first time.</p>\n</li>\n</ul>\n<h3 id=\"vm-off-event-callback\"><a href=\"#vm-off-event-callback\" class=\"headerlink\" title=\"vm.$off( [event, callback] )\"></a>vm.$off( [event, callback] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} [event]</code></li>\n<li><code>{Function} [callback]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Remove event listener(s).</p>\n<ul>\n<li><p>If no arguments are provided, remove all event listeners;</p>\n</li>\n<li><p>If only the event is provided, remove all listeners for that event;</p>\n</li>\n<li><p>If both event and callback are given, remove the listener for that specific callback only.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"vm-emit-event-…args\"><a href=\"#vm-emit-event-…args\" class=\"headerlink\" title=\"vm.$emit( event, […args] )\"></a>vm.$emit( event, […args] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} event</code></li>\n<li><code>[...args]</code></li>\n</ul>\n<p>Trigger an event on the current instance. Any additional arguments will be passed into the listener’s callback function.</p>\n</li>\n</ul>\n<h3 id=\"vm-dispatch-event-…args\"><a href=\"#vm-dispatch-event-…args\" class=\"headerlink\" title=\"vm.$dispatch( event, […args] )\"></a>vm.$dispatch( event, […args] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} event</code></li>\n<li><code>[...args]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Dispatch an event, first triggering it on the instance itself, and then propagates upward along the parent chain. The propagation stops when it triggers a parent event listener, unless that listener returns <code>true</code>. Any additional arguments will be passed into the listener’s callback function.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// create a parent chain</span></div><div class=\"line\"><span class=\"keyword\">var</span> parent = <span class=\"keyword\">new</span> Vue()</div><div class=\"line\"><span class=\"keyword\">var</span> child1 = <span class=\"keyword\">new</span> Vue(&#123; parent: parent &#125;)</div><div class=\"line\"><span class=\"keyword\">var</span> child2 = <span class=\"keyword\">new</span> Vue(&#123; parent: child1 &#125;)</div><div class=\"line\"></div><div class=\"line\">parent.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'parent notified'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\">child1.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'child1 notified'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\">child2.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'child2 notified'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\">child2.$dispatch(<span class=\"string\">'test'</span>)</div><div class=\"line\"><span class=\"comment\">// -&gt; \"child2 notified\"</span></div><div class=\"line\"><span class=\"comment\">// -&gt; \"child1 notified\"</span></div><div class=\"line\"><span class=\"comment\">// parent is NOT notified, because child1 didn't return</span></div><div class=\"line\"><span class=\"comment\">// true in its callback</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html#Parent-Child_Communication\">Parent-Child Communication</a></p>\n</li>\n</ul>\n<h3 id=\"vm-broadcast-event-…args\"><a href=\"#vm-broadcast-event-…args\" class=\"headerlink\" title=\"vm.$broadcast( event, […args] )\"></a>vm.$broadcast( event, […args] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} event</code></li>\n<li><code>[...args]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Broadcast an event that propagates downward to all descendants of the current instance. Since the descendants expand into multiple sub-trees, the event propagation will follow many different “paths”. The propagation for each path will stop when a listener callback is fired along that path, unless the callback returns <code>true</code>.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> parent = <span class=\"keyword\">new</span> Vue()</div><div class=\"line\"><span class=\"comment\">// child1 and child2 are siblings</span></div><div class=\"line\"><span class=\"keyword\">var</span> child1 = <span class=\"keyword\">new</span> Vue(&#123; parent: parent &#125;)</div><div class=\"line\"><span class=\"keyword\">var</span> child2 = <span class=\"keyword\">new</span> Vue(&#123; parent: parent &#125;)</div><div class=\"line\"><span class=\"comment\">// child3 is nested under child2</span></div><div class=\"line\"><span class=\"keyword\">var</span> child3 = <span class=\"keyword\">new</span> Vue(&#123; parent: child2 &#125;)</div><div class=\"line\"></div><div class=\"line\">child1.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'child1 notified'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\">child2.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'child2 notified'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\">child3.$on(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'child3 notified'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\">parent.$broadcast(<span class=\"string\">'test'</span>)</div><div class=\"line\"><span class=\"comment\">// -&gt; \"child1 notified\"</span></div><div class=\"line\"><span class=\"comment\">// -&gt; \"child2 notified\"</span></div><div class=\"line\"><span class=\"comment\">// child3 is NOT notified, because child2 didn't return</span></div><div class=\"line\"><span class=\"comment\">// true in its callback</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Instance-Methods-DOM\"><a href=\"#Instance-Methods-DOM\" class=\"headerlink\" title=\"Instance Methods / DOM\"></a>Instance Methods / DOM</h2><h3 id=\"vm-appendTo-elementOrSelector-callback\"><a href=\"#vm-appendTo-elementOrSelector-callback\" class=\"headerlink\" title=\"vm.$appendTo( elementOrSelector, [callback] )\"></a>vm.$appendTo( elementOrSelector, [callback] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Element|String} elementOrSelector</code></li>\n<li><code>{Function} [callback]</code></li>\n</ul>\n</li>\n<li><p><strong>Returns:</strong> <code>vm</code> - the instance itself</p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Append the Vue instance’s DOM element or fragment to target element. The target can be either an element or a querySelector string. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).</p>\n</li>\n</ul>\n<h3 id=\"vm-before-elementOrSelector-callback\"><a href=\"#vm-before-elementOrSelector-callback\" class=\"headerlink\" title=\"vm.$before( elementOrSelector, [callback] )\"></a>vm.$before( elementOrSelector, [callback] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Element|String} elementOrSelector</code></li>\n<li><code>{Function} [callback]</code></li>\n</ul>\n</li>\n<li><p><strong>Returns:</strong> <code>vm</code> - the instance itself</p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Insert the Vue instance’s DOM element or fragment before target element. The target can be either an element or a querySelector string. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).</p>\n</li>\n</ul>\n<h3 id=\"vm-after-elementOrSelector-callback\"><a href=\"#vm-after-elementOrSelector-callback\" class=\"headerlink\" title=\"vm.$after( elementOrSelector, [callback] )\"></a>vm.$after( elementOrSelector, [callback] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Element|String} elementOrSelector</code></li>\n<li><code>{Function} [callback]</code></li>\n</ul>\n</li>\n<li><p><strong>Returns:</strong> <code>vm</code> - the instance itself</p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Insert the Vue instance’s DOM element or fragment after target element. The target can be either an element or a querySelector string. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).</p>\n</li>\n</ul>\n<h3 id=\"vm-remove-callback\"><a href=\"#vm-remove-callback\" class=\"headerlink\" title=\"vm.$remove( [callback] )\"></a>vm.$remove( [callback] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Function} [callback]</code></li>\n</ul>\n</li>\n<li><p><strong>Returns:</strong> <code>vm</code> - the instance itself</p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Remove the Vue instance’s DOM element or fragment from the DOM. This method will trigger transitions if present. The callback is fired after the transition has completed (or immediately if no transition has been triggered).</p>\n</li>\n</ul>\n<h3 id=\"vm-nextTick-callback\"><a href=\"#vm-nextTick-callback\" class=\"headerlink\" title=\"vm.$nextTick( callback )\"></a>vm.$nextTick( callback )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Function} [callback]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Defer the callback to be executed after the next DOM update cycle. Use it immediately after you’ve changed some data to wait for the DOM update. This is the same as the global <code>Vue.nextTick</code>, except that the callback’s <code>this</code> context is automatically bound to the instance calling this method.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    <span class=\"comment\">// ...</span></div><div class=\"line\">    example: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"comment\">// modify data</span></div><div class=\"line\">      <span class=\"keyword\">this</span>.message = <span class=\"string\">'changed'</span></div><div class=\"line\">      <span class=\"comment\">// DOM is not updated yet</span></div><div class=\"line\">      <span class=\"keyword\">this</span>.$nextTick(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// DOM is now updated</span></div><div class=\"line\">        <span class=\"comment\">// `this` is bound to the current instance</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.doSomethingElse()</div><div class=\"line\">      &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"#Vue-nextTick\">Vue.nextTick</a></li>\n<li><a href=\"/guide/reactivity.html#Async_Update_Queue\">Async Update Queue</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Instance-Methods-Lifecycle\"><a href=\"#Instance-Methods-Lifecycle\" class=\"headerlink\" title=\"Instance Methods / Lifecycle\"></a>Instance Methods / Lifecycle</h2><h3 id=\"vm-mount-elementOrSelector\"><a href=\"#vm-mount-elementOrSelector\" class=\"headerlink\" title=\"vm.$mount( [elementOrSelector] )\"></a>vm.$mount( [elementOrSelector] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Element|String} [elementOrSelector]</code></li>\n</ul>\n</li>\n<li><p><strong>Returns:</strong> <code>vm</code> - the instance itself</p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>If a Vue instance didn’t receive the <code>el</code> option at instantiation, it will be in “unmounted” state, without an associated DOM element or fragment. <code>vm.$mount()</code> can be used to manually start the mounting/compilation of an unmounted Vue instance.</p>\n<p>If no argument is provided, the template will be created as an out-of-document fragment, and you will have to use other DOM instance methods to insert it into the document yourself. If <code>replace</code> option is set to <code>false</code>, then an empty <code>&lt;div&gt;</code> will be automatically created as the wrapper element.</p>\n<p>Calling <code>$mount()</code> on an already mounted instance will have no effect. The method returns the instance itself so you can chain other instance methods after it.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> MyComponent = Vue.extend(&#123;</div><div class=\"line\">  template: <span class=\"string\">'&lt;div&gt;Hello!&lt;/div&gt;'</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// create and mount to #app (will replace #app)</span></div><div class=\"line\"><span class=\"keyword\">new</span> MyComponent().$mount(<span class=\"string\">'#app'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// the above is the same as:</span></div><div class=\"line\"><span class=\"keyword\">new</span> MyComponent(&#123; el: <span class=\"string\">'#app'</span> &#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// or, compile off-document and append afterwards:</span></div><div class=\"line\"><span class=\"keyword\">new</span> MyComponent().$mount().$appendTo(<span class=\"string\">'#container'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h3 id=\"vm-destroy-remove\"><a href=\"#vm-destroy-remove\" class=\"headerlink\" title=\"vm.$destroy( [remove] )\"></a>vm.$destroy( [remove] )</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Boolean} [remove] - default: false</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Completely destroy a vm. Clean up its connections with other existing vms, unbind all its directives, turn off all event listeners and, if the <code>remove</code> argument is true, remove its associated DOM element or fragment from the DOM.</p>\n<p>Triggers the <code>beforeDestroy</code> and <code>destroyed</code> hooks.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/instance.html#Lifecycle_Diagram\">Lifecycle Diagram</a></p>\n</li>\n</ul>\n<h2 id=\"Directives\"><a href=\"#Directives\" class=\"headerlink\" title=\"Directives\"></a>Directives</h2><h3 id=\"v-text\"><a href=\"#v-text\" class=\"headerlink\" title=\"v-text\"></a>v-text</h3><ul>\n<li><p><strong>Expects:</strong> <code>String</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Updates the element’s <code>textContent</code>.</p>\n<p>Internally, <code>{{ Mustache }}</code> interpolations are also compiled as a <code>v-text</code> directive on a textNode. The directive form requires a wrapper element, but offers slightly better performance and avoids FOUC (Flash of Uncompiled Content).</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-text</span>=<span class=\"string\">\"msg\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- same as --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"v-html\"><a href=\"#v-html\" class=\"headerlink\" title=\"v-html\"></a>v-html</h3><ul>\n<li><p><strong>Expects:</strong> <code>String</code></p>\n</li>\n<li><p><strong>Details:</strong></p>\n<p>Updates the element’s <code>innerHTML</code>. The contents are inserted as plain HTML - data bindings are ignored. If you need to reuse template pieces, you should use <a href=\"#partial\">partials</a>.</p>\n<p>Internally, <code>{{{ Mustache }}}</code> interpolations are also compiled as a <code>v-html</code> directive using anchor nodes. The directive form requires a wrapper element, but offers slightly better performance and avoids FOUC (Flash of Uncompiled Content).</p>\n<p class=\"tip\">Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to <a href=\"https://en.wikipedia.org/wiki/Cross-site_scripting\">XSS attacks</a>. Only use <code>v-html</code> on trusted content and <strong>never</strong> on user-provided content.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-html</span>=<span class=\"string\">\"html\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- same as --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123;&#123;html&#125;&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"v-if\"><a href=\"#v-if\" class=\"headerlink\" title=\"v-if\"></a>v-if</h3><ul>\n<li><p><strong>Expects:</strong> <code>*</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Conditionally render the element based on the truthy-ness of the expression value. The element and its contained data bindings / components are destroyed and re-constructed during toggles. If the element is a <code>&lt;template&gt;</code> element, its content will be extracted as the conditional block.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/conditional.html\">Conditional Rendering</a></p>\n</li>\n</ul>\n<h3 id=\"v-show\"><a href=\"#v-show\" class=\"headerlink\" title=\"v-show\"></a>v-show</h3><ul>\n<li><p><strong>Expects:</strong> <code>*</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Toggle’s the element’s <code>display</code> CSS property based on the truthy-ness of the expression value. Triggers transitions if present.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/conditional.html#v-show\">Conditional Rendering - v-show</a></p>\n</li>\n</ul>\n<h3 id=\"v-else\"><a href=\"#v-else\" class=\"headerlink\" title=\"v-else\"></a>v-else</h3><ul>\n<li><p><strong>Does not expect expression</strong></p>\n</li>\n<li><p><strong>Restriction:</strong> previous sibling element must have <code>v-if</code> or <code>v-show</code>.</p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Denote the “else block” for <code>v-if</code> and <code>v-show</code>.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"Math.random() &gt; 0.5\"</span>&gt;</span></div><div class=\"line\">  Sorry</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span>&gt;</span></div><div class=\"line\">  Not sorry</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/conditional.html#v-else\">Conditional Rendering - v-else</a></p>\n</li>\n</ul>\n<h3 id=\"v-for\"><a href=\"#v-for\" class=\"headerlink\" title=\"v-for\"></a>v-for</h3><ul>\n<li><p><strong>Expects:</strong> <code>Array | Object | Number | String</code></p>\n</li>\n<li><p><strong>Param Attributes:</strong></p>\n<ul>\n<li><a href=\"/guide/list.html#track-by\"><code>track-by</code></a></li>\n<li><a href=\"/guide/transitions.html#Staggering_Transitions\"><code>stagger</code></a></li>\n<li><a href=\"/guide/transitions.html#Staggering_Transitions\"><code>enter-stagger</code></a></li>\n<li><a href=\"/guide/transitions.html#Staggering_Transitions\"><code>leave-stagger</code></a></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Render the element or template block multiple times based on the source data. The expression must use the special syntax to provide an alias for the current element being iterated on:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in items\"</span>&gt;</span></div><div class=\"line\">  &#123;&#123; item.text &#125;&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Alternatively, you can also specify an alias for the index (or the key if used on an Object):</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(index, item) in items\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(key, val) in object\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>The detailed usage for <code>v-for</code> is explained in the guide section linked below.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/list.html\">List Rendering</a>.</p>\n</li>\n</ul>\n<h3 id=\"v-on\"><a href=\"#v-on\" class=\"headerlink\" title=\"v-on\"></a>v-on</h3><ul>\n<li><p><strong>Shorthand:</strong> <code>@</code></p>\n</li>\n<li><p><strong>Expects:</strong> <code>Function | Inline Statement</code></p>\n</li>\n<li><p><strong>Argument:</strong> <code>event (required)</code></p>\n</li>\n<li><p><strong>Modifiers:</strong></p>\n<ul>\n<li><code>.stop</code> - call <code>event.stopPropagation()</code>.</li>\n<li><code>.prevent</code> - call <code>event.preventDefault()</code>.</li>\n<li><code>.{keyCode | keyAlias}</code> - only trigger handler on certain keys.</li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Attaches an event listener to the element. The event type is denoted by the argument. The expression can either be a method name or an inline statement, or simply omitted when there are modifiers present.</p>\n<p>When used on a normal element, it listens to <strong>native DOM events</strong> only. When used on a custom element component, it also listens to <strong>custom events</strong> emitted on that child component.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- method handler --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"doThis\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- inline statement --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"doThat('hello')\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- shorthand --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"doThis\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- stop propagation --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.stop</span>=<span class=\"string\">\"doThis\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- prevent default --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"doThis\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- prevent default without expression --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> @<span class=\"attr\">submit.prevent</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- chain modifiers --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.stop.prevent</span>=<span class=\"string\">\"doThis\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- key modifier using keyAlias --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> @<span class=\"attr\">keyup.enter</span>=<span class=\"string\">\"onEnter\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- key modifier using keyCode --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> @<span class=\"attr\">keyup.13</span>=<span class=\"string\">\"onEnter\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Listening to custom events on a child component (the handler is called when “my-event” is emitted on the child):</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span> @<span class=\"attr\">my-event</span>=<span class=\"string\">\"handleThis\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/events.html\">Methods and Event Handling</a></p>\n</li>\n</ul>\n<h3 id=\"v-bind\"><a href=\"#v-bind\" class=\"headerlink\" title=\"v-bind\"></a>v-bind</h3><ul>\n<li><p><strong>Shorthand:</strong> <code>:</code></p>\n</li>\n<li><p><strong>Expects:</strong> <code>* (with argument) | Object (without argument)</code></p>\n</li>\n<li><p><strong>Argument:</strong> <code>attrOrProp (optional)</code></p>\n</li>\n<li><p><strong>Modifiers:</strong></p>\n<ul>\n<li><code>.sync</code> - make the binding two-way. Only respected for prop bindings.</li>\n<li><code>.once</code> - make the binding one-time. Only respected for prop bindings.</li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Dynamically bind one or more attributes, or a component prop to an expression.</p>\n<p>When used to bind the <code>class</code> or <code>style</code> attribute, it supports additional value types such as Array or Objects. See linked guide section below for more details.</p>\n<p>When used for prop binding, the prop must be properly declared in the child component. Prop bindings can specify a different binding type using one of the modifiers.</p>\n<p>When used without an argument, can be used to bind an object containing attribute name-value pairs. Note in this mode <code>class</code> and <code>style</code> does not support Array or Objects.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- bind an attribute --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">v-bind:src</span>=<span class=\"string\">\"imageSrc\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- shorthand --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">\"imageSrc\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- class binding --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123; red: isRed &#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"[classA, classB]\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- style binding --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:style</span>=<span class=\"string\">\"&#123; fontSize: size + 'px' &#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:style</span>=<span class=\"string\">\"[styleObjectA, styleObjectB]\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- binding an object of attributes --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-bind</span>=<span class=\"string\">\"&#123; id: someProp, 'other-attr': otherProp &#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- prop binding. \"prop\" must be declared in my-component. --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span> <span class=\"attr\">:prop</span>=<span class=\"string\">\"someThing\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- two-way prop binding --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span> <span class=\"attr\">:prop.sync</span>=<span class=\"string\">\"someThing\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- one-time prop binding --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-component</span> <span class=\"attr\">:prop.once</span>=<span class=\"string\">\"someThing\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-component</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"/guide/class-and-style.html\">Class and Style Bindings</a></li>\n<li><a href=\"/guide/components.html#Props\">Component Props</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"v-model\"><a href=\"#v-model\" class=\"headerlink\" title=\"v-model\"></a>v-model</h3><ul>\n<li><p><strong>Expects:</strong> varies based on input type</p>\n</li>\n<li><p><strong>Limited to:</strong></p>\n<ul>\n<li><code>&lt;input&gt;</code></li>\n<li><code>&lt;select&gt;</code></li>\n<li><code>&lt;textarea&gt;</code></li>\n</ul>\n</li>\n<li><p><strong>Param Attributes:</strong></p>\n<ul>\n<li><a href=\"/guide/forms.html#lazy\"><code>lazy</code></a></li>\n<li><a href=\"/guide/forms.html#number\"><code>number</code></a></li>\n<li><a href=\"/guide/forms.html#debounce\"><code>debounce</code></a></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Create a two-way binding on a form input element. For detailed usage, see guide section linked below.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/forms.html\">Form Input Bindings</a></p>\n</li>\n</ul>\n<h3 id=\"v-ref\"><a href=\"#v-ref\" class=\"headerlink\" title=\"v-ref\"></a>v-ref</h3><ul>\n<li><p><strong>Does not expect expression</strong></p>\n</li>\n<li><p><strong>Limited to:</strong> child components</p>\n</li>\n<li><p><strong>Argument:</strong> <code>id (required)</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register a reference to a child component on its parent for direct access. Does not expect an expression. Must provide an argument as the id to register with. The component instance will be accessible on its parent’s <code>$refs</code> object.</p>\n<p>When used on a component together with <code>v-for</code>, the registered value will be an Array containing all the child component instances corresponding to the Array they are bound to. If the data source for <code>v-for</code> is an Object, the registered value will be an Object containing key-instance pairs mirroring the source Object.</p>\n</li>\n<li><p><strong>Note:</strong></p>\n<p>Because HTML is case-insensitive, camelCase usage like <code>v-ref:someRef</code> will be converted to all lowercase. You can use <code>v-ref:some-ref</code> which properly sets <code>this.$refs.someRef</code>.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp</span> <span class=\"attr\">v-ref:child</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp</span> <span class=\"attr\">v-ref:some-child</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// access from parent:</span></div><div class=\"line\"><span class=\"keyword\">this</span>.$refs.child</div><div class=\"line\"><span class=\"keyword\">this</span>.$refs.someChild</div></pre></td></tr></table></figure>\n<p>With <code>v-for</code>:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp</span> <span class=\"attr\">v-ref:list</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// this will be an array in parent</span></div><div class=\"line\"><span class=\"keyword\">this</span>.$refs.list</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html#Child_Component_Refs\">Child Component Refs</a></p>\n</li>\n</ul>\n<h3 id=\"v-el\"><a href=\"#v-el\" class=\"headerlink\" title=\"v-el\"></a>v-el</h3><ul>\n<li><p><strong>Does not expect expression</strong></p>\n</li>\n<li><p><strong>Argument:</strong> <code>id (required)</code></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Register a reference to a DOM element on its owner Vue instance’s <code>$els</code> object for easier access.</p>\n</li>\n<li><p><strong>Note:</strong></p>\n<p>Because HTML is case-insensitive, camelCase usage like <code>v-el:someEl</code> will be converted to all lowercase. You can use <code>v-el:some-el</code> which properly sets <code>this.$els.someEl</code>.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-el:msg</span>&gt;</span>hello<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-el:other-msg</span>&gt;</span>world<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.$els.msg.textContent <span class=\"comment\">// -&gt; \"hello\"</span></div><div class=\"line\"><span class=\"keyword\">this</span>.$els.otherMsg.textContent <span class=\"comment\">// -&gt; \"world\"</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"v-pre\"><a href=\"#v-pre\" class=\"headerlink\" title=\"v-pre\"></a>v-pre</h3><ul>\n<li><p><strong>Does not expect expression</strong></p>\n</li>\n<li><p><strong>Usage</strong></p>\n<p>Skip compilation for this element and all its children. You can use this for displaying raw mustache tags. Skipping large numbers of nodes with no directives on them can also speed up compilation.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-pre</span>&gt;</span>&#123;&#123; this will not be compiled &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"v-cloak\"><a href=\"#v-cloak\" class=\"headerlink\" title=\"v-cloak\"></a>v-cloak</h3><ul>\n<li><p><strong>Does not expect expression</strong></p>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>This directive will remain on the element until the associated Vue instance finishes compilation. Combined with CSS rules such as <code>[v-cloak] { display: none }</code>, this directive can be used to hide un-compiled mustache bindings until the Vue instance is ready.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-attr\">[v-cloak]</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-cloak</span>&gt;</span></div><div class=\"line\">  &#123;&#123; message &#125;&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>The <code>&lt;div&gt;</code> will not be visible until the compilation is done.</p>\n</li>\n</ul>\n<h2 id=\"Special-Elements\"><a href=\"#Special-Elements\" class=\"headerlink\" title=\"Special Elements\"></a>Special Elements</h2><h3 id=\"component\"><a href=\"#component\" class=\"headerlink\" title=\"component\"></a>component</h3><ul>\n<li><p><strong>Attributes:</strong></p>\n<ul>\n<li><code>is</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Alternative syntax for invoking components. Primarily used for dynamic components with the <code>is</code> attribute:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- a dynamic component controlled by --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- the `componentId` property on the vm --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">:is</span>=<span class=\"string\">\"componentId\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html#Dynamic_Components\">Dynamic Components</a></p>\n</li>\n</ul>\n<h3 id=\"slot\"><a href=\"#slot\" class=\"headerlink\" title=\"slot\"></a>slot</h3><ul>\n<li><p><strong>Attributes:</strong></p>\n<ul>\n<li><code>name</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p><code>&lt;slot&gt;</code> elements serve as content distribution outlets in component templates. The slot element itself will be replaced.</p>\n<p>A slot with the <code>name</code> attribute is called a named slot. A named slot will distribute content with a <code>slot</code> attribute that matches its name.</p>\n<p>For detailed usage, see the guide section linked below.</p>\n</li>\n<li><p><strong>See also:</strong> <a href=\"/guide/components.html#Content_Distribution_with_Slots\">Content Distribution with Slots</a></p>\n</li>\n</ul>\n<h3 id=\"partial\"><a href=\"#partial\" class=\"headerlink\" title=\"partial\"></a>partial</h3><ul>\n<li><p><strong>Attributes:</strong></p>\n<ul>\n<li><code>name</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p><code>&lt;partial&gt;</code> elements serve as outlets for registered template partials. Partial contents are also compiled by Vue when inserted. The <code>&lt;partial&gt;</code> element itself will be replaced. It requires a <code>name</code> attribute which will be used to resolve the partial’s content.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// registering a partial</span></div><div class=\"line\">Vue.partial(<span class=\"string\">'my-partial'</span>, <span class=\"string\">'&lt;p&gt;This is a partial! &#123;&#123;msg&#125;&#125;&lt;/p&gt;'</span>)</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- a static partial --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">partial</span> <span class=\"attr\">name</span>=<span class=\"string\">\"my-partial\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">partial</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- a dynamic partial --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- renders partial with id === vm.partialId --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">partial</span> <span class=\"attr\">v-bind:name</span>=<span class=\"string\">\"partialId\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">partial</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!-- dynamic partial using v-bind shorthand --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">partial</span> <span class=\"attr\">:name</span>=<span class=\"string\">\"partialId\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">partial</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Filters\"><a href=\"#Filters\" class=\"headerlink\" title=\"Filters\"></a>Filters</h2><h3 id=\"capitalize\"><a href=\"#capitalize\" class=\"headerlink\" title=\"capitalize\"></a>capitalize</h3><ul>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123; msg | capitalize &#125;&#125;</div></pre></td></tr></table></figure>\n<p><em>‘abc’ =&gt; ‘Abc’</em></p>\n</li>\n</ul>\n<h3 id=\"uppercase\"><a href=\"#uppercase\" class=\"headerlink\" title=\"uppercase\"></a>uppercase</h3><ul>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123; msg | uppercase &#125;&#125;</div></pre></td></tr></table></figure>\n<p><em>‘abc’ =&gt; ‘ABC’</em></p>\n</li>\n</ul>\n<h3 id=\"lowercase\"><a href=\"#lowercase\" class=\"headerlink\" title=\"lowercase\"></a>lowercase</h3><ul>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123; msg | lowercase &#125;&#125;</div></pre></td></tr></table></figure>\n<p><em>‘ABC’ =&gt; ‘abc’</em></p>\n</li>\n</ul>\n<h3 id=\"currency\"><a href=\"#currency\" class=\"headerlink\" title=\"currency\"></a>currency</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} [symbol] - default: &#39;$&#39;</code></li>\n</ul>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123; amount | currency &#125;&#125;</div></pre></td></tr></table></figure>\n<p><em>12345 =&gt; $12,345.00</em></p>\n<p>Use a different symbol:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123; amount | currency '£' &#125;&#125;</div></pre></td></tr></table></figure>\n<p><em>12345 =&gt; £12,345.00</em></p>\n</li>\n</ul>\n<h3 id=\"pluralize\"><a href=\"#pluralize\" class=\"headerlink\" title=\"pluralize\"></a>pluralize</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} single, [double, triple, ...]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Pluralizes the argument based on the filtered value. When there is exactly one argument, plural forms simply add an “s” at the end. When there are more than one argument, the arguments will be used as array of strings corresponding to the single, double, triple … forms of the word to be pluralized. When the number to be pluralized exceeds the length of the arguments, it will use the last entry in the array.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123;count&#125;&#125; &#123;&#123;count | pluralize 'item'&#125;&#125;</div></pre></td></tr></table></figure>\n<p><em>1 =&gt; ‘1 item’</em><br><em>2 =&gt; ‘2 items’</em></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;&#123;date&#125;&#125;&#123;&#123;date | pluralize 'st' 'nd' 'rd' 'th'&#125;&#125;</div></pre></td></tr></table></figure>\n<p>Will result in:</p>\n<p><em>1 =&gt; ‘1st’</em><br><em>2 =&gt; ‘2nd’</em><br><em>3 =&gt; ‘3rd’</em><br><em>4 =&gt; ‘4th’</em><br><em>5 =&gt; ‘5th’</em></p>\n</li>\n</ul>\n<h3 id=\"json\"><a href=\"#json\" class=\"headerlink\" title=\"json\"></a>json</h3><ul>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Number} [indent] - default: 2</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Output the result of calling <code>JSON.stringify()</code> on the value instead of outputting the <code>toString()</code> value (e.g. <code>[object Object]</code>).</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<p>Print an object with 4-space indent:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">pre</span>&gt;</span>&#123;&#123; nestedObject | json 4 &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"debounce\"><a href=\"#debounce\" class=\"headerlink\" title=\"debounce\"></a>debounce</h3><ul>\n<li><p><strong>Limited to:</strong> directives that expect <code>Function</code> values, e.g. <code>v-on</code></p>\n</li>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Number} [wait] - default: 300</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Wrap the handler to debounce it for <code>x</code> milliseconds, where <code>x</code> is the argument. Default wait time is 300ms. A debounced handler will be delayed until at least <code>x</code> ms has passed after the call moment; if the handler is called again before the delay period, the delay period is reset to <code>x</code> ms.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> @<span class=\"attr\">keyup</span>=<span class=\"string\">\"onKeyup | debounce 500\"</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"limitBy\"><a href=\"#limitBy\" class=\"headerlink\" title=\"limitBy\"></a>limitBy</h3><ul>\n<li><p><strong>Limited to:</strong> directives that expect <code>Array</code> values, e.g. <code>v-for</code></p>\n</li>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{Number} limit</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Limit the array to the first N items, as specified by the argument.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- only display first 10 items --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in items | limitBy 10\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"filterBy\"><a href=\"#filterBy\" class=\"headerlink\" title=\"filterBy\"></a>filterBy</h3><ul>\n<li><p><strong>Limited to:</strong> directives that expect <code>Array</code> values, e.g. <code>v-for</code></p>\n</li>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String | Function} targetStringOrFunction</code></li>\n<li><code>&quot;in&quot; (optional delimiter)</code></li>\n<li><code>{String} [...searchKeys]</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Return a filtered version of the source Array. The first argument can either be a string or a function.</p>\n<p>When the first argument is a string, it will be used as the target string to search for in each element of the Array:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in items | filterBy 'hello'\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>In the above example, only items that contain the target string <code>&quot;hello&quot;</code> will be displayed.</p>\n<p>If the item is an object, the filter will recursively search every nested property of the object for the target string. To narrow down the search scope, additional search keys can be specified:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | filterBy 'Jack' in 'name'\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>In the above example, the filter will only search for <code>&quot;Jack&quot;</code> in the <code>name</code> field of each user object. <strong>It is a good idea to always limit the search scope for better performance.</strong></p>\n<p>The examples above are using static arguments - we can, of course, use dynamic arguments as target string or search keys. Combined with <code>v-model</code> we can easily implement type-ahead filtering:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"filter-by-example\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"name\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | filterBy name in 'name'\"</span>&gt;</span></div><div class=\"line\">      &#123;&#123; user.name &#125;&#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#filter-by-example'</span>,</div><div class=\"line\">  data: &#123;</div><div class=\"line\">    name: <span class=\"string\">''</span>,</div><div class=\"line\">    users: [</div><div class=\"line\">      &#123; name: <span class=\"string\">'Bruce'</span> &#125;,</div><div class=\"line\">      &#123; name: <span class=\"string\">'Chuck'</span> &#125;,</div><div class=\"line\">      &#123; name: <span class=\"string\">'Jackie'</span> &#125;</div><div class=\"line\">    ]</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n\n  <div id=\"filter-by-example\" class=\"demo\">\n    <input v-model=\"name\">\n    <ul>\n      <li v-for=\"user in users | filterBy name in 'name'\">\n        {{ user.name }}\n      </li>\n    </ul>\n  </div>\n  <script>\n  new Vue({\n    el: '#filter-by-example',\n    data: {\n      name: '',\n      users: [{ name: 'Bruce' }, { name: 'Chuck' }, { name: 'Jackie' }]\n    }\n  })\n  </script>\n  \n</li>\n<li><p><strong>Additional Examples:</strong></p>\n<p>Multiple search keys:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | filterBy searchText in 'name' 'phone'\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Multiple search keys with a dynamic Array argument:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- fields = ['fieldA', 'fieldB'] --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | filterBy searchText in fields\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Use a custom filter function:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | filterBy myCustomFilterFunction\"</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"orderBy\"><a href=\"#orderBy\" class=\"headerlink\" title=\"orderBy\"></a>orderBy</h3><ul>\n<li><p><strong>Limited to:</strong> directives that expect <code>Array</code> values, e.g. <code>v-for</code></p>\n</li>\n<li><p><strong>Arguments:</strong></p>\n<ul>\n<li><code>{String} sortKey</code></li>\n<li><code>{String} [order] - default: 1</code></li>\n</ul>\n</li>\n<li><p><strong>Usage:</strong></p>\n<p>Return a sorted version of the source Array. The <code>sortKey</code> is the key to use for the sorting. The optional <code>order</code> argument specifies whether the result should be in ascending (<code>order &gt;= 0</code>) or descending (<code>order &lt; 0</code>) order.</p>\n<p>For arrays of primitive values, any truthy <code>sortKey</code> will work.</p>\n</li>\n<li><p><strong>Example:</strong></p>\n<p>Sort users by name:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | orderBy 'name'\"</span>&gt;</span></div><div class=\"line\">    &#123;&#123; user.name &#125;&#125;</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>In descending order:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | orderBy 'name' -1\"</span>&gt;</span></div><div class=\"line\">    &#123;&#123; user.name &#125;&#125;</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Sort primitive values:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"n in numbers | orderBy true\"</span>&gt;</span></div><div class=\"line\">    &#123;&#123; n &#125;&#125;</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Dynamic sort order:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"orderby-example\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"order = order * -1\"</span>&gt;</span>Reverse Sort Order<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"user in users | orderBy 'name' order\"</span>&gt;</span></div><div class=\"line\">      &#123;&#123; user.name &#125;&#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#orderby-example'</span>,</div><div class=\"line\">  data: &#123;</div><div class=\"line\">    order: <span class=\"number\">1</span>,</div><div class=\"line\">    users: [&#123; name: <span class=\"string\">'Bruce'</span> &#125;, &#123; name: <span class=\"string\">'Chuck'</span> &#125;, &#123; name: <span class=\"string\">'Jackie'</span> &#125;]</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n\n  <div id=\"orderby-example\" class=\"demo\">\n    <button @click=\"order = order * -1\">Reverse Sort Order</button>\n    <ul>\n      <li v-for=\"user in users | orderBy 'name' order\">\n        {{ user.name }}\n      </li>\n    </ul>\n  </div>\n  <script>\n  new Vue({\n    el: '#orderby-example',\n    data: {\n      order: 1,\n      users: [{ name: 'Bruce' }, { name: 'Chuck' }, { name: 'Jackie' }]\n    }\n  })\n  </script>\n  \n</li>\n</ul>\n"},{"title":"GitHub Commits","type":"examples","order":1,"_content":"\n> This example fetches latest Vue.js commits data from GitHub's API and displays them as a list. You can switch between the master and dev branches.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/vaj48u3h/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","source":"examples/commits.md","raw":"---\ntitle: GitHub Commits\ntype: examples\norder: 1\n---\n\n> This example fetches latest Vue.js commits data from GitHub's API and displays them as a list. You can switch between the master and dev branches.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/vaj48u3h/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"examples/commits.html","comments":1,"layout":"page","_id":"cit1gzc9b0005yzjx0z8bzqgb","content":"<blockquote>\n<p>This example fetches latest Vue.js commits data from GitHub’s API and displays them as a list. You can switch between the master and dev branches.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/vaj48u3h/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","excerpt":"","more":"<blockquote>\n<p>This example fetches latest Vue.js commits data from GitHub’s API and displays them as a list. You can switch between the master and dev branches.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/vaj48u3h/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n"},{"title":"Elastic Header","type":"examples","order":7,"_content":"\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/2eg8kbyk/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","source":"examples/elastic-header.md","raw":"---\ntitle: Elastic Header\ntype: examples\norder: 7\n---\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/2eg8kbyk/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"examples/elastic-header.html","comments":1,"layout":"page","_id":"cit1gzc9h0006yzjx4jvu5q7i","content":"<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/2eg8kbyk/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","excerpt":"","more":"<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/2eg8kbyk/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n"},{"title":"Firebase + Validation","type":"examples","order":2,"_content":"\n> This example uses [Firebase](https://www.firebase.com/) as the data persistence backend and syncs between clients in real time (you can try opening it in multiple browser tabs). In addition, it performs instant validation using computed properties and triggers CSS transitions when adding/removing items.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/2d3htmpr/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","source":"examples/firebase.md","raw":"---\ntitle: Firebase + Validation\ntype: examples\norder: 2\n---\n\n> This example uses [Firebase](https://www.firebase.com/) as the data persistence backend and syncs between clients in real time (you can try opening it in multiple browser tabs). In addition, it performs instant validation using computed properties and triggers CSS transitions when adding/removing items.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/2d3htmpr/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"examples/firebase.html","comments":1,"layout":"page","_id":"cit1gzc9n0007yzjxo302oent","content":"<blockquote>\n<p>This example uses <a href=\"https://www.firebase.com/\" target=\"_blank\" rel=\"external\">Firebase</a> as the data persistence backend and syncs between clients in real time (you can try opening it in multiple browser tabs). In addition, it performs instant validation using computed properties and triggers CSS transitions when adding/removing items.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/2d3htmpr/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","excerpt":"","more":"<blockquote>\n<p>This example uses <a href=\"https://www.firebase.com/\">Firebase</a> as the data persistence backend and syncs between clients in real time (you can try opening it in multiple browser tabs). In addition, it performs instant validation using computed properties and triggers CSS transitions when adding/removing items.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/2d3htmpr/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n"},{"title":"Grid Component","type":"examples","order":3,"_content":"\n> This is an example of creating a reusable grid component and using it with external data.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/m7sgaron/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","source":"examples/grid-component.md","raw":"---\ntitle: Grid Component\ntype: examples\norder: 3\n---\n\n> This is an example of creating a reusable grid component and using it with external data.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/m7sgaron/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"examples/grid-component.html","comments":1,"layout":"page","_id":"cit1gzcaa0008yzjx4x4neeq7","content":"<blockquote>\n<p>This is an example of creating a reusable grid component and using it with external data.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/m7sgaron/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","excerpt":"","more":"<blockquote>\n<p>This is an example of creating a reusable grid component and using it with external data.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/m7sgaron/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n"},{"title":"HackerNews Clone","type":"examples","order":10,"_content":"\n> This is a HackerNews clone built upon HN's official Firebase API, and using Webpack + vue-loader for the build setup.\n\n<div style=\"max-width:600px\">\n  <a href=\"http://vuejs.github.io/vue-hackernews\" target=\"_blank\"><img style=\"width:100%\" src=\"/images/hn.png\"></a>\n</div>\n\n> [[Source](https://github.com/vuejs/vue-hackernews)]\n","source":"examples/hackernews.md","raw":"---\ntitle: HackerNews Clone\ntype: examples\norder: 10\n---\n\n> This is a HackerNews clone built upon HN's official Firebase API, and using Webpack + vue-loader for the build setup.\n\n<div style=\"max-width:600px\">\n  <a href=\"http://vuejs.github.io/vue-hackernews\" target=\"_blank\"><img style=\"width:100%\" src=\"/images/hn.png\"></a>\n</div>\n\n> [[Source](https://github.com/vuejs/vue-hackernews)]\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"examples/hackernews.html","comments":1,"layout":"page","_id":"cit1gzcad0009yzjxbuwybafg","content":"<blockquote>\n<p>This is a HackerNews clone built upon HN’s official Firebase API, and using Webpack + vue-loader for the build setup.</p>\n</blockquote>\n<div style=\"max-width:600px\"><br>  <a href=\"http://vuejs.github.io/vue-hackernews\" target=\"_blank\"><img style=\"width:100%\" src=\"/images/hn.png\"></a><br></div>\n\n<blockquote>\n<p>[<a href=\"https://github.com/vuejs/vue-hackernews\" target=\"_blank\" rel=\"external\">Source</a>]</p>\n</blockquote>\n","excerpt":"","more":"<blockquote>\n<p>This is a HackerNews clone built upon HN’s official Firebase API, and using Webpack + vue-loader for the build setup.</p>\n</blockquote>\n<div style=\"max-width:600px\"><br>  <a href=\"http://vuejs.github.io/vue-hackernews\" target=\"_blank\"><img style=\"width:100%\" src=\"/images/hn.png\"></a><br></div>\n\n<blockquote>\n<p>[<a href=\"https://github.com/vuejs/vue-hackernews\">Source</a>]</p>\n</blockquote>\n"},{"title":"Markdown Editor","type":"examples","order":0,"_content":"\n> Dead simple Markdown editor.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/oe7axeab/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","source":"examples/index.md","raw":"---\ntitle: Markdown Editor\ntype: examples\norder: 0\n---\n\n> Dead simple Markdown editor.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/oe7axeab/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"examples/index.html","comments":1,"layout":"page","_id":"cit1gzcap000ayzjx9v2kskc8","content":"<blockquote>\n<p>Dead simple Markdown editor.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/oe7axeab/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","excerpt":"","more":"<blockquote>\n<p>Dead simple Markdown editor.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/oe7axeab/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n"},{"title":"Modal Component","type":"examples","order":6,"_content":"\n> Features used: component, prop passing, content insertion, transitions.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/msx42stu/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","source":"examples/modal.md","raw":"---\ntitle: Modal Component\ntype: examples\norder: 6\n---\n\n> Features used: component, prop passing, content insertion, transitions.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/msx42stu/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"examples/modal.html","comments":1,"layout":"page","_id":"cit1gzcat000byzjx3swkuglk","content":"<blockquote>\n<p>Features used: component, prop passing, content insertion, transitions.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/msx42stu/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","excerpt":"","more":"<blockquote>\n<p>Features used: component, prop passing, content insertion, transitions.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/msx42stu/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n"},{"title":"Custom Directive","type":"examples","order":8,"_content":"\n> In this example we are integrating a 3rd party jQuery plugin (select2) by wrapping it inside a custom directive.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/157m67zu/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","source":"examples/select2.md","raw":"---\ntitle: Custom Directive\ntype: examples\norder: 8\n---\n\n> In this example we are integrating a 3rd party jQuery plugin (select2) by wrapping it inside a custom directive.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/157m67zu/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"examples/select2.html","comments":1,"layout":"page","_id":"cit1gzcb2000cyzjxrci6ltgt","content":"<blockquote>\n<p>In this example we are integrating a 3rd party jQuery plugin (select2) by wrapping it inside a custom directive.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/157m67zu/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","excerpt":"","more":"<blockquote>\n<p>In this example we are integrating a 3rd party jQuery plugin (select2) by wrapping it inside a custom directive.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/157m67zu/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n"},{"title":"SVG Graph","type":"examples","order":5,"_content":"\n> This example showcases a combination of custom component, computed property, two-way binding and SVG support.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/tfpcsxgf/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","source":"examples/svg.md","raw":"---\ntitle: SVG Graph\ntype: examples\norder: 5\n---\n\n> This example showcases a combination of custom component, computed property, two-way binding and SVG support.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/tfpcsxgf/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"examples/svg.html","comments":1,"layout":"page","_id":"cit1gzcba000dyzjxjfxnmd5p","content":"<blockquote>\n<p>This example showcases a combination of custom component, computed property, two-way binding and SVG support.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/tfpcsxgf/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","excerpt":"","more":"<blockquote>\n<p>This example showcases a combination of custom component, computed property, two-way binding and SVG support.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/tfpcsxgf/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n"},{"title":"TodoMVC","type":"examples","order":9,"_content":"\n> This is a fully spec-compliant TodoMVC implementation in under 120 effective lines of JavaScript (excluding comments and blank lines).\n\n<iframe width=\"100%\" height=\"500\" src=\"todomvc/index.html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n> [[Source](https://github.com/vuejs/vue/tree/dev/examples/todomvc)]\n","source":"examples/todomvc.md","raw":"---\ntitle: TodoMVC\ntype: examples\norder: 9\n---\n\n> This is a fully spec-compliant TodoMVC implementation in under 120 effective lines of JavaScript (excluding comments and blank lines).\n\n<iframe width=\"100%\" height=\"500\" src=\"todomvc/index.html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n> [[Source](https://github.com/vuejs/vue/tree/dev/examples/todomvc)]\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"examples/todomvc.html","comments":1,"layout":"page","_id":"cit1gzcbb000eyzjxhtquyj2a","content":"<blockquote>\n<p>This is a fully spec-compliant TodoMVC implementation in under 120 effective lines of JavaScript (excluding comments and blank lines).</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"todomvc/index.html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<blockquote>\n<p>[<a href=\"https://github.com/vuejs/vue/tree/dev/examples/todomvc\" target=\"_blank\" rel=\"external\">Source</a>]</p>\n</blockquote>\n","excerpt":"","more":"<blockquote>\n<p>This is a fully spec-compliant TodoMVC implementation in under 120 effective lines of JavaScript (excluding comments and blank lines).</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"todomvc/index.html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<blockquote>\n<p>[<a href=\"https://github.com/vuejs/vue/tree/dev/examples/todomvc\">Source</a>]</p>\n</blockquote>\n"},{"title":"Tree View","type":"examples","order":4,"_content":"\n> Example of a simple tree view implementation showcasing recursive usage of components.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/u4n1m04q/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","source":"examples/tree-view.md","raw":"---\ntitle: Tree View\ntype: examples\norder: 4\n---\n\n> Example of a simple tree view implementation showcasing recursive usage of components.\n\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/u4n1m04q/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","date":"2016-09-13T12:42:51.100Z","updated":"2016-09-13T12:42:51.100Z","path":"examples/tree-view.html","comments":1,"layout":"page","_id":"cit1gzcbd000fyzjxnff1onfs","content":"<blockquote>\n<p>Example of a simple tree view implementation showcasing recursive usage of components.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/u4n1m04q/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","excerpt":"","more":"<blockquote>\n<p>Example of a simple tree view implementation showcasing recursive usage of components.</p>\n</blockquote>\n<iframe width=\"100%\" height=\"500\" src=\"http://jsfiddle.net/yyx990803/u4n1m04q/embedded/result,html,js,css\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n"},{"title":"Introduction","type":"guide","order":1,"_content":"\nvc-bootstrap,一个基于vue的组件库。\n\n* 简洁而不简单\n* 数据驱动\n* 分布式组件管理\n* 模块化\n\n\n## 如何使用\n\n通过 npm 包管理工具安装, vc-bootstrap 采用分布式的组件管理方式，每个组件单独以 npm 包的形式发布，可以分别安装使用，也可以整体安装，vc-bootstrap 其实只是将各个组件整合起来而已。\n\n* 样式依赖\n\nvc-bootstrap 依赖于 bootstrap 3.x, 在使用之前需要先引入bootstrap样式文件。\n\n* [bootstrap(en)](http://getbootstrap.com/)\n* [bootstrap(cn)](http://www.bootcss.com/)\n\nbootstrap(CDN)\n\n```html\n<link href=\"//cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.css\" rel=\"stylesheet\">\n```\n\n### 模块加载\n\n* 整体引入\n\n```node\nnpm install vc-bootstrap --save\n```\n\n* 按组件引入\n\n```node\n//安装分页组件\nnpm install vc-pagination --save\n\n//安装 modal 组件\nnpm install vc-modal --save\n```\n\n### script tag 导入\n\n```html\n//请先下载vcBootstrap.js 文件\n<script src='/js/vc-bootstrap.js'></script>\n```\n","source":"guide/index.md","raw":"---\ntitle: Introduction\ntype: guide\norder: 1\n---\n\nvc-bootstrap,一个基于vue的组件库。\n\n* 简洁而不简单\n* 数据驱动\n* 分布式组件管理\n* 模块化\n\n\n## 如何使用\n\n通过 npm 包管理工具安装, vc-bootstrap 采用分布式的组件管理方式，每个组件单独以 npm 包的形式发布，可以分别安装使用，也可以整体安装，vc-bootstrap 其实只是将各个组件整合起来而已。\n\n* 样式依赖\n\nvc-bootstrap 依赖于 bootstrap 3.x, 在使用之前需要先引入bootstrap样式文件。\n\n* [bootstrap(en)](http://getbootstrap.com/)\n* [bootstrap(cn)](http://www.bootcss.com/)\n\nbootstrap(CDN)\n\n```html\n<link href=\"//cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.css\" rel=\"stylesheet\">\n```\n\n### 模块加载\n\n* 整体引入\n\n```node\nnpm install vc-bootstrap --save\n```\n\n* 按组件引入\n\n```node\n//安装分页组件\nnpm install vc-pagination --save\n\n//安装 modal 组件\nnpm install vc-modal --save\n```\n\n### script tag 导入\n\n```html\n//请先下载vcBootstrap.js 文件\n<script src='/js/vc-bootstrap.js'></script>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/index.html","comments":1,"layout":"page","_id":"cit1gzcbg000gyzjx0afm6a5g","content":"<p>vc-bootstrap,一个基于vue的组件库。</p>\n<ul>\n<li>简洁而不简单</li>\n<li>数据驱动</li>\n<li>分布式组件管理</li>\n<li>模块化</li>\n</ul>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>通过 npm 包管理工具安装, vc-bootstrap 采用分布式的组件管理方式，每个组件单独以 npm 包的形式发布，可以分别安装使用，也可以整体安装，vc-bootstrap 其实只是将各个组件整合起来而已。</p>\n<ul>\n<li>样式依赖</li>\n</ul>\n<p>vc-bootstrap 依赖于 bootstrap 3.x, 在使用之前需要先引入bootstrap样式文件。</p>\n<ul>\n<li><a href=\"http://getbootstrap.com/\" target=\"_blank\" rel=\"external\">bootstrap(en)</a></li>\n<li><a href=\"http://www.bootcss.com/\" target=\"_blank\" rel=\"external\">bootstrap(cn)</a></li>\n</ul>\n<p>bootstrap(CDN)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">\"//cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.css\"</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"模块加载\"><a href=\"#模块加载\" class=\"headerlink\" title=\"模块加载\"></a>模块加载</h3><ul>\n<li>整体引入</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-bootstrap --save</div></pre></td></tr></table></figure>\n<ul>\n<li>按组件引入</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">//安装分页组件</div><div class=\"line\">npm install vc-pagination --save</div><div class=\"line\"></div><div class=\"line\">//安装 modal 组件</div><div class=\"line\">npm install vc-modal --save</div></pre></td></tr></table></figure>\n<h3 id=\"script-tag-导入\"><a href=\"#script-tag-导入\" class=\"headerlink\" title=\"script tag 导入\"></a>script tag 导入</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//请先下载vcBootstrap.js 文件</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'/js/vc-bootstrap.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>vc-bootstrap,一个基于vue的组件库。</p>\n<ul>\n<li>简洁而不简单</li>\n<li>数据驱动</li>\n<li>分布式组件管理</li>\n<li>模块化</li>\n</ul>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>通过 npm 包管理工具安装, vc-bootstrap 采用分布式的组件管理方式，每个组件单独以 npm 包的形式发布，可以分别安装使用，也可以整体安装，vc-bootstrap 其实只是将各个组件整合起来而已。</p>\n<ul>\n<li>样式依赖</li>\n</ul>\n<p>vc-bootstrap 依赖于 bootstrap 3.x, 在使用之前需要先引入bootstrap样式文件。</p>\n<ul>\n<li><a href=\"http://getbootstrap.com/\">bootstrap(en)</a></li>\n<li><a href=\"http://www.bootcss.com/\">bootstrap(cn)</a></li>\n</ul>\n<p>bootstrap(CDN)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">\"//cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.css\"</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"模块加载\"><a href=\"#模块加载\" class=\"headerlink\" title=\"模块加载\"></a>模块加载</h3><ul>\n<li>整体引入</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-bootstrap --save</div></pre></td></tr></table></figure>\n<ul>\n<li>按组件引入</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">//安装分页组件</div><div class=\"line\">npm install vc-pagination --save</div><div class=\"line\"></div><div class=\"line\">//安装 modal 组件</div><div class=\"line\">npm install vc-modal --save</div></pre></td></tr></table></figure>\n<h3 id=\"script-tag-导入\"><a href=\"#script-tag-导入\" class=\"headerlink\" title=\"script tag 导入\"></a>script tag 导入</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//请先下载vcBootstrap.js 文件</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'/js/vc-bootstrap.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n"},{"title":"vc-alert","type":"guide","order":13,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-alert)\n* [npm](https://www.npmjs.com/package/vc-alert)\n* [download](https://github.com/iwaimai-bi-fe/vc-alert/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-alert --save\n```\n\n```html\n//global varibale  vcalert\n<script src='../dist/vc-alert.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok alert text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel alert text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of alert.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcalert\n    } from '../dist/vc-alert.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcalert\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-alert \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-alert>\n```\n","source":"guide/vc-alert.md","raw":"---\ntitle: vc-alert\ntype: guide\norder: 13\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-alert)\n* [npm](https://www.npmjs.com/package/vc-alert)\n* [download](https://github.com/iwaimai-bi-fe/vc-alert/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-alert --save\n```\n\n```html\n//global varibale  vcalert\n<script src='../dist/vc-alert.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok alert text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel alert text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of alert.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcalert\n    } from '../dist/vc-alert.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcalert\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-alert \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-alert>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-alert.html","comments":1,"layout":"page","_id":"cit1gzcbn000hyzjx88199bka","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-alert\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-alert\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-alert/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-alert --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcalert</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-alert.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok alert text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel alert text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of alert.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcalert</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-alert.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcalert</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-alert </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-alert&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-alert\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-alert\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-alert/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-alert --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcalert</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-alert.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok alert text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel alert text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of alert.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcalert</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-alert.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcalert</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-alert </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-alert&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-animate","type":"guide","order":30,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-animate)\n* [npm](https://www.npmjs.com/package/vc-animate)\n* [download](https://github.com/iwaimai-bi-fe/vc-animate/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-animate --save\n```\n\n```html\n//global varibale  vcanimate\n<script src='../dist/vc-animate.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok animate text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel animate text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of animate.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcanimate\n    } from '../dist/vc-animate.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcanimate\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-animate \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-animate>\n```\n","source":"guide/vc-animate.md","raw":"---\ntitle: vc-animate\ntype: guide\norder: 30\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-animate)\n* [npm](https://www.npmjs.com/package/vc-animate)\n* [download](https://github.com/iwaimai-bi-fe/vc-animate/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-animate --save\n```\n\n```html\n//global varibale  vcanimate\n<script src='../dist/vc-animate.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok animate text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel animate text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of animate.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcanimate\n    } from '../dist/vc-animate.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcanimate\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-animate \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-animate>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-animate.html","comments":1,"layout":"page","_id":"cit1gzcbo000iyzjx8atn2n8o","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-animate\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-animate\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-animate/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-animate --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcanimate</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-animate.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok animate text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel animate text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of animate.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcanimate</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-animate.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcanimate</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-animate </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-animate&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-animate\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-animate\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-animate/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-animate --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcanimate</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-animate.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok animate text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel animate text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of animate.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcanimate</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-animate.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcanimate</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-animate </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-animate&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-autocomplete","type":"guide","order":10,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-autocomplete)\n* [npm](https://www.npmjs.com/package/vc-autocomplete)\n* [download](https://github.com/iwaimai-bi-fe/vc-autocomplete/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-autocomplete --save\n```\n\n```html\n//global varibale  vcautocomplete\n<script src='../dist/vc-autocomplete.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok autocomplete text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel autocomplete text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of autocomplete.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcautocomplete\n    } from '../dist/vc-autocomplete.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcautocomplete\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-autocomplete \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-autocomplete>\n```\n","source":"guide/vc-autocomplete.md","raw":"---\ntitle: vc-autocomplete\ntype: guide\norder: 10\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-autocomplete)\n* [npm](https://www.npmjs.com/package/vc-autocomplete)\n* [download](https://github.com/iwaimai-bi-fe/vc-autocomplete/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-autocomplete --save\n```\n\n```html\n//global varibale  vcautocomplete\n<script src='../dist/vc-autocomplete.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok autocomplete text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel autocomplete text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of autocomplete.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcautocomplete\n    } from '../dist/vc-autocomplete.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcautocomplete\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-autocomplete \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-autocomplete>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-autocomplete.html","comments":1,"layout":"page","_id":"cit1gzcbp000jyzjx0sf4d0zp","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-autocomplete\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-autocomplete\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-autocomplete/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-autocomplete --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcautocomplete</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-autocomplete.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok autocomplete text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel autocomplete text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of autocomplete.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcautocomplete</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-autocomplete.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcautocomplete</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-autocomplete </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-autocomplete&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-autocomplete\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-autocomplete\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-autocomplete/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-autocomplete --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcautocomplete</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-autocomplete.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok autocomplete text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel autocomplete text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of autocomplete.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcautocomplete</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-autocomplete.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcautocomplete</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-autocomplete </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-autocomplete&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-backtop","type":"guide","order":26,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-backtop)\n* [npm](https://www.npmjs.com/package/vc-backtop)\n* [download](https://github.com/iwaimai-bi-fe/vc-backtop/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-backtop --save\n```\n\n```html\n//global varibale  vcbacktop\n<script src='../dist/vc-backtop.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok backtop text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel backtop text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of backtop.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcbacktop\n    } from '../dist/vc-backtop.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcbacktop\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-backtop \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-backtop>\n```\n","source":"guide/vc-backtop.md","raw":"---\ntitle: vc-backtop\ntype: guide\norder: 26\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-backtop)\n* [npm](https://www.npmjs.com/package/vc-backtop)\n* [download](https://github.com/iwaimai-bi-fe/vc-backtop/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-backtop --save\n```\n\n```html\n//global varibale  vcbacktop\n<script src='../dist/vc-backtop.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok backtop text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel backtop text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of backtop.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcbacktop\n    } from '../dist/vc-backtop.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcbacktop\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-backtop \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-backtop>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-backtop.html","comments":1,"layout":"page","_id":"cit1gzcbr000kyzjxdq0yrrw0","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-backtop\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-backtop\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-backtop/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-backtop --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcbacktop</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-backtop.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok backtop text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel backtop text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of backtop.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcbacktop</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-backtop.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcbacktop</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-backtop </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-backtop&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-backtop\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-backtop\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-backtop/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-backtop --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcbacktop</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-backtop.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok backtop text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel backtop text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of backtop.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcbacktop</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-backtop.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcbacktop</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-backtop </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-backtop&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-breadcrumb","type":"guide","order":27,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-breadcrumb)\n* [npm](https://www.npmjs.com/package/vc-breadcrumb)\n* [download](https://github.com/iwaimai-bi-fe/vc-breadcrumb/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-breadcrumb --save\n```\n\n```html\n//global varibale  vcbreadcrumb\n<script src='../dist/vc-breadcrumb.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok breadcrumb text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel breadcrumb text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of breadcrumb.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcbreadcrumb\n    } from '../dist/vc-breadcrumb.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcbreadcrumb\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-breadcrumb \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-breadcrumb>\n```\n","source":"guide/vc-breadcrumb.md","raw":"---\ntitle: vc-breadcrumb\ntype: guide\norder: 27\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-breadcrumb)\n* [npm](https://www.npmjs.com/package/vc-breadcrumb)\n* [download](https://github.com/iwaimai-bi-fe/vc-breadcrumb/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-breadcrumb --save\n```\n\n```html\n//global varibale  vcbreadcrumb\n<script src='../dist/vc-breadcrumb.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok breadcrumb text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel breadcrumb text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of breadcrumb.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcbreadcrumb\n    } from '../dist/vc-breadcrumb.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcbreadcrumb\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-breadcrumb \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-breadcrumb>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-breadcrumb.html","comments":1,"layout":"page","_id":"cit1gzcbt000lyzjxint6g9n4","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-breadcrumb\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-breadcrumb\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-breadcrumb/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-breadcrumb --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcbreadcrumb</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-breadcrumb.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok breadcrumb text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel breadcrumb text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of breadcrumb.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcbreadcrumb</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-breadcrumb.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcbreadcrumb</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-breadcrumb </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-breadcrumb&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-breadcrumb\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-breadcrumb\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-breadcrumb/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-breadcrumb --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcbreadcrumb</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-breadcrumb.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok breadcrumb text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel breadcrumb text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of breadcrumb.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcbreadcrumb</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-breadcrumb.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcbreadcrumb</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-breadcrumb </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-breadcrumb&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-button","type":"guide","order":3,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-button)\n* [npm](https://www.npmjs.com/package/vc-button)\n* [download](https://github.com/iwaimai-bi-fe/vc-button/archive/master.zip)\n\n## Install\n\n``` npm\nnpm install vc-button --save\n```\n\n``` js\nimport vcbutton from 'vc-button' // bundle & build version\nimport vcbutton from 'vc-button/src' // recommend for *.vue project \n```\n\n``` js \n// CommonJS\nrequire('dist/build.min.js')\n```\n\n``` html\n// script tag\n<script src='dist/build.min.js'></script>\n```\n\n## Usage\n\n## props\n\n### type \n\ntype of button\n\n* default: `确定`\n* enum: `default | success | info | primary | warning | danger`\n* type: `String`\n\n### htmlType \n\nvalid [html type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type) attribute\n\n* default: `button`\n* type: `String`\n\n### label\n\nbutton label\n\n* type: `String`\n\n### shape\n\nshape of button icon\n\n* default: `circle`\n* enum: `circle | other`\n* type: `String`\n\n### disabled \n\nbutton disabled\n\n* default: `false`\n* type: `Boolean` \n\n### readonly \n\nbutton readonly\n\n* default: `false`\n* type: `Boolean` \n\n### size\n\nsize of button\n\n* default `middle`\n* enum: `large | middle | small | mini`\n* type: `String`\n\n### loading\n\nis loading state?\n\n* default: `false`\n* type: `Boolean`\n\n### loadingText\n\nloadingText\n\n* default: `加载中...`\n* type: `String`\n\n### style\n\n* type: `Object`\n\n## example\n\n``` js\nimport Vue from 'vue'\nimport vcButton from 'vc-button/src'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            label: 'use label, no slot',\n            type: \"warning\",\n            htmlType: 'button',\n            loading: false,\n            loadingText: 'loading中',\n            size: 'middle',\n            icon: 'remove',\n            shape: '',\n            disabled: false,\n            style: {}\n        }\n    },\n    components: {\n        vcbutton\n    }\n})\n```\n\n``` html\n<vc-button\n    :type=\"type\"\n    :loading=\"loading\"\n    :loading-text=\"loadingText\"\n    :size=\"size\"\n    :disabled=\"disabled\"\n    :icon=\"icon\"\n    :shape=\"shape\"\n    :style='{ \"border-radius\": \"0px\" }'\n    @click=\"handleClick('btn1', '@click', 'is slot, costom style')\"\n>\n    slot & costom style\n</vc-button>\n```\n","source":"guide/vc-button.md","raw":"---\ntitle: vc-button\ntype: guide\norder: 3\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-button)\n* [npm](https://www.npmjs.com/package/vc-button)\n* [download](https://github.com/iwaimai-bi-fe/vc-button/archive/master.zip)\n\n## Install\n\n``` npm\nnpm install vc-button --save\n```\n\n``` js\nimport vcbutton from 'vc-button' // bundle & build version\nimport vcbutton from 'vc-button/src' // recommend for *.vue project \n```\n\n``` js \n// CommonJS\nrequire('dist/build.min.js')\n```\n\n``` html\n// script tag\n<script src='dist/build.min.js'></script>\n```\n\n## Usage\n\n## props\n\n### type \n\ntype of button\n\n* default: `确定`\n* enum: `default | success | info | primary | warning | danger`\n* type: `String`\n\n### htmlType \n\nvalid [html type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type) attribute\n\n* default: `button`\n* type: `String`\n\n### label\n\nbutton label\n\n* type: `String`\n\n### shape\n\nshape of button icon\n\n* default: `circle`\n* enum: `circle | other`\n* type: `String`\n\n### disabled \n\nbutton disabled\n\n* default: `false`\n* type: `Boolean` \n\n### readonly \n\nbutton readonly\n\n* default: `false`\n* type: `Boolean` \n\n### size\n\nsize of button\n\n* default `middle`\n* enum: `large | middle | small | mini`\n* type: `String`\n\n### loading\n\nis loading state?\n\n* default: `false`\n* type: `Boolean`\n\n### loadingText\n\nloadingText\n\n* default: `加载中...`\n* type: `String`\n\n### style\n\n* type: `Object`\n\n## example\n\n``` js\nimport Vue from 'vue'\nimport vcButton from 'vc-button/src'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            label: 'use label, no slot',\n            type: \"warning\",\n            htmlType: 'button',\n            loading: false,\n            loadingText: 'loading中',\n            size: 'middle',\n            icon: 'remove',\n            shape: '',\n            disabled: false,\n            style: {}\n        }\n    },\n    components: {\n        vcbutton\n    }\n})\n```\n\n``` html\n<vc-button\n    :type=\"type\"\n    :loading=\"loading\"\n    :loading-text=\"loadingText\"\n    :size=\"size\"\n    :disabled=\"disabled\"\n    :icon=\"icon\"\n    :shape=\"shape\"\n    :style='{ \"border-radius\": \"0px\" }'\n    @click=\"handleClick('btn1', '@click', 'is slot, costom style')\"\n>\n    slot & costom style\n</vc-button>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-button.html","comments":1,"layout":"page","_id":"cit1gzccc000myzjxfd7e7v0d","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-button\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-button\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-button/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-button --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> vcbutton <span class=\"keyword\">from</span> <span class=\"string\">'vc-button'</span> <span class=\"comment\">// bundle &amp; build version</span></div><div class=\"line\"><span class=\"keyword\">import</span> vcbutton <span class=\"keyword\">from</span> <span class=\"string\">'vc-button/src'</span> <span class=\"comment\">// recommend for *.vue project</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// CommonJS</span></div><div class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'dist/build.min.js'</span>)</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">// script tag</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'dist/build.min.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"type\"><a href=\"#type\" class=\"headerlink\" title=\"type\"></a>type</h3><p>type of button</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>enum: <code>default | success | info | primary | warning | danger</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"htmlType\"><a href=\"#htmlType\" class=\"headerlink\" title=\"htmlType\"></a>htmlType</h3><p>valid <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type\" target=\"_blank\" rel=\"external\">html type</a> attribute</p>\n<ul>\n<li>default: <code>button</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"label\"><a href=\"#label\" class=\"headerlink\" title=\"label\"></a>label</h3><p>button label</p>\n<ul>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"shape\"><a href=\"#shape\" class=\"headerlink\" title=\"shape\"></a>shape</h3><p>shape of button icon</p>\n<ul>\n<li>default: <code>circle</code></li>\n<li>enum: <code>circle | other</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"disabled\"><a href=\"#disabled\" class=\"headerlink\" title=\"disabled\"></a>disabled</h3><p>button disabled</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"readonly\"><a href=\"#readonly\" class=\"headerlink\" title=\"readonly\"></a>readonly</h3><p>button readonly</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"size\"><a href=\"#size\" class=\"headerlink\" title=\"size\"></a>size</h3><p>size of button</p>\n<ul>\n<li>default <code>middle</code></li>\n<li>enum: <code>large | middle | small | mini</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"loading\"><a href=\"#loading\" class=\"headerlink\" title=\"loading\"></a>loading</h3><p>is loading state?</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code></li>\n</ul>\n<h3 id=\"loadingText\"><a href=\"#loadingText\" class=\"headerlink\" title=\"loadingText\"></a>loadingText</h3><p>loadingText</p>\n<ul>\n<li>default: <code>加载中...</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"style\"><a href=\"#style\" class=\"headerlink\" title=\"style\"></a>style</h3><ul>\n<li>type: <code>Object</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> vcButton <span class=\"keyword\">from</span> <span class=\"string\">'vc-button/src'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            label: <span class=\"string\">'use label, no slot'</span>,</div><div class=\"line\">            type: <span class=\"string\">\"warning\"</span>,</div><div class=\"line\">            htmlType: <span class=\"string\">'button'</span>,</div><div class=\"line\">            loading: <span class=\"literal\">false</span>,</div><div class=\"line\">            loadingText: <span class=\"string\">'loading中'</span>,</div><div class=\"line\">            size: <span class=\"string\">'middle'</span>,</div><div class=\"line\">            icon: <span class=\"string\">'remove'</span>,</div><div class=\"line\">            shape: <span class=\"string\">''</span>,</div><div class=\"line\">            disabled: <span class=\"literal\">false</span>,</div><div class=\"line\">            style: &#123;&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcbutton</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">vc-button</span></span></div><div class=\"line\">    <span class=\"attr\">:type</span>=<span class=\"string\">\"type\"</span></div><div class=\"line\">    <span class=\"attr\">:loading</span>=<span class=\"string\">\"loading\"</span></div><div class=\"line\">    <span class=\"attr\">:loading-text</span>=<span class=\"string\">\"loadingText\"</span></div><div class=\"line\">    <span class=\"attr\">:size</span>=<span class=\"string\">\"size\"</span></div><div class=\"line\">    <span class=\"attr\">:disabled</span>=<span class=\"string\">\"disabled\"</span></div><div class=\"line\">    <span class=\"attr\">:icon</span>=<span class=\"string\">\"icon\"</span></div><div class=\"line\">    <span class=\"attr\">:shape</span>=<span class=\"string\">\"shape\"</span></div><div class=\"line\">    <span class=\"attr\">:style</span>=<span class=\"string\">'&#123; \"border-radius\": \"0px\" &#125;'</span></div><div class=\"line\">    @<span class=\"attr\">click</span>=<span class=\"string\">\"handleClick('btn1', '@click', 'is slot, costom style')\"</span></div><div class=\"line\">&gt;</div><div class=\"line\">    slot &amp; costom style</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">vc-button</span>&gt;</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-button\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-button\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-button/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-button --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> vcbutton <span class=\"keyword\">from</span> <span class=\"string\">'vc-button'</span> <span class=\"comment\">// bundle &amp; build version</span></div><div class=\"line\"><span class=\"keyword\">import</span> vcbutton <span class=\"keyword\">from</span> <span class=\"string\">'vc-button/src'</span> <span class=\"comment\">// recommend for *.vue project</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// CommonJS</span></div><div class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'dist/build.min.js'</span>)</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">// script tag</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'dist/build.min.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"type\"><a href=\"#type\" class=\"headerlink\" title=\"type\"></a>type</h3><p>type of button</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>enum: <code>default | success | info | primary | warning | danger</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"htmlType\"><a href=\"#htmlType\" class=\"headerlink\" title=\"htmlType\"></a>htmlType</h3><p>valid <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type\">html type</a> attribute</p>\n<ul>\n<li>default: <code>button</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"label\"><a href=\"#label\" class=\"headerlink\" title=\"label\"></a>label</h3><p>button label</p>\n<ul>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"shape\"><a href=\"#shape\" class=\"headerlink\" title=\"shape\"></a>shape</h3><p>shape of button icon</p>\n<ul>\n<li>default: <code>circle</code></li>\n<li>enum: <code>circle | other</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"disabled\"><a href=\"#disabled\" class=\"headerlink\" title=\"disabled\"></a>disabled</h3><p>button disabled</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"readonly\"><a href=\"#readonly\" class=\"headerlink\" title=\"readonly\"></a>readonly</h3><p>button readonly</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"size\"><a href=\"#size\" class=\"headerlink\" title=\"size\"></a>size</h3><p>size of button</p>\n<ul>\n<li>default <code>middle</code></li>\n<li>enum: <code>large | middle | small | mini</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"loading\"><a href=\"#loading\" class=\"headerlink\" title=\"loading\"></a>loading</h3><p>is loading state?</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code></li>\n</ul>\n<h3 id=\"loadingText\"><a href=\"#loadingText\" class=\"headerlink\" title=\"loadingText\"></a>loadingText</h3><p>loadingText</p>\n<ul>\n<li>default: <code>加载中...</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"style\"><a href=\"#style\" class=\"headerlink\" title=\"style\"></a>style</h3><ul>\n<li>type: <code>Object</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> vcButton <span class=\"keyword\">from</span> <span class=\"string\">'vc-button/src'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            label: <span class=\"string\">'use label, no slot'</span>,</div><div class=\"line\">            type: <span class=\"string\">\"warning\"</span>,</div><div class=\"line\">            htmlType: <span class=\"string\">'button'</span>,</div><div class=\"line\">            loading: <span class=\"literal\">false</span>,</div><div class=\"line\">            loadingText: <span class=\"string\">'loading中'</span>,</div><div class=\"line\">            size: <span class=\"string\">'middle'</span>,</div><div class=\"line\">            icon: <span class=\"string\">'remove'</span>,</div><div class=\"line\">            shape: <span class=\"string\">''</span>,</div><div class=\"line\">            disabled: <span class=\"literal\">false</span>,</div><div class=\"line\">            style: &#123;&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcbutton</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">vc-button</span></div><div class=\"line\">    <span class=\"attr\">:type</span>=<span class=\"string\">\"type\"</span></div><div class=\"line\">    <span class=\"attr\">:loading</span>=<span class=\"string\">\"loading\"</span></div><div class=\"line\">    <span class=\"attr\">:loading-text</span>=<span class=\"string\">\"loadingText\"</span></div><div class=\"line\">    <span class=\"attr\">:size</span>=<span class=\"string\">\"size\"</span></div><div class=\"line\">    <span class=\"attr\">:disabled</span>=<span class=\"string\">\"disabled\"</span></div><div class=\"line\">    <span class=\"attr\">:icon</span>=<span class=\"string\">\"icon\"</span></div><div class=\"line\">    <span class=\"attr\">:shape</span>=<span class=\"string\">\"shape\"</span></div><div class=\"line\">    <span class=\"attr\">:style</span>=<span class=\"string\">'&#123; \"border-radius\": \"0px\" &#125;'</span></div><div class=\"line\">    @<span class=\"attr\">click</span>=<span class=\"string\">\"handleClick('btn1', '@click', 'is slot, costom style')\"</span></div><div class=\"line\">&gt;</span></div><div class=\"line\">    slot &amp; costom style</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">vc-button</span>&gt;</span></div></pre></td></tr></table></figure>\n"},{"title":"vc-buttonGroup","type":"guide","order":6,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-buttonGroup)\n* [npm](https://www.npmjs.com/package/vc-buttonGroup)\n* [download](https://github.com/iwaimai-bi-fe/vc-buttonGroup/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-buttonGroup --save\n```\n\n```html\n//global varibale  vcbuttonGroup\n<script src='../dist/vc-buttonGroup.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok buttonGroup text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel buttonGroup text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of buttonGroup.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcbuttonGroup\n    } from '../dist/vc-buttonGroup.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcbuttonGroup\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-buttonGroup \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-buttonGroup>\n```\n","source":"guide/vc-buttonGroup.md","raw":"---\ntitle: vc-buttonGroup\ntype: guide\norder: 6\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-buttonGroup)\n* [npm](https://www.npmjs.com/package/vc-buttonGroup)\n* [download](https://github.com/iwaimai-bi-fe/vc-buttonGroup/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-buttonGroup --save\n```\n\n```html\n//global varibale  vcbuttonGroup\n<script src='../dist/vc-buttonGroup.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok buttonGroup text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel buttonGroup text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of buttonGroup.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcbuttonGroup\n    } from '../dist/vc-buttonGroup.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcbuttonGroup\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-buttonGroup \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-buttonGroup>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-buttonGroup.html","comments":1,"layout":"page","_id":"cit1gzccf000nyzjxavfrpecy","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-buttonGroup\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-buttonGroup\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-buttonGroup/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-buttonGroup --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcbuttonGroup</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-buttonGroup.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok buttonGroup text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel buttonGroup text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of buttonGroup.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcbuttonGroup</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-buttonGroup.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcbuttonGroup</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-buttonGroup </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-buttonGroup&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-buttonGroup\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-buttonGroup\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-buttonGroup/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-buttonGroup --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcbuttonGroup</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-buttonGroup.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok buttonGroup text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel buttonGroup text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of buttonGroup.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcbuttonGroup</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-buttonGroup.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcbuttonGroup</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-buttonGroup </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-buttonGroup&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-card","type":"guide","order":14,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-card)\n* [npm](https://www.npmjs.com/package/vc-card)\n* [download](https://github.com/iwaimai-bi-fe/vc-card/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-card --save\n```\n\n```html\n//global varibale  vccard\n<script src='../dist/vc-card.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok card text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel card text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of card.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vccard\n    } from '../dist/vc-card.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vccard\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-card \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-card>\n```\n","source":"guide/vc-card.md","raw":"---\ntitle: vc-card\ntype: guide\norder: 14\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-card)\n* [npm](https://www.npmjs.com/package/vc-card)\n* [download](https://github.com/iwaimai-bi-fe/vc-card/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-card --save\n```\n\n```html\n//global varibale  vccard\n<script src='../dist/vc-card.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok card text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel card text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of card.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vccard\n    } from '../dist/vc-card.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vccard\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-card \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-card>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-card.html","comments":1,"layout":"page","_id":"cit1gzccg000oyzjxmbl6j4p5","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-card\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-card\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-card/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-card --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vccard</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-card.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok card text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel card text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of card.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vccard</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-card.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vccard</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-card </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-card&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-card\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-card\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-card/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-card --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vccard</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-card.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok card text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel card text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of card.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vccard</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-card.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vccard</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-card </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-card&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-carousel","type":"guide","order":15,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-carousel)\n* [npm](https://www.npmjs.com/package/vc-carousel)\n* [download](https://github.com/iwaimai-bi-fe/vc-carousel/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-carousel --save\n```\n\n```html\n//global varibale  vccarousel\n<script src='../dist/vc-carousel.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok carousel text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel carousel text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of carousel.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vccarousel\n    } from '../dist/vc-carousel.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vccarousel\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-carousel \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-carousel>\n```\n","source":"guide/vc-carousel.md","raw":"---\ntitle: vc-carousel\ntype: guide\norder: 15\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-carousel)\n* [npm](https://www.npmjs.com/package/vc-carousel)\n* [download](https://github.com/iwaimai-bi-fe/vc-carousel/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-carousel --save\n```\n\n```html\n//global varibale  vccarousel\n<script src='../dist/vc-carousel.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok carousel text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel carousel text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of carousel.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vccarousel\n    } from '../dist/vc-carousel.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vccarousel\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-carousel \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-carousel>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-carousel.html","comments":1,"layout":"page","_id":"cit1gzcco000pyzjxcxkq7912","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-carousel\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-carousel\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-carousel/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-carousel --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vccarousel</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-carousel.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok carousel text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel carousel text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of carousel.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vccarousel</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-carousel.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vccarousel</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-carousel </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-carousel&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-carousel\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-carousel\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-carousel/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-carousel --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vccarousel</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-carousel.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok carousel text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel carousel text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of carousel.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vccarousel</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-carousel.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vccarousel</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-carousel </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-carousel&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-cascader","type":"guide","order":5,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-cascader)\n* [npm](https://www.npmjs.com/package/vc-cascader)\n* [download](https://github.com/iwaimai-bi-fe/vc-cascader/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-cascader --save\n```\n\n```html\n//global varibale  vccascader\n<script src='../dist/vc-cascader.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok cascader text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel cascader text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of cascader.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vccascader\n    } from '../dist/vc-cascader.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vccascader\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-cascader \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-cascader>\n```\n","source":"guide/vc-cascader.md","raw":"---\ntitle: vc-cascader\ntype: guide\norder: 5\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-cascader)\n* [npm](https://www.npmjs.com/package/vc-cascader)\n* [download](https://github.com/iwaimai-bi-fe/vc-cascader/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-cascader --save\n```\n\n```html\n//global varibale  vccascader\n<script src='../dist/vc-cascader.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok cascader text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel cascader text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of cascader.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vccascader\n    } from '../dist/vc-cascader.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vccascader\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-cascader \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-cascader>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-cascader.html","comments":1,"layout":"page","_id":"cit1gzccp000qyzjxcrex9vo0","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-cascader\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-cascader\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-cascader/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-cascader --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vccascader</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-cascader.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok cascader text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel cascader text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of cascader.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vccascader</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-cascader.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vccascader</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-cascader </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-cascader&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-cascader\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-cascader\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-cascader/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-cascader --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vccascader</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-cascader.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok cascader text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel cascader text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of cascader.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vccascader</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-cascader.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vccascader</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-cascader </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-cascader&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-checkbox","type":"guide","order":8,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-checkbox)\n* [npm](https://www.npmjs.com/package/vc-checkbox)\n* [download](https://github.com/iwaimai-bi-fe/vc-checkbox/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-checkbox --save\n```\n\n```html\n//global varibale  vccheckbox\n<script src='../dist/vc-checkbox.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok checkbox text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel checkbox text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of checkbox.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vccheckbox\n    } from '../dist/vc-checkbox.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vccheckbox\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-checkbox \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-checkbox>\n```\n","source":"guide/vc-checkbox.md","raw":"---\ntitle: vc-checkbox\ntype: guide\norder: 8\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-checkbox)\n* [npm](https://www.npmjs.com/package/vc-checkbox)\n* [download](https://github.com/iwaimai-bi-fe/vc-checkbox/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-checkbox --save\n```\n\n```html\n//global varibale  vccheckbox\n<script src='../dist/vc-checkbox.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok checkbox text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel checkbox text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of checkbox.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vccheckbox\n    } from '../dist/vc-checkbox.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vccheckbox\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-checkbox \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-checkbox>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-checkbox.html","comments":1,"layout":"page","_id":"cit1gzccw000ryzjx23et3c4k","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-checkbox\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-checkbox\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-checkbox/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-checkbox --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vccheckbox</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-checkbox.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok checkbox text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel checkbox text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of checkbox.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vccheckbox</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-checkbox.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vccheckbox</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-checkbox </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-checkbox&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-checkbox\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-checkbox\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-checkbox/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-checkbox --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vccheckbox</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-checkbox.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok checkbox text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel checkbox text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of checkbox.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vccheckbox</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-checkbox.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vccheckbox</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-checkbox </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-checkbox&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-dialog","type":"guide","order":19,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-dialog)\n* [npm](https://www.npmjs.com/package/vc-dialog)\n* [download](https://github.com/iwaimai-bi-fe/vc-dialog/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-dialog --save\n```\n\n```html\n//global varibale  vcdialog\n<script src='../dist/vc-dialog.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok dialog text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel dialog text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of dialog.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcdialog\n    } from '../dist/vc-dialog.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcdialog\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-dialog \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-dialog>\n```\n","source":"guide/vc-dialog.md","raw":"---\ntitle: vc-dialog\ntype: guide\norder: 19\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-dialog)\n* [npm](https://www.npmjs.com/package/vc-dialog)\n* [download](https://github.com/iwaimai-bi-fe/vc-dialog/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-dialog --save\n```\n\n```html\n//global varibale  vcdialog\n<script src='../dist/vc-dialog.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok dialog text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel dialog text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of dialog.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcdialog\n    } from '../dist/vc-dialog.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcdialog\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-dialog \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-dialog>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-dialog.html","comments":1,"layout":"page","_id":"cit1gzccz000syzjx2j884vjz","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-dialog\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-dialog\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-dialog/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-dialog --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcdialog</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-dialog.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok dialog text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel dialog text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of dialog.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcdialog</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-dialog.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcdialog</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-dialog </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-dialog&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-dialog\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-dialog\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-dialog/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-dialog --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcdialog</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-dialog.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok dialog text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel dialog text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of dialog.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcdialog</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-dialog.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcdialog</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-dialog </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-dialog&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-dropdown","type":"guide","order":11,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-dropdown)\n* [npm](https://www.npmjs.com/package/vc-dropdown)\n* [download](https://github.com/iwaimai-bi-fe/vc-dropdown/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-dropdown --save\n```\n\n```html\n//global varibale  vcdropdown\n<script src='../dist/vc-dropdown.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok dropdown text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel dropdown text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of dropdown.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcdropdown\n    } from '../dist/vc-dropdown.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcdropdown\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-dropdown \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-dropdown>\n```\n","source":"guide/vc-dropdown.md","raw":"---\ntitle: vc-dropdown\ntype: guide\norder: 11\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-dropdown)\n* [npm](https://www.npmjs.com/package/vc-dropdown)\n* [download](https://github.com/iwaimai-bi-fe/vc-dropdown/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-dropdown --save\n```\n\n```html\n//global varibale  vcdropdown\n<script src='../dist/vc-dropdown.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok dropdown text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel dropdown text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of dropdown.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcdropdown\n    } from '../dist/vc-dropdown.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcdropdown\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-dropdown \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-dropdown>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-dropdown.html","comments":1,"layout":"page","_id":"cit1gzcd7000tyzjx821n5vfu","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-dropdown\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-dropdown\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-dropdown/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-dropdown --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcdropdown</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-dropdown.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok dropdown text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel dropdown text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of dropdown.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcdropdown</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-dropdown.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcdropdown</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-dropdown </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-dropdown&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-dropdown\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-dropdown\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-dropdown/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-dropdown --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcdropdown</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-dropdown.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok dropdown text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel dropdown text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of dropdown.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcdropdown</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-dropdown.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcdropdown</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-dropdown </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-dropdown&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-easyclearinput","type":"guide","order":9,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-easyclearinput)\n* [npm](https://www.npmjs.com/package/vc-easyclearinput)\n* [download](https://github.com/iwaimai-bi-fe/vc-easyclearinput/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-easyclearinput --save\n```\n\n```html\n//global varibale  vceasyclearinput\n<script src='../dist/vc-easyclearinput.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok easyclearinput text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel easyclearinput text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of easyclearinput.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vceasyclearinput\n    } from '../dist/vc-easyclearinput.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vceasyclearinput\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-easyclearinput \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-easyclearinput>\n```\n","source":"guide/vc-easyclearinput.md","raw":"---\ntitle: vc-easyclearinput\ntype: guide\norder: 9\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-easyclearinput)\n* [npm](https://www.npmjs.com/package/vc-easyclearinput)\n* [download](https://github.com/iwaimai-bi-fe/vc-easyclearinput/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-easyclearinput --save\n```\n\n```html\n//global varibale  vceasyclearinput\n<script src='../dist/vc-easyclearinput.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok easyclearinput text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel easyclearinput text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of easyclearinput.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vceasyclearinput\n    } from '../dist/vc-easyclearinput.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vceasyclearinput\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-easyclearinput \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-easyclearinput>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-easyclearinput.html","comments":1,"layout":"page","_id":"cit1gzcd9000uyzjxlnj4ua68","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-easyclearinput\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-easyclearinput\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-easyclearinput/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-easyclearinput --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vceasyclearinput</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-easyclearinput.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok easyclearinput text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel easyclearinput text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of easyclearinput.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vceasyclearinput</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-easyclearinput.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vceasyclearinput</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-easyclearinput </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-easyclearinput&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-easyclearinput\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-easyclearinput\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-easyclearinput/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-easyclearinput --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vceasyclearinput</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-easyclearinput.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok easyclearinput text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel easyclearinput text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of easyclearinput.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vceasyclearinput</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-easyclearinput.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vceasyclearinput</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-easyclearinput </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-easyclearinput&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-icon","type":"guide","order":2,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-icon)\n* [npm](https://www.npmjs.com/package/vc-icon)\n* [download](https://github.com/iwaimai-bi-fe/vc-icon/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-icon --save\n```\n\n``` js\nimport vcIcon from 'vc-icon' // bundle & build version\nimport vcIcon from 'vc-icon/src' // recommand for *.vue project\n```\n\n``` js \n// CommonJS\nrequire('dist/build.min.js')\n```\n\n```html\n// script tag\n<script src='dist/build.min.js'></script>\n```\n\n## Usage\n\n## props\n\n### type \n\nname of icon, full Bootstrap [Glyphicons Halflings](http://glyphicons.com/) icons support\n\n* type: `String`\n\n### shape \n\nshape of icon\n\n* default: `circle`\n* enum: `circle | other`\n* type: `String`\n\n### size \n\nicon size\n\n* default: `small`\n* enum: `large | middle | small | mini | Number`\n* type: `String|Number` \n\n## example\n\n``` js\nimport Vue from 'vue'\nimport vcIcon from 'vc-icon/src'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            type: 'ok',\n            shape: 'circle',\n            size: 'large'\n        }\n    },\n    components: {\n        vcIcon\n    }\n})\n```\n\n``` html \n<vc-icon \n    :type=\"type\"\n    :shape=\"shape\"\n    :size=\"large\"\n>\n</vc-icon>\n```\n","source":"guide/vc-icon.md","raw":"---\ntitle: vc-icon\ntype: guide\norder: 2\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-icon)\n* [npm](https://www.npmjs.com/package/vc-icon)\n* [download](https://github.com/iwaimai-bi-fe/vc-icon/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-icon --save\n```\n\n``` js\nimport vcIcon from 'vc-icon' // bundle & build version\nimport vcIcon from 'vc-icon/src' // recommand for *.vue project\n```\n\n``` js \n// CommonJS\nrequire('dist/build.min.js')\n```\n\n```html\n// script tag\n<script src='dist/build.min.js'></script>\n```\n\n## Usage\n\n## props\n\n### type \n\nname of icon, full Bootstrap [Glyphicons Halflings](http://glyphicons.com/) icons support\n\n* type: `String`\n\n### shape \n\nshape of icon\n\n* default: `circle`\n* enum: `circle | other`\n* type: `String`\n\n### size \n\nicon size\n\n* default: `small`\n* enum: `large | middle | small | mini | Number`\n* type: `String|Number` \n\n## example\n\n``` js\nimport Vue from 'vue'\nimport vcIcon from 'vc-icon/src'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            type: 'ok',\n            shape: 'circle',\n            size: 'large'\n        }\n    },\n    components: {\n        vcIcon\n    }\n})\n```\n\n``` html \n<vc-icon \n    :type=\"type\"\n    :shape=\"shape\"\n    :size=\"large\"\n>\n</vc-icon>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-icon.html","comments":1,"layout":"page","_id":"cit1gzcda000vyzjxhegmcs3p","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-icon\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-icon\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-icon/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-icon --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> vcIcon <span class=\"keyword\">from</span> <span class=\"string\">'vc-icon'</span> <span class=\"comment\">// bundle &amp; build version</span></div><div class=\"line\"><span class=\"keyword\">import</span> vcIcon <span class=\"keyword\">from</span> <span class=\"string\">'vc-icon/src'</span> <span class=\"comment\">// recommand for *.vue project</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// CommonJS</span></div><div class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'dist/build.min.js'</span>)</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">// script tag</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'dist/build.min.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"type\"><a href=\"#type\" class=\"headerlink\" title=\"type\"></a>type</h3><p>name of icon, full Bootstrap <a href=\"http://glyphicons.com/\" target=\"_blank\" rel=\"external\">Glyphicons Halflings</a> icons support</p>\n<ul>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"shape\"><a href=\"#shape\" class=\"headerlink\" title=\"shape\"></a>shape</h3><p>shape of icon</p>\n<ul>\n<li>default: <code>circle</code></li>\n<li>enum: <code>circle | other</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"size\"><a href=\"#size\" class=\"headerlink\" title=\"size\"></a>size</h3><p>icon size</p>\n<ul>\n<li>default: <code>small</code></li>\n<li>enum: <code>large | middle | small | mini | Number</code></li>\n<li>type: <code>String|Number</code> </li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> vcIcon <span class=\"keyword\">from</span> <span class=\"string\">'vc-icon/src'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            type: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            shape: <span class=\"string\">'circle'</span>,</div><div class=\"line\">            size: <span class=\"string\">'large'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcIcon</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">vc-icon</span> </span></div><div class=\"line\">    <span class=\"attr\">:type</span>=<span class=\"string\">\"type\"</span></div><div class=\"line\">    <span class=\"attr\">:shape</span>=<span class=\"string\">\"shape\"</span></div><div class=\"line\">    <span class=\"attr\">:size</span>=<span class=\"string\">\"large\"</span></div><div class=\"line\">&gt;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">vc-icon</span>&gt;</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-icon\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-icon\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-icon/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-icon --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> vcIcon <span class=\"keyword\">from</span> <span class=\"string\">'vc-icon'</span> <span class=\"comment\">// bundle &amp; build version</span></div><div class=\"line\"><span class=\"keyword\">import</span> vcIcon <span class=\"keyword\">from</span> <span class=\"string\">'vc-icon/src'</span> <span class=\"comment\">// recommand for *.vue project</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// CommonJS</span></div><div class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'dist/build.min.js'</span>)</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">// script tag</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'dist/build.min.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"type\"><a href=\"#type\" class=\"headerlink\" title=\"type\"></a>type</h3><p>name of icon, full Bootstrap <a href=\"http://glyphicons.com/\">Glyphicons Halflings</a> icons support</p>\n<ul>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"shape\"><a href=\"#shape\" class=\"headerlink\" title=\"shape\"></a>shape</h3><p>shape of icon</p>\n<ul>\n<li>default: <code>circle</code></li>\n<li>enum: <code>circle | other</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"size\"><a href=\"#size\" class=\"headerlink\" title=\"size\"></a>size</h3><p>icon size</p>\n<ul>\n<li>default: <code>small</code></li>\n<li>enum: <code>large | middle | small | mini | Number</code></li>\n<li>type: <code>String|Number</code> </li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> vcIcon <span class=\"keyword\">from</span> <span class=\"string\">'vc-icon/src'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            type: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            shape: <span class=\"string\">'circle'</span>,</div><div class=\"line\">            size: <span class=\"string\">'large'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcIcon</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">vc-icon</span> </div><div class=\"line\">    <span class=\"attr\">:type</span>=<span class=\"string\">\"type\"</span></div><div class=\"line\">    <span class=\"attr\">:shape</span>=<span class=\"string\">\"shape\"</span></div><div class=\"line\">    <span class=\"attr\">:size</span>=<span class=\"string\">\"large\"</span></div><div class=\"line\">&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">vc-icon</span>&gt;</span></div></pre></td></tr></table></figure>\n"},{"title":"vc-message","type":"guide","order":16,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-message)\n* [npm](https://www.npmjs.com/package/vc-message)\n* [download](https://github.com/iwaimai-bi-fe/vc-message/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-message --save\n```\n\n```html\n//global varibale  vcmessage\n<script src='../dist/vc-message.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok message text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel message text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of message.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcmessage\n    } from '../dist/vc-message.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcmessage\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-message \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-message>\n```\n","source":"guide/vc-message.md","raw":"---\ntitle: vc-message\ntype: guide\norder: 16\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-message)\n* [npm](https://www.npmjs.com/package/vc-message)\n* [download](https://github.com/iwaimai-bi-fe/vc-message/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-message --save\n```\n\n```html\n//global varibale  vcmessage\n<script src='../dist/vc-message.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok message text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel message text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of message.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcmessage\n    } from '../dist/vc-message.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcmessage\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-message \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-message>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-message.html","comments":1,"layout":"page","_id":"cit1gzcdb000wyzjxzbgvofnl","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-message\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-message\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-message/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-message --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcmessage</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-message.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok message text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel message text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of message.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcmessage</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-message.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcmessage</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-message </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-message&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-message\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-message\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-message/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-message --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcmessage</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-message.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok message text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel message text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of message.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcmessage</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-message.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcmessage</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-message </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-message&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-modal","type":"guide","order":18,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-modal)\n* [npm](https://www.npmjs.com/package/vc-modal)\n* [download](https://github.com/iwaimai-bi-fe/vc-modal/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-modal --save\n```\n\n```html\n//global varibale  vcmodal\n<script src='../dist/vc-modal.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok modal text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel modal text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of modal.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcmodal\n    } from '../dist/vc-modal.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcmodal\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-modal \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-modal>\n```\n","source":"guide/vc-modal.md","raw":"---\ntitle: vc-modal\ntype: guide\norder: 18\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-modal)\n* [npm](https://www.npmjs.com/package/vc-modal)\n* [download](https://github.com/iwaimai-bi-fe/vc-modal/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-modal --save\n```\n\n```html\n//global varibale  vcmodal\n<script src='../dist/vc-modal.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok modal text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel modal text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of modal.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcmodal\n    } from '../dist/vc-modal.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcmodal\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-modal \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-modal>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-modal.html","comments":1,"layout":"page","_id":"cit1gzcdh000xyzjxz7x5isle","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-modal\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-modal\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-modal/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-modal --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcmodal</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-modal.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok modal text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel modal text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of modal.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcmodal</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-modal.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcmodal</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-modal </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-modal&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-modal\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-modal\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-modal/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-modal --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcmodal</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-modal.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok modal text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel modal text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of modal.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcmodal</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-modal.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcmodal</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-modal </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-modal&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-notification","type":"guide","order":20,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-notification)\n* [npm](https://www.npmjs.com/package/vc-notification)\n* [download](https://github.com/iwaimai-bi-fe/vc-notification/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-notification --save\n```\n\n```html\n//global varibale  vcnotification\n<script src='../dist/vc-notification.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok notification text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel notification text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of notification.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcnotification\n    } from '../dist/vc-notification.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcnotification\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-notification \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-notification>\n```\n","source":"guide/vc-notification.md","raw":"---\ntitle: vc-notification\ntype: guide\norder: 20\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-notification)\n* [npm](https://www.npmjs.com/package/vc-notification)\n* [download](https://github.com/iwaimai-bi-fe/vc-notification/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-notification --save\n```\n\n```html\n//global varibale  vcnotification\n<script src='../dist/vc-notification.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok notification text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel notification text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of notification.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcnotification\n    } from '../dist/vc-notification.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcnotification\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-notification \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-notification>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-notification.html","comments":1,"layout":"page","_id":"cit1gzcdj000yyzjxt801hk2j","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-notification\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-notification\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-notification/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-notification --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcnotification</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-notification.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok notification text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel notification text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of notification.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcnotification</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-notification.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcnotification</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-notification </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-notification&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-notification\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-notification\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-notification/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-notification --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcnotification</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-notification.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok notification text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel notification text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of notification.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcnotification</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-notification.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcnotification</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-notification </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-notification&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-pagination","type":"guide","order":28,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-pagination)\n* [npm](https://www.npmjs.com/package/vc-pagination)\n* [download](https://github.com/iwaimai-bi-fe/vc-pagination/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-pagination --save\n```\n\n```html\n//global varibale  vcpagination\n<script src='../dist/vc-pagination.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok pagination text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel pagination text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of pagination.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcpagination\n    } from '../dist/vc-pagination.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcpagination\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-pagination \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-pagination>\n```\n","source":"guide/vc-pagination.md","raw":"---\ntitle: vc-pagination\ntype: guide\norder: 28\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-pagination)\n* [npm](https://www.npmjs.com/package/vc-pagination)\n* [download](https://github.com/iwaimai-bi-fe/vc-pagination/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-pagination --save\n```\n\n```html\n//global varibale  vcpagination\n<script src='../dist/vc-pagination.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok pagination text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel pagination text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of pagination.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcpagination\n    } from '../dist/vc-pagination.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcpagination\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-pagination \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-pagination>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-pagination.html","comments":1,"layout":"page","_id":"cit1gzcdl000zyzjxh9vxpeyd","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-pagination\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-pagination\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-pagination/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-pagination --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcpagination</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-pagination.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok pagination text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel pagination text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of pagination.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcpagination</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-pagination.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcpagination</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-pagination </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-pagination&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-pagination\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-pagination\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-pagination/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-pagination --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcpagination</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-pagination.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok pagination text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel pagination text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of pagination.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcpagination</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-pagination.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcpagination</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-pagination </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-pagination&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-popover","type":"guide","order":21,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-popover)\n* [npm](https://www.npmjs.com/package/vc-popover)\n* [download](https://github.com/iwaimai-bi-fe/vc-popover/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-popover --save\n```\n\n```html\n//global varibale  vcpopover\n<script src='../dist/vc-popover.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok popover text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel popover text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of popover.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcpopover\n    } from '../dist/vc-popover.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcpopover\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-popover \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-popover>\n```\n","source":"guide/vc-popover.md","raw":"---\ntitle: vc-popover\ntype: guide\norder: 21\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-popover)\n* [npm](https://www.npmjs.com/package/vc-popover)\n* [download](https://github.com/iwaimai-bi-fe/vc-popover/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-popover --save\n```\n\n```html\n//global varibale  vcpopover\n<script src='../dist/vc-popover.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok popover text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel popover text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of popover.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcpopover\n    } from '../dist/vc-popover.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcpopover\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-popover \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-popover>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-popover.html","comments":1,"layout":"page","_id":"cit1gzcdo0010yzjxx7hvs2kh","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-popover\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-popover\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-popover/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-popover --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcpopover</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-popover.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok popover text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel popover text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of popover.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcpopover</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-popover.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcpopover</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-popover </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-popover&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-popover\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-popover\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-popover/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-popover --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcpopover</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-popover.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok popover text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel popover text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of popover.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcpopover</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-popover.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcpopover</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-popover </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-popover&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-progress","type":"guide","order":23,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-progress)\n* [npm](https://www.npmjs.com/package/vc-progress)\n* [download](https://github.com/iwaimai-bi-fe/vc-progress/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-progress --save\n```\n\n```html\n//global varibale  vcprogress\n<script src='../dist/vc-progress.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok progress text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel progress text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of progress.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcprogress\n    } from '../dist/vc-progress.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcprogress\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-progress \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-progress>\n```\n","source":"guide/vc-progress.md","raw":"---\ntitle: vc-progress\ntype: guide\norder: 23\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-progress)\n* [npm](https://www.npmjs.com/package/vc-progress)\n* [download](https://github.com/iwaimai-bi-fe/vc-progress/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-progress --save\n```\n\n```html\n//global varibale  vcprogress\n<script src='../dist/vc-progress.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok progress text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel progress text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of progress.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcprogress\n    } from '../dist/vc-progress.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcprogress\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-progress \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-progress>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-progress.html","comments":1,"layout":"page","_id":"cit1gzcdp0011yzjx89ymdxaj","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-progress\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-progress\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-progress/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-progress --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcprogress</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-progress.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok progress text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel progress text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of progress.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcprogress</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-progress.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcprogress</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-progress </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-progress&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-progress\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-progress\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-progress/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-progress --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcprogress</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-progress.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok progress text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel progress text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of progress.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcprogress</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-progress.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcprogress</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-progress </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-progress&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-radio","type":"guide","order":7,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-radio)\n* [npm](https://www.npmjs.com/package/vc-radio)\n* [download](https://github.com/iwaimai-bi-fe/vc-radio/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-radio --save\n```\n\n```html\n//global varibale  vcradio\n<script src='../dist/vc-radio.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok radio text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel radio text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of radio.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcradio\n    } from '../dist/vc-radio.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcradio\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-radio \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-radio>\n```\n","source":"guide/vc-radio.md","raw":"---\ntitle: vc-radio\ntype: guide\norder: 7\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-radio)\n* [npm](https://www.npmjs.com/package/vc-radio)\n* [download](https://github.com/iwaimai-bi-fe/vc-radio/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-radio --save\n```\n\n```html\n//global varibale  vcradio\n<script src='../dist/vc-radio.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok radio text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel radio text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of radio.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcradio\n    } from '../dist/vc-radio.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcradio\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-radio \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-radio>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-radio.html","comments":1,"layout":"page","_id":"cit1gzcdr0012yzjxz7d2goiz","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-radio\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-radio\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-radio/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-radio --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcradio</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-radio.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok radio text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel radio text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of radio.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcradio</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-radio.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcradio</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-radio </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-radio&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-radio\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-radio\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-radio/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-radio --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcradio</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-radio.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok radio text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel radio text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of radio.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcradio</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-radio.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcradio</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-radio </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-radio&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-select","type":"guide","order":4,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-select)\n* [npm](https://www.npmjs.com/package/vc-select)\n* [download](https://github.com/iwaimai-bi-fe/vc-select/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-select --save\n```\n\n```html\n//global varibale  vcselect\n<script src='../dist/vc-select.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok select text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel select text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of select.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcselect\n    } from '../dist/vc-select.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcselect\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-select \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-select>\n```\n","source":"guide/vc-select.md","raw":"---\ntitle: vc-select\ntype: guide\norder: 4\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-select)\n* [npm](https://www.npmjs.com/package/vc-select)\n* [download](https://github.com/iwaimai-bi-fe/vc-select/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-select --save\n```\n\n```html\n//global varibale  vcselect\n<script src='../dist/vc-select.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok select text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel select text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of select.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcselect\n    } from '../dist/vc-select.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcselect\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-select \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-select>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-select.html","comments":1,"layout":"page","_id":"cit1gzcdt0013yzjxprf98oat","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-select\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-select\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-select/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-select --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcselect</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-select.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok select text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel select text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of select.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcselect</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-select.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcselect</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-select </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-select&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-select\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-select\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-select/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-select --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcselect</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-select.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok select text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel select text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of select.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcselect</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-select.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcselect</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-select </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-select&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-spin","type":"guide","order":25,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-spin)\n* [npm](https://www.npmjs.com/package/vc-spin)\n* [download](https://github.com/iwaimai-bi-fe/vc-spin/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-spin --save\n```\n\n```html\n//global varibale  vcspin\n<script src='../dist/vc-spin.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok spin text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel spin text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of spin.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcspin\n    } from '../dist/vc-spin.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcspin\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-spin \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-spin>\n```\n","source":"guide/vc-spin.md","raw":"---\ntitle: vc-spin\ntype: guide\norder: 25\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-spin)\n* [npm](https://www.npmjs.com/package/vc-spin)\n* [download](https://github.com/iwaimai-bi-fe/vc-spin/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-spin --save\n```\n\n```html\n//global varibale  vcspin\n<script src='../dist/vc-spin.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok spin text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel spin text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of spin.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vcspin\n    } from '../dist/vc-spin.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vcspin\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-spin \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-spin>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-spin.html","comments":1,"layout":"page","_id":"cit1gzce00014yzjxttdot6pl","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-spin\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-spin\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-spin/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-spin --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcspin</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-spin.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok spin text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel spin text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of spin.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcspin</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-spin.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcspin</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-spin </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-spin&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-spin\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-spin\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-spin/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-spin --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vcspin</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-spin.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok spin text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel spin text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of spin.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vcspin</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-spin.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vcspin</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-spin </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-spin&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-table","type":"guide","order":24,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-table)\n* [npm](https://www.npmjs.com/package/vc-table)\n* [download](https://github.com/iwaimai-bi-fe/vc-table/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-table --save\n```\n\n```html\n//global varibale  vctable\n<script src='../dist/vc-table.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok table text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel table text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of table.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vctable\n    } from '../dist/vc-table.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vctable\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-table \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-table>\n```\n","source":"guide/vc-table.md","raw":"---\ntitle: vc-table\ntype: guide\norder: 24\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-table)\n* [npm](https://www.npmjs.com/package/vc-table)\n* [download](https://github.com/iwaimai-bi-fe/vc-table/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-table --save\n```\n\n```html\n//global varibale  vctable\n<script src='../dist/vc-table.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok table text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel table text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of table.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vctable\n    } from '../dist/vc-table.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vctable\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-table \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-table>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-table.html","comments":1,"layout":"page","_id":"cit1gzce40015yzjxotg9ynak","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-table\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-table\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-table/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-table --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vctable</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-table.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok table text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel table text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of table.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vctable</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-table.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vctable</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-table </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-table&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-table\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-table\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-table/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-table --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vctable</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-table.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok table text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel table text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of table.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vctable</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-table.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vctable</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-table </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-table&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-tabs","type":"guide","order":29,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-tabs)\n* [npm](https://www.npmjs.com/package/vc-tabs)\n* [download](https://github.com/iwaimai-bi-fe/vc-tabs/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-tabs --save\n```\n\n```html\n//global varibale  vctabs\n<script src='../dist/vc-tabs.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok tabs text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel tabs text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of tabs.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vctabs\n    } from '../dist/vc-tabs.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vctabs\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-tabs \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-tabs>\n```\n","source":"guide/vc-tabs.md","raw":"---\ntitle: vc-tabs\ntype: guide\norder: 29\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-tabs)\n* [npm](https://www.npmjs.com/package/vc-tabs)\n* [download](https://github.com/iwaimai-bi-fe/vc-tabs/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-tabs --save\n```\n\n```html\n//global varibale  vctabs\n<script src='../dist/vc-tabs.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok tabs text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel tabs text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of tabs.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vctabs\n    } from '../dist/vc-tabs.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vctabs\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-tabs \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-tabs>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-tabs.html","comments":1,"layout":"page","_id":"cit1gzce60016yzjxkuf9394a","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tabs\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-tabs\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tabs/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-tabs --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vctabs</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-tabs.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok tabs text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel tabs text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of tabs.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vctabs</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-tabs.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vctabs</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-tabs </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-tabs&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tabs\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-tabs\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tabs/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-tabs --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vctabs</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-tabs.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok tabs text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel tabs text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of tabs.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vctabs</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-tabs.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vctabs</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-tabs </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-tabs&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-tag","type":"guide","order":12,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-tag)\n* [npm](https://www.npmjs.com/package/vc-tag)\n* [download](https://github.com/iwaimai-bi-fe/vc-tag/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-tag --save\n```\n\n```html\n//global varibale  vctag\n<script src='../dist/vc-tag.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok tag text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel tag text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of tag.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vctag\n    } from '../dist/vc-tag.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vctag\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-tag \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-tag>\n```\n","source":"guide/vc-tag.md","raw":"---\ntitle: vc-tag\ntype: guide\norder: 12\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-tag)\n* [npm](https://www.npmjs.com/package/vc-tag)\n* [download](https://github.com/iwaimai-bi-fe/vc-tag/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-tag --save\n```\n\n```html\n//global varibale  vctag\n<script src='../dist/vc-tag.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok tag text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel tag text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of tag.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vctag\n    } from '../dist/vc-tag.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vctag\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-tag \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-tag>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-tag.html","comments":1,"layout":"page","_id":"cit1gzce70017yzjxe9alxnmp","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tag\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-tag\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tag/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-tag --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vctag</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-tag.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok tag text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel tag text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of tag.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vctag</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-tag.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vctag</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-tag </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-tag&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tag\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-tag\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tag/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-tag --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vctag</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-tag.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok tag text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel tag text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of tag.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vctag</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-tag.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vctag</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-tag </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-tag&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-toast","type":"guide","order":17,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-toast)\n* [npm](https://www.npmjs.com/package/vc-toast)\n* [download](https://github.com/iwaimai-bi-fe/vc-toast/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-toast --save\n```\n\n```html\n//global varibale  vctoast\n<script src='../dist/vc-toast.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok toast text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel toast text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of toast.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vctoast\n    } from '../dist/vc-toast.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vctoast\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-toast \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-toast>\n```\n","source":"guide/vc-toast.md","raw":"---\ntitle: vc-toast\ntype: guide\norder: 17\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-toast)\n* [npm](https://www.npmjs.com/package/vc-toast)\n* [download](https://github.com/iwaimai-bi-fe/vc-toast/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-toast --save\n```\n\n```html\n//global varibale  vctoast\n<script src='../dist/vc-toast.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok toast text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel toast text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of toast.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vctoast\n    } from '../dist/vc-toast.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vctoast\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-toast \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-toast>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-toast.html","comments":1,"layout":"page","_id":"cit1gzce80018yzjx6t3g1lnz","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-toast\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-toast\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-toast/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-toast --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vctoast</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-toast.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok toast text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel toast text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of toast.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vctoast</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-toast.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vctoast</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-toast </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-toast&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-toast\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-toast\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-toast/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-toast --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vctoast</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-toast.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok toast text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel toast text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of toast.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vctoast</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-toast.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vctoast</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-toast </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-toast&gt;</div></pre></td></tr></table></figure>\n"},{"title":"vc-tooltip","type":"guide","order":22,"_content":"\n* [github](https://github.com/iwaimai-bi-fe/vc-tooltip)\n* [npm](https://www.npmjs.com/package/vc-tooltip)\n* [download](https://github.com/iwaimai-bi-fe/vc-tooltip/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-tooltip --save\n```\n\n```html\n//global varibale  vctooltip\n<script src='../dist/vc-tooltip.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok tooltip text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel tooltip text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of tooltip.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vctooltip\n    } from '../dist/vc-tooltip.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vctooltip\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-tooltip \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-tooltip>\n```\n","source":"guide/vc-tooltip.md","raw":"---\ntitle: vc-tooltip\ntype: guide\norder: 22\n---\n\n* [github](https://github.com/iwaimai-bi-fe/vc-tooltip)\n* [npm](https://www.npmjs.com/package/vc-tooltip)\n* [download](https://github.com/iwaimai-bi-fe/vc-tooltip/archive/master.zip)\n\n## Install\n\n```npm\nnpm install vc-tooltip --save\n```\n\n```html\n//global varibale  vctooltip\n<script src='../dist/vc-tooltip.js'></script>\n```\n\n## Usage\n\n## props\n\n### okText\n\ncustom the ok tooltip text.\n\n* default: `确定`\n* type: `String`\n\n### cancelText\n\ncustom the cancel tooltip text.\n\n* default: `取消`\n* type: `String`\n\n### visiable\n\ncontrol the visiable of tooltip.\n\n* default: `false`\n* type: `Boolean` \n\n### onOk | optional\n\nthe callback for onOk.\n\n* type: `Function`\n\n### onCancel | optional\n\nthe callback of onCancel\n\n* type: `Function`\n\n\n## example\n\n* js\n\n```js\nimport Vue from 'vue'\nimport {\n        vctooltip\n    } from '../dist/vc-tooltip.js'\n\nnew Vue({\n    el: '#app',\n    data () {\n        return {\n            isShow: true,\n            okText: 'ok',\n            cancelText: 'cancel'\n        }\n    },\n    components: {\n        vctooltip\n    },\n    methods: {\n        onOk () {\n\n        },\n        onCancel () {\n\n        }\n    },\n    ready () {\n    }\n})\n```\n\n```vue\n<vc-tooltip \n    :visible='isShow'\n    :okText='okText'\n    :cancelText='cancelText'\n    :onOk='onOk'\n    :onCancel='onCancel'>\n    <div class=\"your-html\">\n        \n    </div>     \n</vc-tooltip>\n```\n","date":"2016-09-13T12:43:34.021Z","updated":"2016-09-13T12:43:28.805Z","path":"guide/vc-tooltip.html","comments":1,"layout":"page","_id":"cit1gzce90019yzjxag3761c1","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tooltip\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-tooltip\" target=\"_blank\" rel=\"external\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tooltip/archive/master.zip\" target=\"_blank\" rel=\"external\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-tooltip --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vctooltip</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-tooltip.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok tooltip text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel tooltip text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of tooltip.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vctooltip</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-tooltip.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vctooltip</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-tooltip </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-tooltip&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tooltip\">github</a></li>\n<li><a href=\"https://www.npmjs.com/package/vc-tooltip\">npm</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tooltip/archive/master.zip\">download</a></li>\n</ul>\n<h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm install vc-tooltip --save</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\">//global varibale  vctooltip</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">'../dist/vc-tooltip.js'</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h2 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h2><h3 id=\"okText\"><a href=\"#okText\" class=\"headerlink\" title=\"okText\"></a>okText</h3><p>custom the ok tooltip text.</p>\n<ul>\n<li>default: <code>确定</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"cancelText\"><a href=\"#cancelText\" class=\"headerlink\" title=\"cancelText\"></a>cancelText</h3><p>custom the cancel tooltip text.</p>\n<ul>\n<li>default: <code>取消</code></li>\n<li>type: <code>String</code></li>\n</ul>\n<h3 id=\"visiable\"><a href=\"#visiable\" class=\"headerlink\" title=\"visiable\"></a>visiable</h3><p>control the visiable of tooltip.</p>\n<ul>\n<li>default: <code>false</code></li>\n<li>type: <code>Boolean</code> </li>\n</ul>\n<h3 id=\"onOk-optional\"><a href=\"#onOk-optional\" class=\"headerlink\" title=\"onOk | optional\"></a>onOk | optional</h3><p>the callback for onOk.</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h3 id=\"onCancel-optional\"><a href=\"#onCancel-optional\" class=\"headerlink\" title=\"onCancel | optional\"></a>onCancel | optional</h3><p>the callback of onCancel</p>\n<ul>\n<li>type: <code>Function</code></li>\n</ul>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><ul>\n<li>js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> &#123;</div><div class=\"line\">        vctooltip</div><div class=\"line\">    &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../dist/vc-tooltip.js'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    el: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    data () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">            isShow: <span class=\"literal\">true</span>,</div><div class=\"line\">            okText: <span class=\"string\">'ok'</span>,</div><div class=\"line\">            cancelText: <span class=\"string\">'cancel'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    components: &#123;</div><div class=\"line\">        vctooltip</div><div class=\"line\">    &#125;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        onOk () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        onCancel () &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    ready () &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;vc-tooltip </div><div class=\"line\">    :visible=&apos;isShow&apos;</div><div class=\"line\">    :okText=&apos;okText&apos;</div><div class=\"line\">    :cancelText=&apos;cancelText&apos;</div><div class=\"line\">    :onOk=&apos;onOk&apos;</div><div class=\"line\">    :onCancel=&apos;onCancel&apos;&gt;</div><div class=\"line\">    &lt;div class=&quot;your-html&quot;&gt;</div><div class=\"line\">        </div><div class=\"line\">    &lt;/div&gt;     </div><div class=\"line\">&lt;/vc-tooltip&gt;</div></pre></td></tr></table></figure>\n"}],"Post":[{"title":"vc-bootstrap","date":"2016-08-19T02:00:00.000Z","_content":"\n* [vc-tabs](https://github.com/iwaimai-bi-fe/vc-tabs)\n* [vc-pagination](https://github.com/iwaimai-bi-fe/vc-pagination)\n* [vc-easyclearinput](https://github.com/iwaimai-bi-fe/vc-easyclearinput)\n* [vc-select](https://github.com/iwaimai-bi-fe/vc-select)\n* [vc-echarts](https://github.com/iwaimai-bi-fe/vc-echarts)\n* [vc-modal-bs](https://github.com/iwaimai-bi-fe/vc-modal-bs)\n* [vc-tab-bs](https://github.com/iwaimai-bi-fe/vc-tab-bs)\n* [vc-pagination-bs](https://github.com/iwaimai-bi-fe/vc-pagination-bs)\n\n<!-- more -->\n","source":"_posts/vc-bootstrap.md","raw":"---\ntitle: vc-bootstrap\ndate: 2016-08-19 10:00:00\n---\n\n* [vc-tabs](https://github.com/iwaimai-bi-fe/vc-tabs)\n* [vc-pagination](https://github.com/iwaimai-bi-fe/vc-pagination)\n* [vc-easyclearinput](https://github.com/iwaimai-bi-fe/vc-easyclearinput)\n* [vc-select](https://github.com/iwaimai-bi-fe/vc-select)\n* [vc-echarts](https://github.com/iwaimai-bi-fe/vc-echarts)\n* [vc-modal-bs](https://github.com/iwaimai-bi-fe/vc-modal-bs)\n* [vc-tab-bs](https://github.com/iwaimai-bi-fe/vc-tab-bs)\n* [vc-pagination-bs](https://github.com/iwaimai-bi-fe/vc-pagination-bs)\n\n<!-- more -->\n","slug":"vc-bootstrap","published":1,"updated":"2016-09-13T12:42:51.100Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cit1gzc4f0002yzjxbg985xw9","content":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tabs\" target=\"_blank\" rel=\"external\">vc-tabs</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-pagination\" target=\"_blank\" rel=\"external\">vc-pagination</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-easyclearinput\" target=\"_blank\" rel=\"external\">vc-easyclearinput</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-select\" target=\"_blank\" rel=\"external\">vc-select</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-echarts\" target=\"_blank\" rel=\"external\">vc-echarts</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-modal-bs\" target=\"_blank\" rel=\"external\">vc-modal-bs</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tab-bs\" target=\"_blank\" rel=\"external\">vc-tab-bs</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-pagination-bs\" target=\"_blank\" rel=\"external\">vc-pagination-bs</a></li>\n</ul>\n<a id=\"more\"></a>\n","excerpt":"<ul>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tabs\">vc-tabs</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-pagination\">vc-pagination</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-easyclearinput\">vc-easyclearinput</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-select\">vc-select</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-echarts\">vc-echarts</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-modal-bs\">vc-modal-bs</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-tab-bs\">vc-tab-bs</a></li>\n<li><a href=\"https://github.com/iwaimai-bi-fe/vc-pagination-bs\">vc-pagination-bs</a></li>\n</ul>","more":""}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}